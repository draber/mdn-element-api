{
	"/web/html/element/*": {
		"name": "HTML:*",
		"status": "virtual",
		"summary": "Container to hold the global attributes of all HTML elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML"
		],
		"interface": "HTMLElement",
		"attributes": {
			"accesskey": {
				"name": "accesskey",
				"status": "living",
				"summary": "The `accesskey` global attribute provides a hint for generating a keyboard shortcut for the current element. The attribute value must consist of a single printable character (which includes accented and other characters that can be generated by the keyboard).",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"accesskey"
				]
			},
			"autocapitalize": {
				"name": "autocapitalize",
				"status": "living",
				"summary": "The `autocapitalize` global attribute is an enumerated attribute that controls whether and how text input is automatically capitalized as it is entered/edited by the user.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"Autocapitalize",
					"HTML"
				]
			},
			"autofocus": {
				"name": "autofocus",
				"status": "living",
				"summary": "The `autofocus` global attribute is a Boolean attribute indicating that an element should be focused on page load, or when the dialog that it is part of is displayed.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"Autofocus",
					"HTML"
				]
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "The `class` global attribute is a space-separated list of the case-sensitive classes of the element. Classes allow CSS and Javascript to select and access specific elements via the class selectors or functions like the DOM method document.getElementsByClassName.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"contenteditable": {
				"name": "contenteditable",
				"status": "living",
				"summary": "The `contenteditable` global attribute is an enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"Editing",
					"HTML",
					"Text Editing",
					"contenteditable",
					"text entry",
					"text input"
				]
			},
			"contextmenu": {
				"name": "contextmenu",
				"status": "deprecated",
				"summary": "Warning: The contextmenu attribute is obsolete and will be removed from all browsers",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contextmenu",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"Deprecated",
					"HTML",
					"contextmenu"
				]
			},
			"data-*": {
				"name": "data-*",
				"status": "living",
				"summary": "The `data-*` global attributes form a class of attributes called custom data attributes, that allow proprietary information to be exchanged between the HTML and its DOM representation by scripts.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "The `dir` global attribute is an enumerated attribute that indicates the directionality of the element's text.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"BiDi",
					"HTML"
				]
			},
			"draggable": {
				"name": "draggable",
				"status": "living",
				"summary": "The draggable global attribute is an enumerated attribute that indicates whether the element can be dragged, either with native browser behavior or the HTML Drag and Drop API.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"enterkeyhint": {
				"name": "enterkeyhint",
				"status": "living",
				"summary": "The `enterkeyhint` global attribute is an enumerated attribute defining what action label (or icon) to present for the enter key on virtual keyboards.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"exportparts": {
				"name": "exportparts",
				"status": "experimental",
				"summary": "Used to transitively export shadow parts from a nested shadow tree into a containing light tree.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": []
			},
			"hidden": {
				"name": "hidden",
				"status": "living",
				"summary": "The `hidden` global attribute is a Boolean attribute indicating that the element is not yet, or is no longer, relevant. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. Browsers won't render elements with the `hidden` attribute set.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": []
			},
			"inputmode": {
				"name": "inputmode",
				"status": "living",
				"summary": "The `inputmode` global attribute is an enumerated attribute that hints at the type of data that might be entered by the user while editing the element or its contents. This allows a browser to display an appropriate virtual keyboard.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"Editing",
					"Forms",
					"HTML",
					"Input",
					"Text",
					"contenteditable",
					"global",
					"inputmode",
					"text input"
				]
			},
			"is": {
				"name": "is",
				"status": "living",
				"summary": "The `is` global attribute allows you to specify that a standard HTML element should behave like a defined custom built-in element (see Using custom elements for more details).",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"is"
				]
			},
			"itemid": {
				"name": "itemid",
				"status": "living",
				"summary": "The `itemid` global attribute provides microdata in the form of a unique, global identifier of an item.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemid",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"HTML Microdata",
					"Microdata",
					"itemid"
				]
			},
			"itemprop": {
				"name": "itemprop",
				"status": "living",
				"summary": "The `itemprop` global attribute is used to add properties to an item. Every HTML element can have an `itemprop` attribute specified, and an `itemprop` consists of a name-value pair. Each name-value pair is called a property, and a group of one or more properties forms an item. Property values are either a string or a URL and can be associated with a very wide range of elements including audio, embed, iframe, img, link, object, source , track, and video.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"HTML Microdata",
					"Microdata"
				]
			},
			"itemref": {
				"name": "itemref",
				"status": "living",
				"summary": "Properties that are not descendants of an element with the itemscope attribute can be associated with an item using the global attribute `itemref`.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemref",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"HTML Microdata",
					"Microdata"
				]
			},
			"itemscope": {
				"name": "itemscope",
				"status": "living",
				"summary": "`itemscope` is a boolean global attribute that defines the scope of associated metadata. Specifying the `itemscope` attribute for an element creates a new item, which results in a number of name-value pairs that are associated with the element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemscope",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"HTML Microdata",
					"Microdata"
				]
			},
			"itemtype": {
				"name": "itemtype",
				"status": "living",
				"summary": "The global attribute `itemtype` specifies the URL of the vocabulary that will be used to define `itemprop`'s (item properties) in the data structure.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemtype",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"HTML Microdata",
					"Microdata"
				]
			},
			"lang": {
				"name": "lang",
				"status": "living",
				"summary": "The `lang` global attribute helps define the language of an element: the language that non-editable elements are written in, or the language that the editable elements should be written in by the user. The attribute contains a single \"language tag\" in the format defined in RFC 5646 \"Tags for Identifying Languages (also known as BCP 47)\".",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"nonce": {
				"name": "nonce",
				"status": "living",
				"summary": "The `nonce` global attribute is a content attribute defining a cryptographic nonce (\"number used once\") which can be used by Content Security Policy to determine whether or not a given fetch will be allowed to proceed for a given element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"part": {
				"name": "part",
				"status": "living",
				"summary": "The `part` global attribute contains a space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the ::part pseudo-element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"part"
				]
			},
			"slot": {
				"name": "slot",
				"status": "living",
				"summary": "The `slot` global attribute assigns a slot in a shadow DOM shadow tree to an element: An element with a `slot` attribute is assigned to the slot created by the slot element whose name attribute's value matches that `slot` attribute's value.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"spellcheck": {
				"name": "spellcheck",
				"status": "living",
				"summary": "The `spellcheck` global attribute is an enumerated attribute defines whether the element may be checked for spelling errors.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "The `style` global attribute contains CSS styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the style element have mainly the purpose of allowing for quick styling, for example for testing purposes.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"tabindex": {
				"name": "tabindex",
				"status": "living",
				"summary": "The `tabindex` global attribute indicates that its element can be focused, and where it participates in sequential keyboard navigation (usually with the <kbd>Tab</kbd> key, hence the name).",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML"
				]
			},
			"title": {
				"name": "title",
				"status": "living",
				"summary": "The `title` global attribute contains text representing advisory information related to the element it belongs to.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"HTML",
					"Title"
				]
			},
			"translate": {
				"name": "translate",
				"status": "experimental",
				"summary": "The `translate` global attribute is an enumerated attribute that is used to specify whether an element's translatable attribute values and its Text node children should be translated when the page is localized, or whether to leave them unchanged.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/translate",
				"type": "attribute",
				"scope": "HTML:global:generic",
				"tags": [
					"Experimental",
					"HTML"
				]
			},
			"xml:lang": {
				"name": "xml:lang",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onabort": {
				"name": "onabort",
				"status": "experimental",
				"summary": "The `onabort` property of the GlobalEventHandlers mixin is the event handler for processing abort events sent to the window.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onabort",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"Experimental",
					"GlobalEventHandlers",
					"Property",
					"Window"
				]
			},
			"onautocomplete": {
				"name": "onautocomplete",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onautocompleteerror": {
				"name": "onautocompleteerror",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onblur": {
				"name": "onblur",
				"status": "living",
				"summary": "The `onblur` property of the GlobalEventHandlers mixin is the event handler for processing blur events. It's available on Element, Document, and Window.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onblur",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"oncancel": {
				"name": "oncancel",
				"status": "living",
				"summary": "The `oncancel` property of the GlobalEventHandlers mixin is an event handler for processing cancel events sent to a dialog element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncancel",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Dialog",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"oncanplay": {
				"name": "oncanplay",
				"status": "living",
				"summary": "The `oncanplay` property of the GlobalEventHandlers mixin is the event handler for processing canplay events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplay",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"oncanplaythrough": {
				"name": "oncanplaythrough",
				"status": "living",
				"summary": "The `oncanplaythrough` property of the GlobalEventHandlers mixin is the event handler for processing canplaythrough events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplaythrough",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onchange": {
				"name": "onchange",
				"status": "living",
				"summary": "The `onchange` property of the GlobalEventHandlers mixin is an event handler for processing change events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onchange",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onclick": {
				"name": "onclick",
				"status": "living",
				"summary": "The `onclick` property of the GlobalEventHandlers mixin is the event handler for processing Element/click_event events on a given element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onclose": {
				"name": "onclose",
				"status": "experimental",
				"summary": "The `onclose` property of the GlobalEventHandlers mixin is an event handler for processing close events sent to a dialog element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclose",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Dialog",
					"Event Handler",
					"Experimental",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"oncontextmenu": {
				"name": "oncontextmenu",
				"status": "living",
				"summary": "The `oncontextmenu` property of the GlobalEventHandlers mixin is an event handler that processes contextmenu events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncontextmenu",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"oncuechange": {
				"name": "oncuechange",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"ondblclick": {
				"name": "ondblclick",
				"status": "living",
				"summary": "The `ondblclick` property of the GlobalEventHandlers mixin is an event handler that processes dblclick events on the given element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondblclick",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"ondrag": {
				"name": "ondrag",
				"status": "living",
				"summary": "A global event handler for the drag event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrag",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"HTML DOM",
					"drag and drop"
				]
			},
			"ondragend": {
				"name": "ondragend",
				"status": "living",
				"summary": "A global event handler for the dragend event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragend",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"HTML DOM",
					"drag and drop"
				]
			},
			"ondragenter": {
				"name": "ondragenter",
				"status": "living",
				"summary": "A global event handler for the dragenter event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragenter",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"HTML DOM",
					"drag and drop"
				]
			},
			"ondragleave": {
				"name": "ondragleave",
				"status": "living",
				"summary": "A global event handler for the dragleave event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragleave",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"HTML DOM",
					"drag and drop"
				]
			},
			"ondragover": {
				"name": "ondragover",
				"status": "living",
				"summary": "A global event handler for the dragover event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragover",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"HTML DOM",
					"drag and drop"
				]
			},
			"ondragstart": {
				"name": "ondragstart",
				"status": "living",
				"summary": "A global event handler for the dragstart event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragstart",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"HTML DOM",
					"drag and drop"
				]
			},
			"ondrop": {
				"name": "ondrop",
				"status": "living",
				"summary": "A global event handler for the drop event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"HTML DOM",
					"drag and drop"
				]
			},
			"ondurationchange": {
				"name": "ondurationchange",
				"status": "living",
				"summary": "The `ondurationchange` property of the GlobalEventHandlers mixin is the event handler for processing durationchange events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondurationchange",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onemptied": {
				"name": "onemptied",
				"status": "living",
				"summary": "The `onemptied` property sets and returns the event handler for the `emptied` event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onemptied",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onended": {
				"name": "onended",
				"status": "living",
				"summary": "The `onended` property of the GlobalEventHandlers mixin is the event handler for processing ended events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onended",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onerror": {
				"name": "onerror",
				"status": "living",
				"summary": "The `onerror` property of the GlobalEventHandlers mixin is an event handler that processes error events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onfocus": {
				"name": "onfocus",
				"status": "living",
				"summary": "The `onfocus` property of the GlobalEventHandlers mixin is an event handler that processes focus events on the given element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onfocus",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"oninput": {
				"name": "oninput",
				"status": "living",
				"summary": "The `oninput` property of the GlobalEventHandlers mixin is an event handler that processes input events on the input, select, and textarea elements. It also handles these events on elements where {{domxref(\"HTMLElement.contentEditable\",",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninput",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"oninvalid": {
				"name": "oninvalid",
				"status": "living",
				"summary": "The `oninvalid` property of the GlobalEventHandlers mixin is an event handler that processes invalid events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninvalid",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onkeydown": {
				"name": "onkeydown",
				"status": "living",
				"summary": "The `onkeydown` property of the GlobalEventHandlers mixin is an event handler that processes keydown events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeydown",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property",
					"events"
				]
			},
			"onkeypress": {
				"name": "onkeypress",
				"status": "deprecated",
				"summary": "The `onkeypress` property of the GlobalEventHandlers mixin is an event handler that processes keypress events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeypress",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property",
					"Deprecated"
				]
			},
			"onkeyup": {
				"name": "onkeyup",
				"status": "living",
				"summary": "The `onkeyup` property of the GlobalEventHandlers mixin is an event handler that processes keyup events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeyup",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onload": {
				"name": "onload",
				"status": "living",
				"summary": "The `onload` property of the GlobalEventHandlers mixin is an event handler that processes Window/load_event events on a Window, XMLHttpRequest, img element, etc.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onload",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property",
					"onload"
				]
			},
			"onloadeddata": {
				"name": "onloadeddata",
				"status": "living",
				"summary": "The `onloadeddata` property of the GlobalEventHandlers mixin is the event handler for processing loadeddata events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadeddata",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onloadedmetadata": {
				"name": "onloadedmetadata",
				"status": "living",
				"summary": "The `onloadedmetadata` property of the GlobalEventHandlers mixin is the event handler for processing loadedmetadata events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadedmetadata",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onloadstart": {
				"name": "onloadstart",
				"status": "living",
				"summary": "The `onloadstart` property of the GlobalEventHandlers mixin is an event handler representing the code to be called when the loadstart event is raised (when progress has begun on the loading of a resource.)",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadstart",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property",
					"events",
					"onloadstart"
				]
			},
			"onmousedown": {
				"name": "onmousedown",
				"status": "living",
				"summary": "The `onmousedown` property of the GlobalEventHandlers mixin is an event handler that processes mousedown events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousedown",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onmouseenter": {
				"name": "onmouseenter",
				"status": "living",
				"summary": "The `onmouseenter` property of the GlobalEventHandlers mixin is the event handler for processing mouseenter events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseenter",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onmouseleave": {
				"name": "onmouseleave",
				"status": "living",
				"summary": "The `onmouseleave` property of the GlobalEventHandlers mixin is the event handler for processing mouseleave events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseleave",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onmousemove": {
				"name": "onmousemove",
				"status": "living",
				"summary": "The `onmousemove` property of the GlobalEventHandlers mixin is an event handler that processes mousemove events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousemove",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onmouseout": {
				"name": "onmouseout",
				"status": "living",
				"summary": "The `onmouseout` property of the GlobalEventHandlers mixin is an event handler that processes mouseout events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseout",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onmouseover": {
				"name": "onmouseover",
				"status": "living",
				"summary": "The `onmouseover` property of the GlobalEventHandlers mixin is an event handler that processes mouseover events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseover",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onmouseup": {
				"name": "onmouseup",
				"status": "living",
				"summary": "The `onmouseup` property of the GlobalEventHandlers mixin is an event handler that processes mouseup events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseup",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onmousewheel": {
				"name": "onmousewheel",
				"status": "deprecated",
				"summary": "The onmousewheel property sets and returns the event handler for the mousewheel event.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousewheel",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"Deprecated"
				]
			},
			"onpause": {
				"name": "onpause",
				"status": "living",
				"summary": "The `onpause` property of the GlobalEventHandlers mixin is the event handler for processing pause events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpause",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onplay": {
				"name": "onplay",
				"status": "living",
				"summary": "The `onplay` property of the GlobalEventHandlers mixin is the event handler for processing play events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplay",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onplaying": {
				"name": "onplaying",
				"status": "living",
				"summary": "The `onplaying` property of the GlobalEventHandlers mixin is the event handler for processing playing events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplaying",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"Property"
				]
			},
			"onprogress": {
				"name": "onprogress",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onratechange": {
				"name": "onratechange",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onreset": {
				"name": "onreset",
				"status": "living",
				"summary": "The `onreset` property of the GlobalEventHandlers mixin is an event handler that processes reset events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onreset",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onresize": {
				"name": "onresize",
				"status": "living",
				"summary": "The `onresize` property of the GlobalEventHandlers interface is an event handler that processes `resize` events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onresize",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property",
					"onresize"
				]
			},
			"onscroll": {
				"name": "onscroll",
				"status": "living",
				"summary": "The `onscroll` property of the GlobalEventHandlers mixin is an event handler that processes `scroll` events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onscroll",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onseeked": {
				"name": "onseeked",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onseeking": {
				"name": "onseeking",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onselect": {
				"name": "onselect",
				"status": "living",
				"summary": "The `onselect` property of the GlobalEventHandlers mixin is an event handler that processes `select` events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselect",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onshow": {
				"name": "onshow",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onsort": {
				"name": "onsort",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onstalled": {
				"name": "onstalled",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onsubmit": {
				"name": "onsubmit",
				"status": "living",
				"summary": "The `onsubmit` property of the GlobalEventHandlers mixin is an event handler that processes submit events.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onsubmit",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": [
					"API",
					"Event Handler",
					"GlobalEventHandlers",
					"HTML DOM",
					"Property"
				]
			},
			"onsuspend": {
				"name": "onsuspend",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"ontimeupdate": {
				"name": "ontimeupdate",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"ontoggle": {
				"name": "ontoggle",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onvolumechange": {
				"name": "onvolumechange",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"onwaiting": {
				"name": "onwaiting",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "HTML:global:eventhandler",
				"tags": []
			},
			"role": {
				"name": "role",
				"status": "living",
				"summary": "ARIA roles provide semantic meaning to content, allowing screen readers and other tools to present and support interaction with object in a way that is consistent with user expectations of that type of object. ARIA roles can be used to describe elements that don't natively exist in HTML or exist but don't yet have full browser support.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"ARIA",
					"ARIA Roles",
					"Accessibility",
					"Roles"
				]
			},
			"aria-atomic": {
				"name": "aria-atomic",
				"status": "living",
				"summary": "In ARIA live regions, the global `aria-atomic` attribute indicates whether assistive technologies such as a screen reader will present all, or only parts of, the changed region based on the change notifications defined by the `aria-relevant` attribute.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-atomic",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-atomic"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-atomic"
			},
			"aria-busy": {
				"name": "aria-busy",
				"status": "living",
				"summary": "Used in ARIA live regions, the global `aria-busy` state indicates an element is being modified and that assistive technologies may want to wait until the changes are complete before informing the user about the update.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"aria-busy",
					"aria live regions",
					"aria state"
				],
				"spec-urls": [
					"https://w3c.github.io/aria/#aria-busy",
					"https://w3c.github.io/aria-practices/#feed"
				]
			},
			"aria-controls": {
				"name": "aria-controls",
				"status": "living",
				"summary": "The global `aria-controls` property identifies the element (or elements) whose contents or presence are controlled by the element on which this attribute is set.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-controls"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-controls"
			},
			"aria-current": {
				"name": "aria-current",
				"status": "living",
				"summary": "A non-null `aria-current` state on an element indicates that this element represents the current item within a container or set of related elements.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-current"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-current"
			},
			"aria-describedby": {
				"name": "aria-describedby",
				"status": "living",
				"summary": "The global `aria-describedby` attribute identifies the element (or elements) that describes the element on which the attribute is set.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-describedby"
				],
				"spec-urls": [
					"https://w3c.github.io/aria/#aria-describedby",
					"https://w3c.github.io/aria-practices/#describing_with_aria-describedby"
				]
			},
			"aria-description": {
				"name": "aria-description",
				"status": "living",
				"summary": "The global `aria-description` attribute defines a string value that describes or annotates the current element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-description"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-description"
			},
			"aria-details": {
				"name": "aria-details",
				"status": "living",
				"summary": "The global `aria-details` attribute identifies the element (or elements) that provide additional information related to the object.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-details",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-details",
					"longdesc"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-details"
			},
			"aria-disabled": {
				"name": "aria-disabled",
				"status": "living",
				"summary": "The `aria-disabled` state indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-disabled",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-disabled"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-disabled"
			},
			"aria-dropeffect": {
				"name": "aria-dropeffect",
				"status": "living",
				"summary": "The global `aria-dropeffect` attribute indicates what functions may be performed when a dragged object is released on the drop target.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-dropeffect",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-dropeffect",
					"drag and drop",
					"deprecated"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-dropeffect"
			},
			"aria-errormessage": {
				"name": "aria-errormessage",
				"status": "living",
				"summary": "The `aria-errormessage` attribute on an object identifies the element that provides an error message for that object.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-errormessage",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-errormessage"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-errormessage"
			},
			"aria-flowto": {
				"name": "aria-flowto",
				"status": "living",
				"summary": "The global `aria-flowto` attribute identifies the next element (or elements) in an alternate reading order of content. This allows assistive technology to override the general default of reading in document source order at the user's discretion.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-flowto",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-flowto"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-flowto"
			},
			"aria-grabbed": {
				"name": "aria-grabbed",
				"status": "living",
				"summary": "The `aria-grabbed` state indicates an element's \"grabbed\" state in a drag-and-drop operation.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-grabbed",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-grabbed",
					"deprecated"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-grabbed"
			},
			"aria-haspopup": {
				"name": "aria-haspopup",
				"status": "living",
				"summary": "The `aria-haspopup` attribute indicates the availability and type of interactive popup element that can be triggered by the element on which the attribute is set.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-haspopup"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-haspopup"
			},
			"aria-hidden": {
				"name": "aria-hidden",
				"status": "living",
				"summary": "The `aria-hidden` state indicates whether the element is exposed to an accessibility API.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-hidden"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-hidden"
			},
			"aria-invalid": {
				"name": "aria-invalid",
				"status": "living",
				"summary": "The `aria-invalid` state indicates the entered value does not conform to the format expected by the application.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-invalid",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-invalid"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-invalid"
			},
			"aria-keyshortcuts": {
				"name": "aria-keyshortcuts",
				"status": "living",
				"summary": "The global `aria-keyshortcuts` attribute indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-keyshortcuts",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-keyshortcuts"
				],
				"spec-urls": [
					"https://w3c.github.io/aria/#aria-keyshortcuts",
					"https://w3c.github.io/aria-practices/#kbd_shortcuts"
				]
			},
			"aria-label": {
				"name": "aria-label",
				"status": "living",
				"summary": "The `aria-label` attribute defines a string value that labels an interactive element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-label"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-label"
			},
			"aria-labelledby": {
				"name": "aria-labelledby",
				"status": "living",
				"summary": "The `aria-labelledby` attribute identifies the element (or elements) that labels the element it is applied to.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-labelledby"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-labelledby"
			},
			"aria-live": {
				"name": "aria-live",
				"status": "living",
				"summary": "The global `aria-live` attribute indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-live"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-live"
			},
			"aria-owns": {
				"name": "aria-owns",
				"status": "living",
				"summary": "The `aria-owns` attribute identifies an element (or elements) in order to define a visual, functional, or contextual relationship between a parent and its child elements when the DOM hierarchy cannot be used to represent the relationship.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-owns",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-owns"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-owns"
			},
			"aria-relevant": {
				"name": "aria-relevant",
				"status": "living",
				"summary": "Used in ARIA live regions, the global `aria-relevant` attribute indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-relevant",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-relevant"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-relevant"
			},
			"aria-roledescription": {
				"name": "aria-roledescription",
				"status": "living",
				"summary": "The `aria-roledescription` attribute defines a human-readable, author-localized description for the role of an element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-roledescription",
				"type": "attribute",
				"scope": "HTML:global:aria",
				"tags": [
					"Accessibility",
					"ARIA",
					"ARIA attribute",
					"ARIA property",
					"aria-roledescription"
				],
				"spec-urls": "https://w3c.github.io/aria/#aria-roledescription"
			}
		}
	},
	"/web/html/element/a": {
		"name": "a",
		"status": "living",
		"summary": "The `<a>` HTML element (or anchor element), with its `href` attribute, creates a hyperlink to web pages, files, email addresses, locations in the same page, or anything else a URL can address.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Content",
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Interactive content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"Inline element"
		],
		"interface": "HTMLAnchorElement",
		"attributes": {
			"download": {
				"name": "download",
				"status": "living",
				"summary": "Causes the browser to treat the linked URL as a download. Can be used with or without a value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "The URL that the hyperlink points to. Links are not restricted to HTTP-based URLs — they can use any URL scheme supported by browsers.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			},
			"hreflang": {
				"name": "hreflang",
				"status": "living",
				"summary": "Hints at the human language of the linked URL. No built-in functionality. Allowed values are the same as the global `lang` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			},
			"ping": {
				"name": "ping",
				"status": "living",
				"summary": "A space-separated list of URLs. When the link is followed, the browser will send POST requests with the body `PING` to the URLs. Typically for tracking.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			},
			"referrerpolicy": {
				"name": "referrerpolicy",
				"status": "living",
				"summary": "How much of the referrer to send when following the link.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			},
			"rel": {
				"name": "rel",
				"status": "living",
				"summary": "The relationship of the linked URL as space-separated link types.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			},
			"target": {
				"name": "target",
				"status": "living",
				"summary": "Where to display the linked URL, as the name for a browsing context (a tab, window, or iframe). The following keywords have special meanings for where to load the URL.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "Hints at the linked URL's format with a MIME type. No built-in functionality.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:a",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/abbr": {
		"name": "abbr",
		"status": "living",
		"summary": "The `<abbr>` HTML element represents an abbreviation or acronym; the optional title attribute can provide an expansion or description for the abbreviation. If present, `title` must contain this full description and nothing else.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Acronym",
			"Definitions",
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"abbreviation",
			"semantics"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/acronym": {
		"name": "acronym",
		"status": "deprecated",
		"summary": "The `<acronym>` HTML element allows authors to clearly indicate a sequence of characters that compose an acronym or abbreviation for a word.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML Flow content",
			"Deprecated"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/address": {
		"name": "address",
		"status": "living",
		"summary": "The `<address>` HTML element indicates that the enclosed HTML provides contact information for a person or people, or for an organization.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Author",
			"Contact",
			"Contact Information",
			"Email",
			"Email Address",
			"HTML",
			"HTML sections",
			"HTML Flow content",
			"HTML Palpable Content"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/applet": {
		"name": "applet",
		"status": "deprecated",
		"summary": "The obsolete HTML Applet Element (`<applet>`) embeds a Java applet into the document; this element has been deprecated in favor of object.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Java",
			"Deprecated"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {
			"align": {
				"name": "align",
				"status": "living",
				"summary": "This attribute is used to position the applet on the page relative to content that might flow around it. The HTML 4.01 specification defines values of `bottom`, `left`, `middle`, `right`, and `top`, whereas Microsoft and Netscape also might support `absbottom`, `absmiddle`, `baseline`, `center`, and `texttop`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"alt": {
				"name": "alt",
				"status": "living",
				"summary": "This attribute causes a descriptive text alternate to be displayed on browsers that do not support Java. Page designers should also remember that content enclosed within the `<applet>` element may also be rendered as alternative text.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"archive": {
				"name": "archive",
				"status": "living",
				"summary": "This attribute refers to an archived or compressed version of the applet and its associated class files, which might help reduce download time.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"code": {
				"name": "code",
				"status": "living",
				"summary": "This attribute specifies the URL of the applet's class file to be loaded and executed. Applet filenames are identified by a .class filename extension. The URL specified by code might be relative to the `codebase` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"codebase": {
				"name": "codebase",
				"status": "living",
				"summary": "This attribute gives the absolute or relative URL of the directory where applets' .class files referenced by the code attribute are stored.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"datafld": {
				"name": "datafld",
				"status": "living",
				"summary": "This attribute, supported by Internet Explorer 4 and higher, specifies the column name from the data source object that supplies the bound data. This attribute might be used to specify the various param elements passed to the Java applet.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"datasrc": {
				"name": "datasrc",
				"status": "living",
				"summary": "Like `datafld`, this attribute is used for data binding under Internet Explorer 4. It indicates the id of the data source object that supplies the data that is bound to the param elements associated with the applet.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "This attribute specifies the height, in pixels, that the applet needs.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"hspace": {
				"name": "hspace",
				"status": "living",
				"summary": "This attribute specifies additional horizontal space, in pixels, to be reserved on either side of the applet.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"mayscript": {
				"name": "mayscript",
				"status": "living",
				"summary": "In the Netscape implementation, this attribute allows access to an applet by programs in a scripting language embedded in the document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "This attribute assigns a name to the applet so that it can be identified by other resources; particularly scripts.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"object": {
				"name": "object",
				"status": "living",
				"summary": "This attribute specifies the URL of a serialized representation of an applet.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "As defined for Internet Explorer 4 and higher, this attribute specifies a URL for an associated file for the applet. The meaning and use is unclear and not part of the HTML standard.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"vspace": {
				"name": "vspace",
				"status": "living",
				"summary": "This attribute specifies additional vertical space, in pixels, to be reserved above and below the applet.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "This attribute specifies in pixels the width that the applet needs.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:applet",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/area": {
		"name": "area",
		"status": "living",
		"summary": "The `<area>` HTML element defines an area inside an image map that has predefined clickable areas. An image map allows geometric areas on an image to be associated with Hyperlink.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Content",
			"HTML",
			"HTML Flow content",
			"HTML Phrasing content",
			"Multimedia"
		],
		"interface": "HTMLAreaElement",
		"attributes": {
			"alt": {
				"name": "alt",
				"status": "living",
				"summary": "A text string alternative to display on browsers that do not display images.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"coords": {
				"name": "coords",
				"status": "living",
				"summary": "The `coords` attribute details the coordinates of the `shape` attribute in size, shape, and placement of an `<area>`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"download": {
				"name": "download",
				"status": "living",
				"summary": "This attribute, if present, indicates that the author intends the hyperlink to be used for downloading a resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "The hyperlink target for the area.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"hreflang": {
				"name": "hreflang",
				"status": "living",
				"summary": "Indicates the language of the linked resource. Allowed values are defined by RFC 5646 \"Tags for Identifying Languages (also known as BCP 47)\".",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"ping": {
				"name": "ping",
				"status": "living",
				"summary": "Contains a space-separated list of URLs to which, when the hyperlink is followed, POST requests with the body `PING` will be sent by the browser (in the background).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"referrerpolicy": {
				"name": "referrerpolicy",
				"status": "living",
				"summary": "A string indicating which referrer to use when fetching the resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"rel": {
				"name": "rel",
				"status": "living",
				"summary": "For anchors containing the href attribute, this attribute specifies the relationship of the target object to the link object.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"shape": {
				"name": "shape",
				"status": "living",
				"summary": "The shape of the associated hot spot. The specifications for HTML defines the values `rect`, which defines a rectangular region; `circle`, which defines a circular region; `poly`, which defines a polygon; and `default`, which indicates the entire region beyond any defined shapes.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			},
			"target": {
				"name": "target",
				"status": "living",
				"summary": "A keyword or author-defined name of the browsing context to display the linked resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:area",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/article": {
		"name": "article",
		"status": "living",
		"summary": "The `<article>` HTML element represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). Examples include: a forum post, a magazine or newspaper article, or a blog entry, a product card, a user-submitted comment, an interactive widget or gadget, or any other independent item of content.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/aside": {
		"name": "aside",
		"status": "living",
		"summary": "The `<aside>` HTML element represents a portion of a document whose content is only indirectly related to the document's main content. Asides are frequently presented as sidebars or call-out boxes.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Sectioning content"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/audio": {
		"name": "audio",
		"status": "living",
		"summary": "The `<audio>` HTML element is used to embed sound content in documents. It may contain one or more audio sources, represented using the `src` attribute or the source element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML embedded content",
			"HTML Embedded content",
			"HTML Flow content",
			"HTML Phrasing content",
			"Media",
			"Multimedia",
			"sound"
		],
		"interface": "HTMLAudioElement",
		"attributes": {
			"autoplay": {
				"name": "autoplay",
				"status": "living",
				"summary": "A Boolean attribute: if specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			},
			"controls": {
				"name": "controls",
				"status": "living",
				"summary": "If this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			},
			"crossorigin": {
				"name": "crossorigin",
				"status": "living",
				"summary": "This enumerated attribute indicates whether to use CORS to fetch the related audio file. CORS-enabled resources can be reused in the canvas element without being tainted. The allowed values are.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			},
			"disableremoteplayback": {
				"name": "disableremoteplayback",
				"status": "experimental",
				"summary": "A Boolean attribute used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc). See this proposed specification for more information.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			},
			"loop": {
				"name": "loop",
				"status": "living",
				"summary": "A Boolean attribute: if specified, the audio player will automatically seek back to the start upon reaching the end of the audio.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			},
			"muted": {
				"name": "muted",
				"status": "living",
				"summary": "A Boolean attribute that indicates whether the audio will be initially silenced. Its default value is `false`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			},
			"preload": {
				"name": "preload",
				"status": "living",
				"summary": "This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience. It may have one of the following values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "The URL of the audio to embed. This is subject to HTTP access controls. This is optional; you may instead use the source element within the audio block to specify the audio to embed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:audio",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/b": {
		"name": "b",
		"status": "living",
		"summary": "The `<b>` HTML element is used to draw the reader's attention to the element's contents, which are not otherwise granted special importance. This was formerly known as the Boldface element, and most browsers still draw the text in boldface. However, you should not use `<b>` for styling text; instead, you should use the CSS font-weight property to create boldface text, or the strong element to indicate that text is of special importance.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Attention",
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/base": {
		"name": "base",
		"status": "living",
		"summary": "The `<base>` HTML element specifies the base URL to use for all relative URLs in a document. There can be only one `<base>` element in a document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML document metadata",
			"HTML Metadata content"
		],
		"interface": "HTMLBaseElement",
		"attributes": {
			"href": {
				"name": "href",
				"status": "living",
				"summary": "The base URL to be used throughout the document for relative URLs. Absolute and relative URLs are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:base",
				"tags": []
			},
			"target": {
				"name": "target",
				"status": "living",
				"summary": "A keyword or author-defined name of the default browsing context to show the results of navigation from a, area, or form elements without explicit `target` attributes. The following keywords have special meanings.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:base",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/basefont": {
		"name": "basefont",
		"status": "deprecated",
		"summary": "The `<basefont>` HTML element is deprecated. It sets a default font face, size, and color for the other elements which are descended from its parent element. With this set, the font's size can then be varied relative to the base size using the font element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Fonts",
			"HTML",
			"Layout",
			"Deprecated",
			"Style"
		],
		"interface": "HTMLElement",
		"attributes": {
			"color": {
				"name": "color",
				"status": "living",
				"summary": "This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:basefont",
				"tags": []
			},
			"face": {
				"name": "face",
				"status": "living",
				"summary": "This attribute contains a list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:basefont",
				"tags": []
			},
			"size": {
				"name": "size",
				"status": "living",
				"summary": "This attribute specifies the font size as either a numeric or relative value. Numeric values range from 1 to 7 with 1 being the smallest and 3 the default.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:basefont",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/bdi": {
		"name": "bdi",
		"status": "living",
		"summary": "The `<bdi>` HTML element tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text. It's particularly useful when a website dynamically inserts some text and doesn't know the directionality of the text being inserted.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"BiDi",
			"Directionality",
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"Internationalization",
			"Left-to-Right",
			"Right-to-left",
			"Text",
			"direction",
			"i18n",
			"ltr",
			"rtl"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/bdo": {
		"name": "bdo",
		"status": "living",
		"summary": "The `<bdo>` HTML element overrides the current directionality of text, so that the text within is rendered in a different direction.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"BiDi",
			"Bidirectional Text",
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"Left to Right",
			"Right to Left",
			"Text",
			"Text Direction",
			"Text Rendering",
			"ltr",
			"rtl"
		],
		"interface": "HTMLElement",
		"attributes": {
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "The direction in which text should be rendered in this element's contents. Possible values are.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:bdo",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/bgsound": {
		"name": "bgsound",
		"status": "deprecated",
		"summary": "The `<bgsound>` HTML element is deprecated. It sets up a sound file to play in the background while the page is used; use audio instead.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bgsound",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Audio",
			"Background Sound",
			"HTML",
			"Internet Explorer",
			"Non-standard",
			"Deprecated"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {
			"balance": {
				"name": "balance",
				"status": "living",
				"summary": "This attribute defines a number between -10,000 and +10,000 that determines how the volume will be divided between the speakers.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:bgsound",
				"tags": []
			},
			"loop": {
				"name": "loop",
				"status": "living",
				"summary": "This attribute indicates the number of times a sound is to be played and either has a numeric value or the keyword infinite.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:bgsound",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "This attribute specifies the URL of the sound file to be played, which must be one of the following types: .wav, .au, or .mid.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:bgsound",
				"tags": []
			},
			"volume": {
				"name": "volume",
				"status": "living",
				"summary": "This attribute defines a number between -10,000 and 0 that determines the loudness of a page's background sound.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:bgsound",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/big": {
		"name": "big",
		"status": "deprecated",
		"summary": "The `<big>` HTML deprecated element renders the enclosed text at a font size one level larger than the surrounding text (`medium` becomes `large`, for example). The size is capped at the browser's maximum permitted font size.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/blink": {
		"name": "blink",
		"status": "deprecated",
		"summary": "The `<blink>` HTML element is a non-standard element which causes the enclosed text to flash slowly.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLUnknownElement",
		"attributes": [],
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/blockquote": {
		"name": "blockquote",
		"status": "living",
		"summary": "The `<blockquote>` HTML element indicates that the enclosed text is an extended quotation. Usually, this is rendered visually by indentation (see Notes for how to change it). A URL for the source of the quotation may be given using the cite attribute, while a text representation of the source can be given using the cite element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Sectioning root",
			"Quotations"
		],
		"interface": "HTMLQuoteElement",
		"attributes": {
			"cite": {
				"name": "cite",
				"status": "living",
				"summary": "A URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:blockquote",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/body": {
		"name": "body",
		"status": "living",
		"summary": "The `<body>` HTML element represents the content of an HTML document. There can be only one `<body>` element in a document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Sectioning Root Element",
			"Sections"
		],
		"interface": "HTMLBodyElement",
		"attributes": {
			"alink": {
				"name": "alink",
				"status": "deprecated",
				"summary": "Color of text for hyperlinks when selected.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"background": {
				"name": "background",
				"status": "deprecated",
				"summary": "URI of a image to use as a background.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"bgcolor": {
				"name": "bgcolor",
				"status": "deprecated",
				"summary": "Background color for the document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"bottommargin": {
				"name": "bottommargin",
				"status": "deprecated",
				"summary": "The margin of the bottom of the body.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"leftmargin": {
				"name": "leftmargin",
				"status": "deprecated",
				"summary": "The margin of the left of the body.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"link": {
				"name": "link",
				"status": "deprecated",
				"summary": "Color of text for unvisited hypertext links.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onafterprint": {
				"name": "onafterprint",
				"status": "living",
				"summary": "Function to call after the user has printed the document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onbeforeprint": {
				"name": "onbeforeprint",
				"status": "living",
				"summary": "Function to call when the user requests printing of the document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onbeforeunload": {
				"name": "onbeforeunload",
				"status": "living",
				"summary": "Function to call when the document is about to be unloaded.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onblur": {
				"name": "onblur",
				"status": "living",
				"summary": "Function to call when the document loses focus.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onerror": {
				"name": "onerror",
				"status": "living",
				"summary": "Function to call when the document fails to load properly.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onfocus": {
				"name": "onfocus",
				"status": "living",
				"summary": "Function to call when the document receives focus.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onhashchange": {
				"name": "onhashchange",
				"status": "living",
				"summary": "Function to call when the fragment identifier part (starting with the hash (`'#'`) character) of the document's current address has changed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onlanguagechange": {
				"name": "onlanguagechange",
				"status": "living",
				"summary": "Function to call when the preferred languages changed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onload": {
				"name": "onload",
				"status": "living",
				"summary": "Function to call when the document has finished loading.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onmessage": {
				"name": "onmessage",
				"status": "living",
				"summary": "Function to call when the document has received a message.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onoffline": {
				"name": "onoffline",
				"status": "living",
				"summary": "Function to call when network communication has failed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"ononline": {
				"name": "ononline",
				"status": "living",
				"summary": "Function to call when network communication has been restored.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onpopstate": {
				"name": "onpopstate",
				"status": "living",
				"summary": "Function to call when the user has navigated session history.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onredo": {
				"name": "onredo",
				"status": "living",
				"summary": "Function to call when the user has moved forward in undo transaction history.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onresize": {
				"name": "onresize",
				"status": "living",
				"summary": "Function to call when the document has been resized.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onstorage": {
				"name": "onstorage",
				"status": "living",
				"summary": "Function to call when the storage area has changed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onundo": {
				"name": "onundo",
				"status": "living",
				"summary": "Function to call when the user has moved backward in undo transaction history.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"onunload": {
				"name": "onunload",
				"status": "living",
				"summary": "Function to call when the document is going away.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"rightmargin": {
				"name": "rightmargin",
				"status": "deprecated",
				"summary": "The margin of the right of the body.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"text": {
				"name": "text",
				"status": "deprecated",
				"summary": "Foreground color of text.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"topmargin": {
				"name": "topmargin",
				"status": "deprecated",
				"summary": "The margin of the top of the body.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			},
			"vlink": {
				"name": "vlink",
				"status": "deprecated",
				"summary": "Color of text for visited hypertext links.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:body",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/br": {
		"name": "br",
		"status": "living",
		"summary": "The `<br>` HTML element produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics"
		],
		"interface": "HTMLBRElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/button": {
		"name": "button",
		"status": "living",
		"summary": "The `<button>` HTML element is an interactive element activated by a user with a mouse, keyboard, finger, voice command, or other assistive technology. Once activated, it then performs a programmable action, such as submitting a form or opening a dialog.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLButtonElement",
		"attributes": {
			"autofocus": {
				"name": "autofocus",
				"status": "living",
				"summary": "This Boolean attribute specifies that the button should have input focus when the page loads. Only one element in a document can have this attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"autocomplete": {
				"name": "autocomplete",
				"status": "living",
				"summary": "This attribute on a button is nonstandard and Firefox-specific. Unlike other browsers, Firefox persists the dynamic disabled state of a button across page loads. Setting `autocomplete=\"off\"` on the button disables this feature; see .",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "This Boolean attribute prevents the user from interacting with the button: it cannot be pressed or focused.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"form": {
				"name": "form",
				"status": "living",
				"summary": "The form element to associate the button with (its form owner). The value of this attribute must be the `id` of a `<form>` in the same document. (If this attribute is not set, the `<button>` is associated with its ancestor `<form>` element, if any.)",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"formaction": {
				"name": "formaction",
				"status": "living",
				"summary": "The URL that processes the information submitted by the button. Overrides the form attribute of the button's form owner. Does nothing if there is no form owner.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"formenctype": {
				"name": "formenctype",
				"status": "living",
				"summary": "If the button is a submit button (it's inside/associated with a `<form>` and doesn't have `type=\"button\"`), specifies how to encode the form data that is submitted. Possible values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"formmethod": {
				"name": "formmethod",
				"status": "living",
				"summary": "If the button is a submit button (it's inside/associated with a `<form>` and doesn't have `type=\"button\"`), this attribute specifies the HTTP method used to submit the form. Possible values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"formnovalidate": {
				"name": "formnovalidate",
				"status": "living",
				"summary": "If the button is a submit button, this Boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the form attribute of the button's form owner.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"formtarget": {
				"name": "formtarget",
				"status": "living",
				"summary": "If the button is a submit button, this attribute is an author-defined name or standardized, underscore-prefixed keyword indicating where to display the response from submitting the form. This is the `name` of, or keyword for, a browsing context (a tab, window, or iframe). If this attribute is specified, it overrides the target attribute of the button's form owner. The following keywords have special meanings.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The name of the button, submitted as a pair with the button's `value` as part of the form data, when that button is used to submit the form.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "The default behavior of the button. Possible values are.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			},
			"value": {
				"name": "value",
				"status": "living",
				"summary": "Defines the value associated with the button's `name` when it's submitted with the form data. This value is passed to the server in params when the form is submitted using this button.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:button",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/canvas": {
		"name": "canvas",
		"status": "living",
		"summary": "Use the HTML `<canvas>` element with either the canvas scripting API or the WebGL API to draw graphics and animations.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML scripting"
		],
		"interface": "HTMLCanvasElement",
		"attributes": {
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The height of the coordinate space in CSS pixels. Defaults to 150.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:canvas",
				"tags": []
			},
			"moz-opaque": {
				"name": "moz-opaque",
				"status": "deprecated",
				"summary": "Lets the canvas know whether or not translucency will be a factor. If the canvas knows there's no translucency, painting performance can be optimized. This is only supported by Mozilla-based browsers; use the standardized {{domxref(\"HTMLCanvasElement.getContext()\", \"canvas.getContext('2d', { alpha: false })\")}} instead.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:canvas",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The width of the coordinate space in CSS pixels. Defaults to 300.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:canvas",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/caption": {
		"name": "caption",
		"status": "living",
		"summary": "The `<caption>` HTML element specifies the caption (or title) of a table.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML Tables",
			"HTML tabular data",
			"Table Captions",
			"Table Titles",
			"Tables"
		],
		"interface": "HTMLTableCaptionElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/center": {
		"name": "center",
		"status": "deprecated",
		"summary": "The `<center>` HTML element is a block-level element that displays its block-level or inline contents centered horizontally within its containing element. The container is usually, but isn't required to be, body.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated",
			"Text",
			"Text Alignment",
			"alignment"
		],
		"interface": "HTMLElement",
		"attributes": [],
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/cite": {
		"name": "cite",
		"status": "living",
		"summary": "The `<cite>` HTML element is used to describe a reference to a cited creative work, and must include the title of that work. The reference may be in an abbreviated form according to context-appropriate conventions related to citation metadata.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Attribution",
			"Citation",
			"Citing References",
			"Citing Works",
			"HTML",
			"HTML text-level semantics",
			"Quotations"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/code": {
		"name": "code",
		"status": "living",
		"summary": "The `<code>` HTML element displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code. By default, the content text is displayed using the user agent default monospace font.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"Inline Code"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/col": {
		"name": "col",
		"status": "living",
		"summary": "The `<col>` HTML element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a colgroup element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Tables"
		],
		"interface": "HTMLTableColElement",
		"attributes": {
			"span": {
				"name": "span",
				"status": "living",
				"summary": "This attribute contains a positive integer indicating the number of consecutive columns the `<col>` element spans. If not present, its default value is `1`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:col",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/colgroup": {
		"name": "colgroup",
		"status": "living",
		"summary": "The `<colgroup>` HTML element defines a group of columns within a table.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Tables"
		],
		"interface": "HTMLTableColElement",
		"attributes": {
			"span": {
				"name": "span",
				"status": "living",
				"summary": "This attribute contains a positive integer indicating the number of consecutive columns the `<colgroup>` element spans. If not present, its default value is `1`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:colgroup",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/content": {
		"name": "content",
		"status": "deprecated",
		"summary": "The `<content>` HTML element—an obsolete part of the Web Components suite of technologies—was used inside of Shadow DOM as an insertion point, and wasn't meant to be used in ordinary HTML. It has now been replaced by the slot element, which creates a point in the DOM at which a shadow DOM can be inserted.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/content",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"DOM",
			"Deprecated",
			"HTML",
			"HTML Web Components",
			"Placeholder",
			"Web Components",
			"shadow dom"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {
			"select": {
				"name": "select",
				"status": "living",
				"summary": "A comma-separated list of selectors. These have the same syntax as CSS selectors. They select the content to insert in place of the `<content>` element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:content",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/data": {
		"name": "data",
		"status": "living",
		"summary": "The `<data>` HTML element links a given piece of content with a machine-readable translation. If the content is time- or date-related, the time element must be used.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics"
		],
		"interface": "HTMLDataElement",
		"attributes": {
			"value": {
				"name": "value",
				"status": "living",
				"summary": "This attribute specifies the machine-readable translation of the content of the element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:data",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/datalist": {
		"name": "datalist",
		"status": "living",
		"summary": "The `<datalist>` HTML element contains a set of option elements that represent the permissible or recommended options available to choose from within other controls.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLDataListElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/dd": {
		"name": "dd",
		"status": "living",
		"summary": "The `<dd>` HTML element provides the description, definition, or value for the preceding term (dt) in a description list (dl).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Definition",
			"Description Details",
			"Description list",
			"HTML",
			"HTML grouping content",
			"details"
		],
		"interface": "HTMLElement",
		"attributes": {
			"nowrap": {
				"name": "nowrap",
				"status": "living",
				"summary": "If the value of this attribute is set to `yes`, the definition text will not wrap. The default value is `no`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:dd",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/del": {
		"name": "del",
		"status": "living",
		"summary": "The `<del>` HTML element represents a range of text that has been deleted from a document. This can be used when rendering \"track changes\" or source code diff information, for example. The ins element can be used for the opposite purpose: to indicate text that has been added to the document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deleted Text",
			"HTML",
			"HTML edits"
		],
		"interface": "HTMLModElement",
		"attributes": {
			"cite": {
				"name": "cite",
				"status": "living",
				"summary": "A URI for a resource that explains the change (for example, meeting minutes).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:del",
				"tags": []
			},
			"datetime": {
				"name": "datetime",
				"status": "living",
				"summary": "This attribute indicates the time and date of the change and must be a valid date string with an optional time. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp. For the format of the string without a time, see Date strings. The format of the string if it includes both date and time is covered in Local date and time strings.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:del",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/details": {
		"name": "details",
		"status": "living",
		"summary": "The `<details>` HTML element creates a disclosure widget in which information is visible only when the widget is toggled into an \"open\" state. A summary or label must be provided using the summary element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Disclosure Box",
			"Disclosure Widget",
			"HTML",
			"HTML interactive elements"
		],
		"interface": "HTMLDetailsElement",
		"attributes": {
			"open": {
				"name": "open",
				"status": "living",
				"summary": "This Boolean attribute indicates whether or not the details — that is, the contents of the `<details>` element — are currently visible. The details are shown when this attribute exists, or hidden when this attribute is absent. By default this attribute is absent which means the details are not visible.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:details",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/dfn": {
		"name": "dfn",
		"status": "living",
		"summary": "The `<dfn>` HTML element is used to indicate the term being defined within the context of a definition phrase or sentence. The p element, the dt/dd pairing, or the section element which is the nearest ancestor of the `<dfn>` is considered to be the definition of the term.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Definition",
			"Definitions",
			"HTML",
			"HTML text-level semantics",
			"Semantic Markup"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/dialog": {
		"name": "dialog",
		"status": "living",
		"summary": "The `<dialog>` HTML element represents a dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML interactive elements",
			"polyfill"
		],
		"interface": "HTMLDialogElement",
		"attributes": {
			"open": {
				"name": "open",
				"status": "living",
				"summary": "Indicates that the dialog is active and can be interacted with. When the `open` attribute is not set, the dialog shouldn't be shown to the user.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:dialog",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/dir": {
		"name": "dir",
		"status": "deprecated",
		"summary": "The `<dir>` HTML element is used as a container for a directory of files and/or folders, potentially with styles and icons applied by the user agent. Do not use this obsolete element; instead, you should use the ul element for lists, including lists of files.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dir",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Directory",
			"HTML",
			"HTML Lists",
			"Deprecated",
			"lists"
		],
		"interface": "HTMLDirectoryElement",
		"attributes": {
			"compact": {
				"name": "compact",
				"status": "living",
				"summary": "This Boolean attribute hints that the list should be rendered in a compact style. The interpretation of this attribute depends on the user agent and it doesn't work in all browsers.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:dir",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/div": {
		"name": "div",
		"status": "living",
		"summary": "The `<div>` HTML element is the generic container for flow content. It has no effect on the content or layout until styled in some way using CSS (e.g. styling is directly applied to it, or some kind of layout model like Flexbox is applied to its parent element).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Content Division",
			"HTML",
			"HTML grouping content",
			"HTML Flow content",
			"Layout"
		],
		"interface": "HTMLDivElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/dl": {
		"name": "dl",
		"status": "living",
		"summary": "The `<dl>` HTML element represents a description list. The element encloses a list of groups of terms (specified using the dt element) and descriptions (provided by dd elements). Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Definition List",
			"Description list",
			"HTML",
			"HTML grouping content",
			"HTML Flow content",
			"HTML Palpable Content"
		],
		"interface": "HTMLDListElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/dt": {
		"name": "dt",
		"status": "living",
		"summary": "The `<dt>` HTML element specifies a term in a description or definition list, and as such must be used inside a dl element. It is usually followed by a dd element; however, multiple `<dt>` elements in a row indicate several terms that are all defined by the immediate next dd element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Definition",
			"Description list",
			"Definition Term",
			"Description Term",
			"HTML",
			"HTML grouping content",
			"Term"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/em": {
		"name": "em",
		"status": "living",
		"summary": "The `<em>` HTML element marks text that has stress emphasis. The `<em>` element can be nested, with each level of nesting indicating a greater degree of emphasis.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/embed": {
		"name": "embed",
		"status": "living",
		"summary": "The `<embed>` HTML element embeds external content at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Embedding Content",
			"External content",
			"HTML",
			"HTML embedded content",
			"Plugins"
		],
		"interface": "HTMLEmbedElement",
		"attributes": {
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The displayed height of the resource, in CSS pixels. This must be an absolute value; percentages are not allowed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:embed",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "The URL of the resource being embedded.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:embed",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "The MIME type to use to select the plug-in to instantiate.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:embed",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The displayed width of the resource, in CSS pixels. This must be an absolute value; percentages are not allowed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:embed",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/fieldset": {
		"name": "fieldset",
		"status": "living",
		"summary": "The `<fieldset>` HTML element is used to group several controls as well as labels (label) within a web form.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLFieldSetElement",
		"attributes": {
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "If this Boolean attribute is set, all form controls that are descendants of the `<fieldset>`, are disabled, meaning they are not editable and won't be submitted along with the form. They won't receive any browsing events, like mouse clicks or focus-related events. By default browsers display such controls grayed out. Note that form elements inside the legend element won't be disabled.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:fieldset",
				"tags": []
			},
			"form": {
				"name": "form",
				"status": "living",
				"summary": "This attribute takes the value of the id attribute of a form element you want the `<fieldset>` to be part of, even if it is not inside the form. Please note that usage of this is confusing — if you want the input elements inside the `<fieldset>` to be associated with the form, you need to use the `form` attribute directly on those elements. You can check which elements are associated with a form via JavaScript, using HTMLFormElement.elements.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:fieldset",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The name associated with the group.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:fieldset",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/figcaption": {
		"name": "figcaption",
		"status": "living",
		"summary": "The `<figcaption>` HTML element represents a caption or legend describing the rest of the contents of its parent figure element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/figure": {
		"name": "figure",
		"status": "living",
		"summary": "The `<figure>` HTML element represents self-contained content, potentially with an optional caption, which is specified using the figcaption element. The figure, its caption, and its contents are referenced as a single unit.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content",
			"Information",
			"Presentation"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/font": {
		"name": "font",
		"status": "deprecated",
		"summary": "The `<font>` HTML element defines the font size, color and face for its content.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLFontElement",
		"attributes": {
			"color": {
				"name": "color",
				"status": "living",
				"summary": "This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:font",
				"tags": []
			},
			"face": {
				"name": "face",
				"status": "living",
				"summary": "This attribute contains a comma-separated list of one or more font names. The document text in the default style is rendered in the first font face that the client's browser supports. If no font listed is installed on the local system, the browser typically defaults to the proportional or fixed-width font for that system.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:font",
				"tags": []
			},
			"size": {
				"name": "size",
				"status": "living",
				"summary": "This attribute specifies the font size as either a numeric or relative value. Numeric values range from `1` to `7` with `1` being the smallest and `3` the default. It can be defined using a relative value, like `+2` or `-3`, which set it relative to the value of the size attribute of the basefont element, or relative to `3`, the default value, if none does exist.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:font",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/footer": {
		"name": "footer",
		"status": "living",
		"summary": "The `<footer>` HTML element represents a footer for its nearest ancestor sectioning content or sectioning root element. A `<footer>` typically contains information about the author of the section, copyright data or links to related documents.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/form": {
		"name": "form",
		"status": "living",
		"summary": "The `<form>` HTML element represents a document section containing interactive controls for submitting information.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Form Element",
			"Forms",
			"HTML",
			"HTML Form Element",
			"HTML forms"
		],
		"interface": "HTMLFormElement",
		"attributes": {
			"accept": {
				"name": "accept",
				"status": "deprecated",
				"summary": "Comma-separated content types the server accepts.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:form",
				"tags": []
			},
			"accept-charset": {
				"name": "accept-charset",
				"status": "living",
				"summary": "Space-separated character encoding the server accepts. The browser uses them in the order in which they are listed. The default value means the same encoding as the page.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:form",
				"tags": []
			},
			"autocapitalize": {
				"name": "autocapitalize",
				"status": "living",
				"summary": "A nonstandard attribute used by iOS Safari that controls how textual form elements should be automatically capitalized. `autocapitalize` attributes on a form elements override it on `<form>`. Possible values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:form",
				"tags": []
			},
			"autocomplete": {
				"name": "autocomplete",
				"status": "living",
				"summary": "Indicates whether input elements can by default have their values automatically completed by the browser. `autocomplete` attributes on form elements override it on `<form>`. Possible values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:form",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The name of the form. The value must not be the empty string, and must be unique among the `form` elements in the forms collection that it is in, if any.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:form",
				"tags": []
			},
			"rel": {
				"name": "rel",
				"status": "living",
				"summary": "Creates a hyperlink or annotation depending on the value, see the `rel` attribute for details.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:form",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/frame": {
		"name": "frame",
		"status": "deprecated",
		"summary": "The `<frame>` HTML element defines a particular area in which another HTML document can be displayed. A frame should be used within a frameset.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"HTML"
		],
		"interface": "HTMLFrameElement",
		"attributes": {
			"src": {
				"name": "src",
				"status": "living",
				"summary": "This attribute specifies the document that will be displayed by the frame.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frame",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "This attribute is used for labeling frames. Without labeling, every link will open in the frame that it's in – the closest parent frame. See the a attribute for more information.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frame",
				"tags": []
			},
			"noresize": {
				"name": "noresize",
				"status": "living",
				"summary": "This attribute prevents resizing of frames by users.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frame",
				"tags": []
			},
			"scrolling": {
				"name": "scrolling",
				"status": "living",
				"summary": "This attribute defines the existence of a scrollbar. If this attribute is not used, the browser adds a scrollbar when necessary. There are two choices: \"yes\" for forcing a scrollbar even when it is not necessary and \"no\" for forcing no scrollbar even when it is necessary.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frame",
				"tags": []
			},
			"marginheight": {
				"name": "marginheight",
				"status": "living",
				"summary": "This attribute defines the height of the margin between frames.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frame",
				"tags": []
			},
			"marginwidth": {
				"name": "marginwidth",
				"status": "living",
				"summary": "This attribute defines the width of the margin between frames.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frame",
				"tags": []
			},
			"frameborder": {
				"name": "frameborder",
				"status": "living",
				"summary": "This attribute allows you to specify a frame's border.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frame",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/frameset": {
		"name": "frameset",
		"status": "deprecated",
		"summary": "The `<frameset>` HTML element is used to contain frame elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frameset",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"HTML"
		],
		"interface": "HTMLFrameSetElement",
		"attributes": {
			"cols": {
				"name": "cols",
				"status": "living",
				"summary": "This attribute specifies the number and size of horizontal spaces in a frameset.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frameset",
				"tags": []
			},
			"rows": {
				"name": "rows",
				"status": "living",
				"summary": "This attribute specifies the number and size of vertical spaces in a frameset.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:frameset",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/head": {
		"name": "head",
		"status": "living",
		"summary": "The `<head>` HTML element contains machine-readable information (metadata) about the document, like its title, scripts, and style sheets.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML document metadata",
			"HTML Metadata content"
		],
		"interface": "HTMLHeadElement",
		"attributes": {
			"profile": {
				"name": "profile",
				"status": "deprecated",
				"summary": "The URIs of one or more metadata profiles, separated by whitespace.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:head",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/header": {
		"name": "header",
		"status": "living",
		"summary": "The `<header>` HTML element represents introductory content, typically a group of introductory or navigational aids. It may contain some heading elements but also a logo, a search form, an author name, and other elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/h1": {
		"name": "h6",
		"status": "living",
		"summary": "The `<h1>` to `<h6>` HTML elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLHeadingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/h2": {
		"name": "h6",
		"status": "living",
		"summary": "The `<h1>` to `<h6>` HTML elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLHeadingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/h3": {
		"name": "h6",
		"status": "living",
		"summary": "The `<h1>` to `<h6>` HTML elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLHeadingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/h4": {
		"name": "h6",
		"status": "living",
		"summary": "The `<h1>` to `<h6>` HTML elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLHeadingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/h5": {
		"name": "h6",
		"status": "living",
		"summary": "The `<h1>` to `<h6>` HTML elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLHeadingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/h6": {
		"name": "h6",
		"status": "living",
		"summary": "The `<h1>` to `<h6>` HTML elements represent six levels of section headings. `<h1>` is the highest section level and `<h6>` is the lowest.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLHeadingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/hgroup": {
		"name": "hgroup",
		"status": "deprecated",
		"summary": "Warning: `<hgroup>` should not be used because no assistive technology supports it, and as a result it has a detrimental effect on assistance for headings placed within it. > > For more information see the Usage notes below.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"Experimental",
			"HTML"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/hr": {
		"name": "hr",
		"status": "living",
		"summary": "The `<hr>` HTML element represents a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic within a section.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content"
		],
		"interface": "HTMLHRElement",
		"attributes": {
			"align": {
				"name": "align",
				"status": "deprecated",
				"summary": "Sets the alignment of the rule on the page. If no value is specified, the default value is `left`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:hr",
				"tags": []
			},
			"color": {
				"name": "color",
				"status": "living",
				"summary": "Sets the color of the rule through color name or hexadecimal value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:hr",
				"tags": []
			},
			"noshade": {
				"name": "noshade",
				"status": "deprecated",
				"summary": "Sets the rule to have no shading.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:hr",
				"tags": []
			},
			"size": {
				"name": "size",
				"status": "deprecated",
				"summary": "Sets the height, in pixels, of the rule.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:hr",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "deprecated",
				"summary": "Sets the length of the rule on the page through a pixel or percentage value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:hr",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/html": {
		"name": "html",
		"status": "living",
		"summary": "The `<html>` HTML element represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML Root Element"
		],
		"interface": "HTMLHtmlElement",
		"attributes": {
			"manifest": {
				"name": "manifest",
				"status": "deprecated",
				"summary": "Specifies the URI of a resource manifest indicating resources that should be cached locally.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:html",
				"tags": []
			},
			"version": {
				"name": "version",
				"status": "deprecated",
				"summary": "Specifies the version of the HTML Doctype that governs the current document. This attribute is not needed, because it is redundant with the version information in the document type declaration.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:html",
				"tags": []
			},
			"xmlns": {
				"name": "xmlns",
				"status": "living",
				"summary": "Specifies the XML Namespace of the document. Default value is `\"http://www.w3.org/1999/xhtml\"`. This is required in documents parsed with XML parser, and optional in text/html documents.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:html",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/i": {
		"name": "i",
		"status": "living",
		"summary": "The `<i>` HTML element represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, taxonomical designations, among others. Historically, these have been presented using italicized type, which is the original source of the `<i>` naming of this element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"em"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/iframe": {
		"name": "iframe",
		"status": "living",
		"summary": "The `<iframe>` HTML element represents a nested browsing context, embedding another HTML page into the current one.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Content",
			"Embedded content",
			"Embedding",
			"Frames",
			"HTML",
			"HTML embedded content",
			"Inline Frames",
			"embedded"
		],
		"interface": "HTMLIFrameElement",
		"attributes": {
			"allow": {
				"name": "allow",
				"status": "living",
				"summary": "Specifies a feature policy for the `<iframe>`. The policy defines what features are available to the `<iframe>` based on the origin of the request (e.g. access to the microphone, camera, battery, web-share API, etc.).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"allowfullscreen": {
				"name": "allowfullscreen",
				"status": "living",
				"summary": "Set to `true` if the `<iframe>` can activate fullscreen mode by calling the Element.requestFullscreen method.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"allowpaymentrequest": {
				"name": "allowpaymentrequest",
				"status": "living",
				"summary": "Set to `true` if a cross-origin `<iframe>` should be allowed to invoke the Payment Request API.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"csp": {
				"name": "csp",
				"status": "experimental",
				"summary": "A Content Security Policy enforced for the embedded resource. See HTMLIFrameElement.csp for details.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"fetchpriority": {
				"name": "fetchpriority",
				"status": "living",
				"summary": "Provides a hint of the relative priority to use when fetching the iframe document. Allowed values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The height of the frame in CSS pixels. Default is `150`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"loading": {
				"name": "loading",
				"status": "experimental",
				"summary": "Indicates how the browser should load the iframe.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "A targetable name for the embedded browsing context. This can be used in the `target` attribute of the a, form, or base elements; the `formtarget` attribute of the input or button elements; or the `windowName` parameter in the window.open() method.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"referrerpolicy": {
				"name": "referrerpolicy",
				"status": "living",
				"summary": "Indicates which referrer to send when fetching the frame's resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"sandbox": {
				"name": "sandbox",
				"status": "living",
				"summary": "Applies extra restrictions to the content in the frame. The value of the attribute can either be empty to apply all restrictions, or space-separated tokens to lift particular restrictions.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "The URL of the page to embed. Use a value of `about:blank` to embed an empty page that conforms to the same-origin policy. Also note that programmatically removing an `<iframe>`'s src attribute (e.g. via Element.removeAttribute()) causes `about:blank` to be loaded in the frame in Firefox (from version 65), Chromium-based browsers, and Safari/iOS.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"srcdoc": {
				"name": "srcdoc",
				"status": "living",
				"summary": "Inline HTML to embed, overriding the `src` attribute. If a browser does not support the `srcdoc` attribute, it will fall back to the URL in the `src` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The width of the frame in CSS pixels. Default is `300`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:iframe",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/image": {
		"name": "image",
		"status": "deprecated",
		"summary": "The `<image>` HTML element is an ancient and poorly supported precursor to the img element. It should not be used.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML Element Reference",
			"HTML Reference",
			"HTML element",
			"Non-standard",
			"Deprecated"
		],
		"interface": "HTMLUnknownElement",
		"attributes": [],
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/img": {
		"name": "img",
		"status": "living",
		"summary": "The `<img>` HTML element embeds an image into the document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Content",
			"Graphics",
			"HTML",
			"HTML Graphics",
			"HTML Images",
			"HTML Photos",
			"HTML Pictures",
			"HTML embedded content",
			"Image",
			"Image Element",
			"Media",
			"Multimedia",
			"Photos",
			"Pictures"
		],
		"interface": "HTMLImageElement",
		"attributes": {
			"alt": {
				"name": "alt",
				"status": "living",
				"summary": "Defines an alternative text description of the image.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"crossorigin": {
				"name": "crossorigin",
				"status": "living",
				"summary": "Indicates if the fetching of the image must be done using a CORS request. Image data from a CORS-enabled image returned from a CORS request can be reused in the canvas element without being marked \"tainted\".",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"decoding": {
				"name": "decoding",
				"status": "living",
				"summary": "Provides an image decoding hint to the browser. Allowed values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"fetchpriority": {
				"name": "fetchpriority",
				"status": "experimental",
				"summary": "Provides a hint of the relative priority to use when fetching the image. Allowed values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The intrinsic height of the image, in pixels. Must be an integer without a unit.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"ismap": {
				"name": "ismap",
				"status": "living",
				"summary": "This Boolean attribute indicates that the image is part of a server-side map. If so, the coordinates where the user clicked on the image are sent to the server.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"loading": {
				"name": "loading",
				"status": "living",
				"summary": "Indicates how the browser should load the image.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"referrerpolicy": {
				"name": "referrerpolicy",
				"status": "living",
				"summary": "A string indicating which referrer to use when fetching the resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"sizes": {
				"name": "sizes",
				"status": "living",
				"summary": "One or more strings separated by commas, indicating a set of source sizes. Each source size consists of.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "The image URL. Mandatory for the `<img>` element. On Browser supporting `srcset`, `src` is treated like a candidate image with a pixel density descriptor `1x`, unless an image with this pixel density descriptor is already defined in `srcset`, or unless `srcset` contains `w` descriptors.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"srcset": {
				"name": "srcset",
				"status": "living",
				"summary": "One or more strings separated by commas, indicating possible image sources for the user agent to use. Each string is composed of.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The intrinsic width of the image in pixels. Must be an integer without a unit.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			},
			"usemap": {
				"name": "usemap",
				"status": "living",
				"summary": "The partial URL (starting with `#`) of an image map associated with the element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:img",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/input": {
		"name": "input",
		"status": "living",
		"summary": "The `<input>` HTML element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. The `<input>` element is one of the most powerful and complex in all of HTML due to the sheer number of combinations of input types and attributes.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Data entry",
			"Forms",
			"HTML",
			"HTML forms",
			"HTML input tag",
			"MakeBrowserAgnostic"
		],
		"interface": "HTMLInputElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/ins": {
		"name": "ins",
		"status": "living",
		"summary": "The `<ins>` HTML element represents a range of text that has been added to a document. You can use the del element to similarly represent a range of text that has been deleted from the document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML edits",
			"Inserted Text",
			"Insertion"
		],
		"interface": "HTMLModElement",
		"attributes": {
			"cite": {
				"name": "cite",
				"status": "living",
				"summary": "This attribute defines the URI of a resource that explains the change, such as a link to meeting minutes or a ticket in a troubleshooting system.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:ins",
				"tags": []
			},
			"datetime": {
				"name": "datetime",
				"status": "living",
				"summary": "This attribute indicates the time and date of the change and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp. For the format of the string without a time, see Format of a valid date string. The format of the string if it includes both date and time is covered in Format of a valid local date and time string.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:ins",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/kbd": {
		"name": "kbd",
		"status": "living",
		"summary": "The `<kbd>` HTML element represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device. By convention, the user agent defaults to rendering the contents of a `<kbd>` element using its default monospace font, although this is not mandated by the HTML standard.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Displaying Input",
			"Displaying Keys",
			"Displaying Keystrokes",
			"Displaying User Input",
			"HTML",
			"HTML text-level semantics",
			"Keyboard Input",
			"Keystroke",
			"keyboard",
			"user input"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/keygen": {
		"name": "keygen",
		"status": "deprecated",
		"summary": "The `<keygen>` HTML element exists to facilitate generation of key material, and submission of the public key as part of an HTML form. This mechanism is designed for use with Web-based certificate management systems. It is expected that the `<keygen>` element will be used in an HTML form along with other information needed to construct a certificate request, and that the result of the process will be a signed certificate.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {
			"autofocus": {
				"name": "autofocus",
				"status": "living",
				"summary": "This Boolean attribute lets you specify that the control should have input focus when the page loads, unless the user overrides it, for example by typing in a different control. Only one form element in a document can have the `autofocus` attribute, which is a Boolean.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:keygen",
				"tags": []
			},
			"challenge": {
				"name": "challenge",
				"status": "living",
				"summary": "A challenge string that is submitted along with the public key. Defaults to an empty string if not specified.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:keygen",
				"tags": []
			},
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "This Boolean attribute indicates that the form control is not available for interaction.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:keygen",
				"tags": []
			},
			"form": {
				"name": "form",
				"status": "living",
				"summary": "The form element that this element is associated with (its form owner). The value of the attribute must be an `id` of a form element in the same document. If this attribute is not specified, this element must be a descendant of a form element. This attribute enables you to place `<keygen>` elements anywhere within a document, not just as descendants of their form elements.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:keygen",
				"tags": []
			},
			"keytype": {
				"name": "keytype",
				"status": "living",
				"summary": "The type of key generated. The default value is `RSA`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:keygen",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The name of the control, which is submitted with the form data.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:keygen",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/label": {
		"name": "label",
		"status": "living",
		"summary": "The `<label>` HTML element represents a caption for an item in a user interface.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLLabelElement",
		"attributes": {
			"for": {
				"name": "for",
				"status": "living",
				"summary": "The value of the `for` attribute must be a single id for a labelable form-related element in the same document as the `<label>` element. So, any given `label` element can be associated with only one form control.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:label",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/legend": {
		"name": "legend",
		"status": "living",
		"summary": "The `<legend>` HTML element represents a caption for the content of its parent fieldset.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLLegendElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/li": {
		"name": "li",
		"status": "living",
		"summary": "The `<li>` HTML element is used to represent an item in a list. It must be contained in a parent element: an ordered list (ol), an unordered list (ul), or a menu (menu). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content"
		],
		"interface": "HTMLLIElement",
		"attributes": {
			"value": {
				"name": "value",
				"status": "living",
				"summary": "This integer attribute indicates the current ordinal value of the list item as defined by the ol element. The only allowed value for this attribute is a number, even if the list is displayed with Roman numerals or letters. List items that follow this one continue numbering from the value set. The value attribute has no meaning for unordered lists (ul) or for menus (menu).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:li",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "deprecated",
				"summary": "This character attribute indicates the numbering type.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:li",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/link": {
		"name": "link",
		"status": "living",
		"summary": "The `<link>` HTML element specifies relationships between the current document and an external resource. This element is most commonly used to link to CSS, but is also used to establish site icons (both \"favicon\" style icons and icons for the home screen and apps on mobile devices) among other things.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML document metadata",
			"Web Performance",
			"metadata"
		],
		"interface": "HTMLLinkElement",
		"attributes": {
			"as": {
				"name": "as",
				"status": "living",
				"summary": "This attribute is only used when `rel=\"preload\"` or `rel=\"prefetch\"` has been set on the `<link>` element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"crossorigin": {
				"name": "crossorigin",
				"status": "living",
				"summary": "This enumerated attribute indicates whether CORS must be used when fetching the resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "For `rel=\"stylesheet\"` only, the `disabled` Boolean attribute indicates whether or not the described stylesheet should be loaded and applied to the document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"fetchpriority": {
				"name": "fetchpriority",
				"status": "living",
				"summary": "Provides a hint of the relative priority to use when fetching a preloaded resource. Allowed values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "This attribute specifies the URL of the linked resource. A URL can be absolute or relative.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"hreflang": {
				"name": "hreflang",
				"status": "living",
				"summary": "This attribute indicates the language of the linked resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"imagesizes": {
				"name": "imagesizes",
				"status": "living",
				"summary": "For `rel=\"preload\"` and `as=\"image\"` only, the `imagesizes` attribute is a sizes attribute that indicates to preload the appropriate resource used by an `img` element with corresponding values for its `srcset` and `sizes` attributes.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"imagesrcset": {
				"name": "imagesrcset",
				"status": "living",
				"summary": "For `rel=\"preload\"` and `as=\"image\"` only, the `imagesrcset` attribute is a sourceset attribute that indicates to preload the appropriate resource used by an `img` element with corresponding values for its `srcset` and `sizes` attributes.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"integrity": {
				"name": "integrity",
				"status": "experimental",
				"summary": "Contains inline metadata — a base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"media": {
				"name": "media",
				"status": "living",
				"summary": "This attribute specifies the media that the linked resource applies to. Its value must be a media type / media query.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"prefetch": {
				"name": "prefetch",
				"status": "securecontext",
				"summary": "Identifies a resource that might be required by the next navigation and that the user agent should retrieve it.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"referrerpolicy": {
				"name": "referrerpolicy",
				"status": "experimental",
				"summary": "A string indicating which referrer to use when fetching the resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"rel": {
				"name": "rel",
				"status": "living",
				"summary": "This attribute names a relationship of the linked document to the current document. The attribute must be a space-separated list of link type values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"sizes": {
				"name": "sizes",
				"status": "living",
				"summary": "This attribute defines the sizes of the icons for visual media contained in the resource.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"title": {
				"name": "title",
				"status": "living",
				"summary": "The `title` attribute has special semantics on the `<link>` element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "This attribute is used to define the type of the content linked to.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:link",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/main": {
		"name": "main",
		"status": "living",
		"summary": "The `<main>` HTML element represents the dominant content of the body of a document. The main content area consists of content that is directly related to or expands upon the central topic of a document, or the central functionality of an application.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/map": {
		"name": "map",
		"status": "living",
		"summary": "The `<map>` HTML element is used with area elements to define an image map (a clickable link area).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML embedded content",
			"Multimedia"
		],
		"interface": "HTMLMapElement",
		"attributes": {
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The `name` attribute gives the map a name so that it can be referenced. The attribute must be present and must have a non-empty value with no space characters. The value of the `name` attribute must not be equal to the value of the `name` attribute of another `<map>` element in the same document. If the id attribute is also specified, both attributes must have the same value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:map",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/mark": {
		"name": "mark",
		"status": "living",
		"summary": "The `<mark>` HTML element represents text which is marked or highlighted for reference or notation purposes, due to the marked passage's relevance or importance in the enclosing context.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"Highlighting",
			"Highlighting Text",
			"Marking Text"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/marquee": {
		"name": "marquee",
		"status": "deprecated",
		"summary": "The `<marquee>` HTML element is used to insert a scrolling area of text. You can control what happens when the text reaches the edges of its content area using its attributes.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLMarqueeElement",
		"attributes": {
			"behavior": {
				"name": "behavior",
				"status": "living",
				"summary": "Sets how the text is scrolled within the marquee. Possible values are `scroll`, `slide` and `alternate`. If no value is specified, the default value is `scroll`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"bgcolor": {
				"name": "bgcolor",
				"status": "living",
				"summary": "Sets the background color through color name or hexadecimal value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"direction": {
				"name": "direction",
				"status": "living",
				"summary": "Sets the direction of the scrolling within the marquee. Possible values are `left`, `right`, `up` and `down`. If no value is specified, the default value is `left`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "Sets the height in pixels or percentage value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"hspace": {
				"name": "hspace",
				"status": "living",
				"summary": "Sets the horizontal margin",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"loop": {
				"name": "loop",
				"status": "living",
				"summary": "Sets the number of times the marquee will scroll. If no value is specified, the default value is −1, which means the marquee will scroll continuously.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"scrollamount": {
				"name": "scrollamount",
				"status": "living",
				"summary": "Sets the amount of scrolling at each interval in pixels. The default value is 6.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"scrolldelay": {
				"name": "scrolldelay",
				"status": "living",
				"summary": "Sets the interval between each scroll movement in milliseconds. The default value is 85. Note that any value smaller than 60 is ignored and the value 60 is used instead, unless`truespeed`is specified.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"truespeed": {
				"name": "truespeed",
				"status": "living",
				"summary": "By default,`scrolldelay`values lower than 60 are ignored. If`truespeed`is present, those values are not ignored.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"vspace": {
				"name": "vspace",
				"status": "living",
				"summary": "Sets the vertical margin in pixels or percentage value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "Sets the width in pixels or percentage value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:marquee",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/menu": {
		"name": "menu",
		"status": "living",
		"summary": "The `<menu>` HTML element is a semantic alternative to ul. It represents an unordered list of items (represented by li elements), each of which represents a link or other command that the user can activate.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content"
		],
		"interface": "HTMLMenuElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/menuitem": {
		"name": "menuitem",
		"status": "deprecated",
		"summary": "The `<menuitem>` HTML element represents a command that a user is able to invoke through a popup menu. This includes context menus, as well as menus that might be attached to a menu button.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menuitem",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"HTML",
			"Navigation",
			"Navigation Menus",
			"UI",
			"UX",
			"User Interface",
			"User experience"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {
			"checked": {
				"name": "checked",
				"status": "living",
				"summary": "Boolean attribute which indicates whether the command is selected. May only be used when the `type` attribute is `checkbox` or `radio`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			},
			"command": {
				"name": "command",
				"status": "living",
				"summary": "Specifies the ID of a separate element, indicating a command to be invoked indirectly. May not be used within a menu item that also includes the attributes `checked`, `disabled`, `icon`, `label`, `radiogroup` or `type`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			},
			"default": {
				"name": "default",
				"status": "living",
				"summary": "This Boolean attribute indicates use of the same command as the menu's subject element (such as a `button` or `input`).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			},
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "Boolean attribute which indicates that the command is not available in the current state. Note that `disabled` is distinct from `hidden`; the `disabled` attribute is appropriate in any context where a change in circumstances might render the command relevant.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			},
			"icon": {
				"name": "icon",
				"status": "living",
				"summary": "Image URL, used to provide a picture to represent the command.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			},
			"label": {
				"name": "label",
				"status": "living",
				"summary": "The name of the command as shown to the user. Required when a `command` attribute is not present.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			},
			"radiogroup": {
				"name": "radiogroup",
				"status": "living",
				"summary": "This attribute specifies the name of a group of commands to be toggled as radio buttons when selected. May only be used where the `type` attribute is `radio`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "This attribute indicates the kind of command, and can be one of three values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:menuitem",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/meta": {
		"name": "meta",
		"status": "living",
		"summary": "The `<meta>` HTML element represents metadata that cannot be represented by other HTML meta-related elements, like base, link, script, style or title.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Document",
			"HTML",
			"HTML charset",
			"HTML document metadata",
			"charset",
			"http-equiv",
			"metadata"
		],
		"interface": "HTMLMetaElement",
		"attributes": {
			"charset": {
				"name": "charset",
				"status": "living",
				"summary": "This attribute declares the document's character encoding. If the attribute is present, its value must be an ASCII case-insensitive match for the string \"`utf-8`\", because UTF-8 is the only valid encoding for HTML5 documents. `<meta>` elements which declare a character encoding must be located entirely within the first 1024 bytes of the document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meta",
				"tags": []
			},
			"content": {
				"name": "content",
				"status": "living",
				"summary": "This attribute contains the value for the http-equiv or name attribute, depending on which is used.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meta",
				"tags": []
			},
			"http-equiv": {
				"name": "http-equiv",
				"status": "living",
				"summary": "Defines a pragma directive. The attribute is named `http-equiv(alent)` because all the allowed values are names of particular HTTP headers.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meta",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/meter": {
		"name": "meter",
		"status": "living",
		"summary": "The `<meter>` HTML element represents either a scalar value within a known range or a fractional value.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLMeterElement",
		"attributes": {
			"value": {
				"name": "value",
				"status": "living",
				"summary": "The current numeric value. This must be between the minimum and maximum values (`min` attribute and `max` attribute) if they are specified. If unspecified or malformed, the value is `0`. If specified, but not within the range given by the `min` attribute and `max` attribute, the value is equal to the nearest end of the range.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meter",
				"tags": []
			},
			"min": {
				"name": "min",
				"status": "living",
				"summary": "The lower numeric bound of the measured range. This must be less than the maximum value (`max` attribute), if specified. If unspecified, the minimum value is `0`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meter",
				"tags": []
			},
			"max": {
				"name": "max",
				"status": "living",
				"summary": "The upper numeric bound of the measured range. This must be greater than the minimum value (`min` attribute), if specified. If unspecified, the maximum value is `1`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meter",
				"tags": []
			},
			"low": {
				"name": "low",
				"status": "living",
				"summary": "The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (`min` attribute), and it also must be less than the high value and maximum value (`high` attribute and `max` attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the `low` value is equal to the minimum value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meter",
				"tags": []
			},
			"high": {
				"name": "high",
				"status": "living",
				"summary": "The lower numeric bound of the high end of the measured range. This must be less than the maximum value (`max` attribute), and it also must be greater than the low value and minimum value (`low` attribute and `min` attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the `high` value is equal to the maximum value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meter",
				"tags": []
			},
			"optimum": {
				"name": "optimum",
				"status": "living",
				"summary": "This attribute indicates the optimal numeric value. It must be within the range (as defined by the `min` attribute and `max` attribute). When used with the `low` attribute and `high` attribute, it gives an indication where along the range is considered preferable. For example, if it is between the `min` attribute and the `low` attribute, then the lower range is considered preferred. The browser may color the meter's bar differently depending on whether the value is less than or equal to the optimum value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:meter",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/nav": {
		"name": "nav",
		"status": "living",
		"summary": "The `<nav>` HTML element represents a section of a page whose purpose is to provide navigation links, either within the current document or to other documents. Common examples of navigation sections are menus, tables of contents, and indexes.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections",
			"Links",
			"Navigation",
			"Sections"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/nobr": {
		"name": "nobr",
		"status": "deprecated",
		"summary": "The `<nobr>` HTML element prevents the text it contains from automatically wrapping across multiple lines, potentially resulting in the user having to scroll horizontally to see the entire width of the text.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Non-standard",
			"Deprecated"
		],
		"interface": "HTMLElement",
		"attributes": [],
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/noembed": {
		"name": "noembed",
		"status": "deprecated",
		"summary": "The `<noembed>` HTML element is an obsolete, non-standard way to provide alternative, or \"fallback\", content for browsers that do not support the embed element or do not support the type of embedded content an author wishes to use. This element was deprecated in HTML 4.01 and above in favor of placing fallback content between the opening and closing tags of an object element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noembed",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Embedded content",
			"Embedding",
			"HTML",
			"Non-standard",
			"Deprecated"
		],
		"interface": "HTMLElement",
		"attributes": [],
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/noframes": {
		"name": "noframes",
		"status": "deprecated",
		"summary": "The `<noframes>` HTML element provides content to be presented in browsers that don't support (or have disabled support for) the frame element. Although most commonly-used browsers support frames, there are exceptions, including certain special-use browsers including some mobile browsers, as well as text-mode browsers.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noframes",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Frames",
			"HTML",
			"HTML frames",
			"Deprecated"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/noscript": {
		"name": "noscript",
		"status": "living",
		"summary": "The `<noscript>` HTML element defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML scripting"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/object": {
		"name": "object",
		"status": "living",
		"summary": "The `<object>` HTML element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML embedded content"
		],
		"interface": "HTMLObjectElement",
		"attributes": {
			"archive": {
				"name": "archive",
				"status": "deprecated",
				"summary": "A space-separated list of URIs for archives of resources for the object.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"border": {
				"name": "border",
				"status": "deprecated",
				"summary": "The width of a border around the control, in pixels.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"classid": {
				"name": "classid",
				"status": "deprecated",
				"summary": "The URI of the object's implementation. It can be used together with, or in place of, the data attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"codebase": {
				"name": "codebase",
				"status": "deprecated",
				"summary": "The base path used to resolve relative URIs specified by classid, data, or archive. If not specified, the default is the base URI of the current document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"codetype": {
				"name": "codetype",
				"status": "deprecated",
				"summary": "The content type of the data specified by classid.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"data": {
				"name": "data",
				"status": "living",
				"summary": "The address of the resource as a valid URL. At least one of data and type must be defined.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"declare": {
				"name": "declare",
				"status": "deprecated",
				"summary": "The presence of this Boolean attribute makes this element a declaration only. The object must be instantiated by a subsequent `<object>` element. In HTML5, repeat the <object> element completely each time that the resource is reused.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"form": {
				"name": "form",
				"status": "living",
				"summary": "The form element, if any, that the object element is associated with (its form owner). The value of the attribute must be an ID of a form element in the same document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The height of the displayed resource, in CSS pixels. -- (Absolute values only. NO percentages)",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The name of valid browsing context (HTML5), or the name of the control (HTML 4).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"standby": {
				"name": "standby",
				"status": "deprecated",
				"summary": "A message that the browser can show while loading the object's implementation and data.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "The content type of the resource specified by data. At least one of data and type must be defined.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"usemap": {
				"name": "usemap",
				"status": "living",
				"summary": "A hash-name reference to a map element; that is a '#' followed by the value of a name of a map element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The width of the display resource, in CSS pixels. -- (Absolute values only. NO percentages)",
				"url": "",
				"type": "attribute",
				"scope": "HTML:object",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/ol": {
		"name": "ol",
		"status": "living",
		"summary": "The `<ol>` HTML element represents an ordered list of items — typically rendered as a numbered list.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content",
			"HTML Flow content"
		],
		"interface": "HTMLOListElement",
		"attributes": {
			"reversed": {
				"name": "reversed",
				"status": "living",
				"summary": "This Boolean attribute specifies that the list's items are in reverse order. Items will be numbered from high to low.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:ol",
				"tags": []
			},
			"start": {
				"name": "start",
				"status": "living",
				"summary": "An integer to start counting from for the list items. Always an Arabic numeral (1, 2, 3, etc.), even when the numbering `type` is letters or Roman numerals. For example, to start numbering elements from the letter \"d\" or the Roman numeral \"iv,\" use `start=\"4\"`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:ol",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "Sets the numbering type.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:ol",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/optgroup": {
		"name": "optgroup",
		"status": "living",
		"summary": "The `<optgroup>` HTML element creates a grouping of options within a select element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLOptGroupElement",
		"attributes": {
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "If this Boolean attribute is set, none of the items in this option group is selectable. Often browsers grey out such control and it won't receive any browsing events, like mouse clicks or focus-related ones.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:optgroup",
				"tags": []
			},
			"label": {
				"name": "label",
				"status": "living",
				"summary": "The name of the group of options, which the browser can use when labeling the options in the user interface. This attribute is mandatory if this element is used.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:optgroup",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/option": {
		"name": "option",
		"status": "living",
		"summary": "The `<option>` HTML element is used to define an item contained in a select, an optgroup, or a datalist element. As such, `<option>` can represent menu items in popups and other lists of items in an HTML document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms",
			"Select"
		],
		"interface": "HTMLOptionElement",
		"attributes": {
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "If this Boolean attribute is set, this option is not checkable. Often browsers grey out such control and it won't receive any browsing event, like mouse clicks or focus-related ones. If this attribute is not set, the element can still be disabled if one of its ancestors is a disabled optgroup element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:option",
				"tags": []
			},
			"label": {
				"name": "label",
				"status": "living",
				"summary": "This attribute is text for the label indicating the meaning of the option. If the `label` attribute isn't defined, its value is that of the element text content.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:option",
				"tags": []
			},
			"selected": {
				"name": "selected",
				"status": "living",
				"summary": "If present, this Boolean attribute indicates that the option is initially selected. If the `<option>` element is the descendant of a select element whose multiple attribute is not set, only one single `<option>` of this select element may have the `selected` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:option",
				"tags": []
			},
			"value": {
				"name": "value",
				"status": "living",
				"summary": "The content of this attribute represents the value to be submitted with the form, should this option be selected. If this attribute is omitted, the value is taken from the text content of the option element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:option",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/output": {
		"name": "output",
		"status": "living",
		"summary": "The `<output>` HTML element is a container element into which a site or app can inject the results of a calculation or the outcome of a user action.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML forms",
			"HTML Flow content"
		],
		"interface": "HTMLOutputElement",
		"attributes": {
			"for": {
				"name": "for",
				"status": "living",
				"summary": "A space-separated list of other elements' ids, indicating that those elements contributed input values to (or otherwise affected) the calculation.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:output",
				"tags": []
			},
			"form": {
				"name": "form",
				"status": "living",
				"summary": "The form element to associate the output with (its form owner). The value of this attribute must be the id of a `<form>` in the same document. (If this attribute is not set, the `<output>` is associated with its ancestor `<form>` element, if any.)",
				"url": "",
				"type": "attribute",
				"scope": "HTML:output",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The element's name. Used in the HTMLFormElement.elements API.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:output",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/p": {
		"name": "p",
		"status": "living",
		"summary": "The `<p>` HTML element represents a paragraph. Paragraphs are usually represented in visual media as blocks of text separated from adjacent blocks by blank lines and/or first-line indentation, but HTML paragraphs can be any structural grouping of related content, such as images or form fields.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content"
		],
		"interface": "HTMLParagraphElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/param": {
		"name": "param",
		"status": "deprecated",
		"summary": "The `<param>` HTML element defines parameters for an object element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLParamElement",
		"attributes": {
			"name": {
				"name": "name",
				"status": "deprecated",
				"summary": "Name of the parameter.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:param",
				"tags": []
			},
			"value": {
				"name": "value",
				"status": "deprecated",
				"summary": "Specifies the value of the parameter.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:param",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "deprecated",
				"summary": "Only used if the `valuetype` is set to `ref`. Specifies the MIME type of values found at the URI specified by value.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:param",
				"tags": []
			},
			"valuetype": {
				"name": "valuetype",
				"status": "deprecated",
				"summary": "Specifies the type of the `value` attribute. Possible values are.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:param",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/picture": {
		"name": "picture",
		"status": "living",
		"summary": "The `<picture>` HTML element contains zero or more source elements and one img element to offer alternative versions of an image for different display/device scenarios.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Graphics",
			"HTML",
			"HTML embedded content",
			"Images",
			"WebP"
		],
		"interface": "HTMLPictureElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/plaintext": {
		"name": "plaintext",
		"status": "deprecated",
		"summary": "The `<plaintext>` HTML element renders everything following the start tag as raw text, ignoring any following HTML. There is no closing tag, since everything after it is considered raw text.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/plaintext",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated",
			"Plain text"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/portal": {
		"name": "portal",
		"status": "living",
		"summary": "The `<portal>` HTML element enables the embedding of another HTML page into the current one for the purposes of allowing smoother navigation into new pages.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/portal",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Content",
			"Embedded content",
			"Embedding",
			"HTML",
			"HTML embedded content"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {
			"referrerpolicy": {
				"name": "referrerpolicy",
				"status": "living",
				"summary": "Sets the referrer policy to use when requesting the page at the URL given as the value of the `src` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:portal",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "The URL of the page to embed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:portal",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/pre": {
		"name": "pre",
		"status": "living",
		"summary": "The `<pre>` HTML element represents preformatted text which is to be presented exactly as written in the HTML file. The text is typically rendered using a non-proportional, or monospaced, font. Whitespace inside this element is displayed as written.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content",
			"HTML Flow content"
		],
		"interface": "HTMLPreElement",
		"attributes": {
			"cols": {
				"name": "cols",
				"status": "deprecated",
				"summary": "Contains the preferred count of characters that a line should have. It was a non-standard synonym of width. To achieve such an effect, use CSS width instead.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:pre",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "deprecated",
				"summary": "Contains the preferred count of characters that a line should have. Though technically still implemented, this attribute has no visual effect; to achieve such an effect, use CSS width instead.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:pre",
				"tags": []
			},
			"wrap": {
				"name": "wrap",
				"status": "living",
				"summary": "Is a hint indicating how the overflow must happen. In modern browser this hint is ignored and no visual effect results in its present; to achieve such an effect, use CSS white-space instead.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:pre",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/progress": {
		"name": "progress",
		"status": "living",
		"summary": "The `<progress>` HTML element displays an indicator showing the completion progress of a task, typically displayed as a progress bar.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLProgressElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/q": {
		"name": "q",
		"status": "living",
		"summary": "The `<q>` HTML element indicates that the enclosed text is a short inline quotation. Most modern browsers implement this by surrounding the text in quotation marks. This element is intended for short quotations that don't require paragraph breaks; for long quotations use the blockquote element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Citation",
			"Cite",
			"HTML",
			"HTML text-level semantics",
			"Quotation",
			"Quotation Marks",
			"quote"
		],
		"interface": "HTMLQuoteElement",
		"attributes": {
			"cite": {
				"name": "cite",
				"status": "living",
				"summary": "The value of this attribute is a URL that designates a source document or message for the information quoted. This attribute is intended to point to information explaining the context or the reference for the quote.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:q",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/rb": {
		"name": "rb",
		"status": "deprecated",
		"summary": "The `<rb>` HTML element is used to delimit the base text component of a ruby annotation, i.e. the text that is being annotated. One `<rb>` element should wrap each separate atomic segment of the base text.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"HTML",
			"Ruby",
			"Text"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/rp": {
		"name": "rp",
		"status": "living",
		"summary": "The `<rp>` HTML element is used to provide fall-back parentheses for browsers that do not support display of ruby annotations using the ruby element. One `<rp>` element should enclose each of the opening and closing parentheses that wrap the rt element that contains the annotation's text.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"Ruby",
			"Text"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/rt": {
		"name": "rt",
		"status": "living",
		"summary": "The `<rt>` HTML element specifies the ruby text component of a ruby annotation, which is used to provide pronunciation, translation, or transliteration information for East Asian typography. The `<rt>` element must always be contained within a ruby element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"Ruby",
			"Text"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/rtc": {
		"name": "rtc",
		"status": "deprecated",
		"summary": "The `<rtc>` HTML element embraces semantic annotations of characters presented in a ruby of rb elements used inside of ruby element. rb elements can have both pronunciation (rt) and semantic (rtc) annotations.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"HTML",
			"Ruby Text",
			"Text"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/ruby": {
		"name": "ruby",
		"status": "living",
		"summary": "The `<ruby>` HTML element represents small annotations that are rendered above, below, or next to base text, usually used for showing the pronunciation of East Asian characters. It can also be used for annotating other kinds of text, but this usage is less common.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/s": {
		"name": "s",
		"status": "living",
		"summary": "The `<s>` HTML element renders text with a strikethrough, or a line through it. Use the `<s>` element to represent things that are no longer relevant or no longer accurate. However, `<s>` is not appropriate when indicating document edits; for that, use the del and ins elements, as appropriate.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"text-decoration"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/samp": {
		"name": "samp",
		"status": "living",
		"summary": "The `<samp>` HTML element is used to enclose inline text which represents sample (or quoted) output from a computer program. Its contents are typically rendered using the browser's default monospaced font (such as wikipedia or Lucida Console).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"Inline Sample",
			"Sample Output",
			"Sample Text"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/script": {
		"name": "script",
		"status": "living",
		"summary": "The `<script>` HTML element is used to embed executable code or data; this is typically used to embed or refer to JavaScript code. The `<script>` element can also be used with other languages, such as WebGL's GLSL shader programming language and JSON.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML scripting",
			"HTML Flow content",
			"HTML Metadata content",
			"HTML Phrasing content",
			"HTML Script-supporting element",
			"tag"
		],
		"interface": "HTMLScriptElement",
		"attributes": {
			"async": {
				"name": "async",
				"status": "living",
				"summary": "For classic scripts, if the `async` attribute is present, then the classic script will be fetched in parallel to parsing and evaluated as soon as it is available.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"crossorigin": {
				"name": "crossorigin",
				"status": "living",
				"summary": "Normal `script` elements pass minimal information to the  for scripts which do not pass the standard CORS checks. To allow error logging for sites which use a separate domain for static media, use this attribute. See CORS settings attributes for a more descriptive explanation of its valid arguments.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"defer": {
				"name": "defer",
				"status": "living",
				"summary": "This Boolean attribute is set to indicate to a browser that the script is meant to be executed after the document has been parsed, but before firing Document/DOMContentLoaded_event.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"fetchpriority": {
				"name": "fetchpriority",
				"status": "living",
				"summary": "Provides a hint of the relative priority to use when fetching an external script. Allowed values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"integrity": {
				"name": "integrity",
				"status": "living",
				"summary": "This attribute contains inline metadata that a user agent can use to verify that a fetched resource has been delivered free of unexpected manipulation. See Subresource Integrity.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"nomodule": {
				"name": "nomodule",
				"status": "living",
				"summary": "This Boolean attribute is set to indicate that the script should not be executed in browsers that support ES2015 modules — in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"nonce": {
				"name": "nonce",
				"status": "living",
				"summary": "A cryptographic nonce (number used once) to allow scripts in a script-src Content-Security-Policy. The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource's policy is otherwise trivial.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"referrerpolicy": {
				"name": "referrerpolicy",
				"status": "living",
				"summary": "Indicates which referrer to send when fetching the script, or resources fetched by the script.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "This attribute specifies the URI of an external script; this can be used as an alternative to embedding a script directly within a document.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "This attribute indicates the type of script represented. The value of this attribute will be in one of the following categories.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:script",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/section": {
		"name": "section",
		"status": "living",
		"summary": "The `<section>` HTML element represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it. Sections should always have a heading, with very few exceptions.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML sections"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/select": {
		"name": "select",
		"status": "living",
		"summary": "The `<select>` HTML element represents a control that provides a menu of options.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLSelectElement",
		"attributes": {
			"autocomplete": {
				"name": "autocomplete",
				"status": "living",
				"summary": "A string providing a hint for a user agent autocomplete feature. See The HTML autocomplete attribute for a complete list of values and details on how to use autocomplete.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			},
			"autofocus": {
				"name": "autofocus",
				"status": "living",
				"summary": "This Boolean attribute lets you specify that a form control should have input focus when the page loads. Only one form element in a document can have the `autofocus` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			},
			"disabled": {
				"name": "disabled",
				"status": "living",
				"summary": "This Boolean attribute indicates that the user cannot interact with the control. If this attribute is not specified, the control inherits its setting from the containing element, for example fieldset; if there is no containing element with the `disabled` attribute set, then the control is enabled.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			},
			"form": {
				"name": "form",
				"status": "living",
				"summary": "The form element to associate the `<select>` with (its form owner). The value of this attribute must be the id of a `<form>` in the same document. (If this attribute is not set, the `<select>` is associated with its ancestor `<form>` element, if any.)",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			},
			"multiple": {
				"name": "multiple",
				"status": "living",
				"summary": "This Boolean attribute indicates that multiple options can be selected in the list. If it is not specified, then only one option can be selected at a time. When `multiple` is specified, most browsers will show a scrolling list box instead of a single line dropdown.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "This attribute is used to specify the name of the control.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			},
			"required": {
				"name": "required",
				"status": "living",
				"summary": "A Boolean attribute indicating that an option with a non-empty string value must be selected.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			},
			"size": {
				"name": "size",
				"status": "living",
				"summary": "If the control is presented as a scrolling list box (e.g. when `multiple` is specified), this attribute represents the number of rows in the list that should be visible at one time. Browsers are not required to present a select element as a scrolled list box. The default value is `0`.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:select",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/shadow": {
		"name": "shadow",
		"status": "deprecated",
		"summary": "The `<shadow>` HTML element—an obsolete part of the Web Components technology suite—was intended to be used as a shadow DOM insertion point. You might have used it if you have created multiple shadow roots under a shadow host. It is not useful in ordinary HTML.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/shadow",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Deprecated",
			"HTML",
			"HTML Web Components",
			"Shadow Root",
			"Web Components",
			"shadow dom"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/slot": {
		"name": "slot",
		"status": "living",
		"summary": "The `<slot>` HTML element—part of the Web Components technology suite—is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML Web Components",
			"Web Components",
			"shadow dom"
		],
		"interface": "HTMLSlotElement",
		"attributes": {
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The slot's name.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:slot",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/small": {
		"name": "small",
		"status": "living",
		"summary": "The `<small>` HTML element represents side-comments and small print, like copyright and legal text, independent of its styled presentation. By default, it renders text within it one font-size smaller, such as from `small` to `x-small`.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"font-size"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/source": {
		"name": "source",
		"status": "living",
		"summary": "The `<source>` HTML element specifies multiple media resources for the picture, the audio element, or the video element. It is an empty element, meaning that it has no content and does not have a closing tag. It is commonly used to offer the same media content in multiple file formats in order to provide compatibility with a broad range of browsers given their differing support for image file formats and media file formats.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML embedded content",
			"Media",
			"Web Performance"
		],
		"interface": "HTMLSourceElement",
		"attributes": {
			"type": {
				"name": "type",
				"status": "living",
				"summary": "The MIME media type of the resource, optionally with a `codecs` parameter.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:source",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "Required if the `source` element’s parent is an audio and video element, but not allowed if the `source` element’s parent is a picture element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:source",
				"tags": []
			},
			"srcset": {
				"name": "srcset",
				"status": "living",
				"summary": "Required if the `source` element’s parent is a picture element, but not allowed if the `source` element’s parent is an audio or video element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:source",
				"tags": []
			},
			"sizes": {
				"name": "sizes",
				"status": "living",
				"summary": "Allowed if the `source` element’s parent is a picture element, but not allowed if the `source` element’s parent is an audio or video element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:source",
				"tags": []
			},
			"media": {
				"name": "media",
				"status": "living",
				"summary": "Allowed if the `source` element’s parent is a picture element, but not allowed if the `source` element’s parent is an audio or video element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:source",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "Allowed if the `source` element’s parent is a picture element, but not allowed if the `source` element’s parent is an audio or video element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:source",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "Allowed if the `source` element’s parent is a picture element, but not allowed if the `source` element’s parent is an audio or video element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:source",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/spacer": {
		"name": "spacer",
		"status": "deprecated",
		"summary": "The `<spacer>` HTML element is an obsolete HTML element which allowed insertion of empty spaces on pages. It was devised by Netscape to accomplish the same effect as a single-pixel layout image, which was something web designers used to use to add white spaces to web pages without actually using an image. However, `<spacer>` no longer supported by any major browser and the same effects can now be achieved using simple CSS.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/spacer",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLUnknownElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/span": {
		"name": "span",
		"status": "living",
		"summary": "The `<span>` HTML element is a generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the class or id attributes), or because they share attribute values, such as lang. It should be used only when no other semantic element is appropriate. `<span>` is very much like a div element, but div is a block-level element whereas a `<span>` is an inline element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content"
		],
		"interface": "HTMLSpanElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/strike": {
		"name": "strike",
		"status": "deprecated",
		"summary": "The `<strike>` HTML element places a strikethrough (horizontal line) over text.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/strong": {
		"name": "strong",
		"status": "living",
		"summary": "The `<strong>` HTML element indicates that its contents have strong importance, seriousness, or urgency. Browsers typically render the contents in bold type.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"Strong Importance",
			"Urgency"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/style": {
		"name": "style",
		"status": "living",
		"summary": "The `<style>` HTML element contains style information for a document, or part of a document. It contains CSS, which is applied to the contents of the document containing the `<style>` element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"CSS",
			"HTML",
			"HTML document metadata"
		],
		"interface": "HTMLStyleElement",
		"attributes": {
			"media": {
				"name": "media",
				"status": "living",
				"summary": "This attribute defines which media the style should be applied to. Its value is a media query, which defaults to `all` if the attribute is missing.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:style",
				"tags": []
			},
			"nonce": {
				"name": "nonce",
				"status": "living",
				"summary": "A cryptographic nonce (number used once) used to allow inline styles in a style-src Content-Security-Policy. The server must generate a unique nonce value each time it transmits a policy. It is critical to provide a nonce that cannot be guessed as bypassing a resource's policy is otherwise trivial.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:style",
				"tags": []
			},
			"title": {
				"name": "title",
				"status": "living",
				"summary": "This attribute specifies alternative style sheet sets.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:style",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/sub": {
		"name": "sub",
		"status": "living",
		"summary": "The `<sub>` HTML element specifies inline text which should be displayed as subscript for solely typographical reasons. Subscripts are typically rendered with a lowered baseline using smaller text.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Baseline",
			"Footnotes",
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"Subscript"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/summary": {
		"name": "summary",
		"status": "living",
		"summary": "The `<summary>` HTML element specifies a summary, caption, or legend for a details element's disclosure box. Clicking the `<summary>` element toggles the state of the parent `<details>` element open and closed.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Disclosure Box",
			"Disclosure Control",
			"Disclosure Summary",
			"HTML",
			"HTML interactive elements"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/sup": {
		"name": "sup",
		"status": "living",
		"summary": "The `<sup>` HTML element specifies inline text which is to be displayed as superscript for solely typographical reasons. Superscripts are usually rendered with a raised baseline using smaller text.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/table": {
		"name": "table",
		"status": "living",
		"summary": "The `<table>` HTML element represents tabular data — that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Sorting",
			"Tables"
		],
		"interface": "HTMLTableElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/tbody": {
		"name": "tbody",
		"status": "living",
		"summary": "The `<tbody>` HTML element encapsulates a set of table rows (tr elements), indicating that they comprise the body of the table (table).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Table Body",
			"Table Contents",
			"Tables"
		],
		"interface": "HTMLTableSectionElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/td": {
		"name": "td",
		"status": "living",
		"summary": "The `<td>` HTML element defines a cell of a table that contains data. It participates in the table model.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Cells",
			"Data Cell",
			"HTML",
			"HTML tabular data",
			"Table Cell",
			"Table Data",
			"Tables",
			"cell",
			"data"
		],
		"interface": "HTMLTableCellElement",
		"attributes": {
			"colspan": {
				"name": "colspan",
				"status": "living",
				"summary": "This attribute contains a non-negative integer value that indicates for how many columns the cell extends. Its default value is `1`. Values higher than 1000 will be considered as incorrect and will be set to the default value (1).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:td",
				"tags": []
			},
			"headers": {
				"name": "headers",
				"status": "living",
				"summary": "This attribute contains a list of space-separated strings, each corresponding to the id attribute of the th elements that apply to this element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:td",
				"tags": []
			},
			"rowspan": {
				"name": "rowspan",
				"status": "living",
				"summary": "This attribute contains a non-negative integer value that indicates for how many rows the cell extends. Its default value is `1`; if its value is set to `0`, it extends until the end of the table section (thead, tbody, tfoot, even if implicitly defined), that the cell belongs to. Values higher than 65534 are clipped down to 65534.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:td",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/template": {
		"name": "template",
		"status": "living",
		"summary": "The `<template>` HTML element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML Web Components",
			"HTML Flow content",
			"HTML Metadata content",
			"HTML Phrasing content",
			"HTML Script-supporting element",
			"Web Components"
		],
		"interface": "HTMLTemplateElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/textarea": {
		"name": "textarea",
		"status": "living",
		"summary": "The `<textarea>` HTML element represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Forms",
			"HTML",
			"HTML forms"
		],
		"interface": "HTMLTextAreaElement",
		"attributes": {
			"autocomplete": {
				"name": "autocomplete",
				"status": "living",
				"summary": "This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:textarea",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/tfoot": {
		"name": "tfoot",
		"status": "living",
		"summary": "The `<tfoot>` HTML element defines a set of rows summarizing the columns of the table.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Tables"
		],
		"interface": "HTMLTableSectionElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/th": {
		"name": "th",
		"status": "living",
		"summary": "The `<th>` HTML element defines a cell as header of a group of table cells. The exact nature of this group is defined by the scope and headers attributes.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Heading Cell",
			"Table Cell",
			"Table Head",
			"Table Header",
			"Table Heading",
			"Table Heading Cell",
			"Tables",
			"cell"
		],
		"interface": "HTMLTableCellElement",
		"attributes": {
			"abbr": {
				"name": "abbr",
				"status": "living",
				"summary": "This attribute contains a short abbreviated description of the cell's content. Some user-agents, such as speech readers, may present this description before the content itself.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:th",
				"tags": []
			},
			"colspan": {
				"name": "colspan",
				"status": "living",
				"summary": "This attribute contains a non-negative integer value that indicates for how many columns the cell extends. Its default value is `1`. Values higher than 1000 will be considered as incorrect and will be set to the default value (1).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:th",
				"tags": []
			},
			"headers": {
				"name": "headers",
				"status": "living",
				"summary": "This attribute contains a list of space-separated strings, each corresponding to the id attribute of the th elements that apply to this element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:th",
				"tags": []
			},
			"rowspan": {
				"name": "rowspan",
				"status": "living",
				"summary": "This attribute contains a non-negative integer value that indicates for how many rows the cell extends. Its default value is `1`; if its value is set to `0`, it extends until the end of the table section (thead, tbody, tfoot, even if implicitly defined), that the cell belongs to. Values higher than 65534 are clipped down to 65534.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:th",
				"tags": []
			},
			"scope": {
				"name": "scope",
				"status": "living",
				"summary": "This enumerated attribute defines the cells that the header (defined in the th) element relates to. It may have the following values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:th",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/thead": {
		"name": "thead",
		"status": "living",
		"summary": "The `<thead>` HTML element defines a set of rows defining the head of the columns of the table.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Tables"
		],
		"interface": "HTMLTableSectionElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/time": {
		"name": "time",
		"status": "living",
		"summary": "The `<time>` HTML element represents a specific period in time. It may include the `datetime` attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content"
		],
		"interface": "HTMLTimeElement",
		"attributes": {
			"datetime": {
				"name": "datetime",
				"status": "living",
				"summary": "This attribute indicates the time and/or date of the element and must be in one of the formats described below.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:time",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/title": {
		"name": "title",
		"status": "living",
		"summary": "The `<title>` HTML element defines the document's title that is shown in a Browser's title bar or a page's tab. It only contains text; tags within the element are ignored.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML document metadata",
			"HTML Metadata content",
			"Page Name",
			"Page Title",
			"Tab Name",
			"Tab Title",
			"Window Name",
			"Window Title"
		],
		"interface": "HTMLTitleElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/tr": {
		"name": "tr",
		"status": "living",
		"summary": "The `<tr>` HTML element defines a row of cells in a table. The row's cells can then be established using a mix of td (data cell) and th (header cell) elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML tabular data",
			"Tables",
			"tag",
			"tr tag"
		],
		"interface": "HTMLTableRowElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/track": {
		"name": "track",
		"status": "living",
		"summary": "The `<track>` HTML element is used as a child of the media elements, audio and video. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (`.vtt` files) — Web Video Text Tracks.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Accessibility",
			"Cues",
			"HTML",
			"HTML embedded content",
			"Multimedia",
			"TextTrack",
			"a11y"
		],
		"interface": "HTMLTrackElement",
		"attributes": {
			"default": {
				"name": "default",
				"status": "living",
				"summary": "This attribute indicates that the track should be enabled unless the user's preferences indicate that another track is more appropriate. This may only be used on one `track` element per media element.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:track",
				"tags": []
			},
			"kind": {
				"name": "kind",
				"status": "living",
				"summary": "How the text track is meant to be used. If omitted the default kind is `subtitles`. If the attribute contains an invalid value, it will use `metadata` (Versions of Chrome earlier than 52 treated an invalid value as `subtitles`). The following keywords are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:track",
				"tags": []
			},
			"label": {
				"name": "label",
				"status": "living",
				"summary": "A user-readable title of the text track which is used by the browser when listing available text tracks.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:track",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "Address of the track (`.vtt` file). Must be a valid URL. This attribute must be specified and its URL value must have the same origin as the document — unless the audio or video parent element of the `track` element has a `crossorigin` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:track",
				"tags": []
			},
			"srclang": {
				"name": "srclang",
				"status": "living",
				"summary": "Language of the track text data. It must be a valid BCP 47 language tag. If the `kind` attribute is set to `subtitles`, then `srclang` must be defined.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:track",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/tt": {
		"name": "tt",
		"status": "deprecated",
		"summary": "The `<tt>` HTML element creates inline text which is presented using the user agent default monospace font face. This element was created for the purpose of rendering text as it would be displayed on a fixed-width display such as a teletype, text-only screen, or line printer.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Monospace",
			"Monotype",
			"Non-proportional Type",
			"Deprecated",
			"Teletype",
			"Teletype Text",
			"font-family"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/u": {
		"name": "u",
		"status": "living",
		"summary": "The `<u>` HTML element represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation. This is rendered by default as a simple solid underline, but may be altered using CSS.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"Annotation",
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"Unarticulated Annotation",
			"Underline"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/ul": {
		"name": "ul",
		"status": "living",
		"summary": "The `<ul>` HTML element represents an unordered list of items, typically rendered as a bulleted list.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML grouping content"
		],
		"interface": "HTMLUListElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/var": {
		"name": "var",
		"status": "living",
		"summary": "The `<var>` HTML element represents the name of a variable in a mathematical expression or a programming context. It's typically presented using an italicized version of the current typeface, although that behavior is browser-dependent.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics",
			"HTML Flow content",
			"HTML Palpable Content",
			"HTML Phrasing content",
			"variable"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/video": {
		"name": "video",
		"status": "living",
		"summary": "The `<video>` HTML element embeds a media player which supports video playback into the document. You can use `<video>` for audio content as well, but the audio element may provide a more appropriate user experience.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML Video",
			"HTML Video Player",
			"HTML embedded content",
			"Media",
			"Movie Playback",
			"Movies",
			"Multimedia",
			"Playing Movies",
			"Playing Video",
			"Showing Video"
		],
		"interface": "HTMLVideoElement",
		"attributes": {
			"autoplay": {
				"name": "autoplay",
				"status": "living",
				"summary": "A Boolean attribute; if specified, the video automatically begins to play back as soon as it can do so without stopping to finish loading the data.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"autopictureinpicture": {
				"name": "autopictureinpicture",
				"status": "experimental",
				"summary": "A Boolean attribute which if `true` indicates that the element should automatically toggle picture-in-picture mode when the user switches back and forth between this document and another document or application.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"controls": {
				"name": "controls",
				"status": "living",
				"summary": "If this attribute is present, the browser will offer controls to allow the user to control video playback, including volume, seeking, and pause/resume playback.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"controlslist": {
				"name": "controlslist",
				"status": "experimental",
				"summary": "The `controlslist` attribute, when specified, helps the browser select what controls to show on the media element whenever the browser shows its own set of controls (e.g. when the `controls` attribute is specified).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"crossorigin": {
				"name": "crossorigin",
				"status": "living",
				"summary": "This enumerated attribute indicates whether to use CORS to fetch the related video. CORS-enabled resources can be reused in the canvas element without being tainted. The allowed values are.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"disablepictureinpicture": {
				"name": "disablepictureinpicture",
				"status": "experimental",
				"summary": "Prevents the browser from suggesting a Picture-in-Picture context menu or to request Picture-in-Picture automatically in some cases.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"disableremoteplayback": {
				"name": "disableremoteplayback",
				"status": "experimental",
				"summary": "A Boolean attribute used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The height of the video's display area, in CSS pixels (absolute values only; no percentages.)",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"loop": {
				"name": "loop",
				"status": "living",
				"summary": "A Boolean attribute; if specified, the browser will automatically seek back to the start upon reaching the end of the video.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"muted": {
				"name": "muted",
				"status": "living",
				"summary": "A Boolean attribute that indicates the default setting of the audio contained in the video. If set, the audio will be initially silenced. Its default value is `false`, meaning that the audio will be played when the video is played.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"playsinline": {
				"name": "playsinline",
				"status": "living",
				"summary": "A Boolean attribute indicating that the video is to be played \"inline\", that is within the element's playback area. Note that the absence of this attribute does not imply that the video will always be played in fullscreen.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"poster": {
				"name": "poster",
				"status": "living",
				"summary": "A URL for an image to be shown while the video is downloading. If this attribute isn't specified, nothing is displayed until the first frame is available, then the first frame is shown as the poster frame.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"preload": {
				"name": "preload",
				"status": "living",
				"summary": "This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience with regards to what content is loaded before the video is played. It may have one of the following values.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "The URL of the video to embed. This is optional; you may instead use the source element within the video block to specify the video to embed.",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The width of the video's display area, in CSS pixels (absolute values only; no percentages).",
				"url": "",
				"type": "attribute",
				"scope": "HTML:video",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/wbr": {
		"name": "wbr",
		"status": "living",
		"summary": "The `<wbr>` HTML element represents a word break opportunity—a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"HTML text-level semantics"
		],
		"interface": "HTMLElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/html/element/xmp": {
		"name": "xmp",
		"status": "deprecated",
		"summary": "The `<xmp>` HTML element renders text between the start and end tags without interpreting the HTML in between and using a monospaced font. The HTML2 specification recommended that it should be rendered wide enough to allow 80 characters per line.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/xmp",
		"type": "element",
		"scope": "HTML",
		"tags": [
			"HTML",
			"Deprecated"
		],
		"interface": "HTMLPreElement",
		"attributes": {},
		"globalAttributeScopes": [
			"HTML:global:generic",
			"HTML:global:eventhandler",
			"HTML:global:aria"
		]
	},
	"/web/svg/element/*": {
		"name": "SVG:*",
		"status": "virtual",
		"summary": "Container to hold the global attributes of all SVG elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG"
		],
		"interface": "SVGElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Assigns a class name or set of class names to an element. You may assign the same class name or names to any number of elements, however, multiple class names must be separated by whitespace characters.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/class",
				"type": "attribute",
				"scope": "SVG:global:styling",
				"tags": [
					"SVG",
					"SVG Attribute"
				]
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "The `style` attribute allows to style an element using CSS declarations. It functions identically to the `style` attribute in HTML.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/style",
				"type": "attribute",
				"scope": "SVG:global:styling",
				"tags": [
					"SVG",
					"SVG Attribute"
				]
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "The `id` attribute assigns a unique name to an element.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/id",
				"type": "attribute",
				"scope": "SVG:global:core",
				"tags": [
					"SVG",
					"SVG Attribute"
				]
			},
			"lang": {
				"name": "lang",
				"status": "living",
				"summary": "The `lang` attribute specifies the primary language used in contents and attributes containing text content of particular elements.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/lang",
				"type": "attribute",
				"scope": "SVG:global:core",
				"tags": [
					"SVG",
					"SVG Attribute"
				]
			},
			"tabindex": {
				"name": "tabindex",
				"status": "living",
				"summary": "The `tabindex` attribute allows you to control whether an element is focusable and to define the relative order of the element for the purposes of sequential focus navigation.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/tabindex",
				"type": "attribute",
				"scope": "SVG:global:core",
				"tags": [
					"SVG",
					"SVG Attribute"
				]
			},
			"xml:base": {
				"name": "xml:base",
				"status": "deprecated",
				"summary": "The `xml:base` attribute specifies a base IRI other than the base IRI of the document or external entity.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:base",
				"type": "attribute",
				"scope": "SVG:global:core",
				"tags": [
					"Deprecated",
					"SVG",
					"SVG Attribute"
				]
			},
			"xml:lang": {
				"name": "xml:lang",
				"status": "living",
				"summary": "The `xml:lang` attribute specifies the primary language used in contents and attributes containing text content of particular elements.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:lang",
				"type": "attribute",
				"scope": "SVG:global:core",
				"tags": [
					"SVG",
					"SVG Attribute"
				]
			},
			"xml:space": {
				"name": "xml:space",
				"status": "living",
				"summary": "SVG supports the built-in XML `xml:space` attribute to handle whitespace characters inside elements. Child elements inside an element may also have an `xml:space` attribute that overrides the parent's one.",
				"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:space",
				"type": "attribute",
				"scope": "SVG:global:core",
				"tags": [
					"SVG",
					"SVG Attribute"
				]
			},
			"default": {
				"name": "default",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "SVG:global:core",
				"tags": []
			}
		}
	},
	"/web/svg/element/a": {
		"name": "a",
		"status": "living",
		"summary": "The <a> SVG element creates a hyperlink to other web pages, files, locations in the same page, email addresses, or any other URL. It is very similar to HTML's a element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGAElement",
		"attributes": {
			"href": {
				"name": "href",
				"status": "living",
				"summary": "The URL or URL fragment the hyperlink points to.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:a",
				"tags": []
			},
			"target": {
				"name": "target",
				"status": "living",
				"summary": "Where to display the linked URL.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:a",
				"tags": []
			},
			"xlink:href": {
				"name": "xlink:href",
				"status": "deprecated",
				"summary": "The URL or URL fragment that the hyperlink points to. May be required for backwards compatibility for older browsers.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:a",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/altglyph": {
		"name": "altGlyph",
		"status": "deprecated",
		"summary": "The `<altGlyph>` SVG element allows sophisticated selection of the glyphs used to render its child character data.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyph",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGAltGlyphElement",
		"attributes": {
			"x": {
				"name": "x",
				"status": "living",
				"summary": "This attribute defines the corresponding absolute x-coordinates for rendering the element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "This attribute defines the corresponding absolute y-coordinates for rendering the element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			},
			"dx": {
				"name": "dx",
				"status": "living",
				"summary": "This attribute indicates a shift along the x-axis on the position of the element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			},
			"dy": {
				"name": "dy",
				"status": "living",
				"summary": "This attribute indicates a shift along the x-axis on the position of the element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			},
			"rotate": {
				"name": "rotate",
				"status": "living",
				"summary": "This attribute defines the supplemental rotation that will be applied to the element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			},
			"glyphRef": {
				"name": "glyphRef",
				"status": "living",
				"summary": "The glyph identifier, the format of which is dependent on the format defined by the `format` attribute of the given font.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			},
			"format": {
				"name": "format",
				"status": "living",
				"summary": "The format of the given font.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			},
			"xlink:href": {
				"name": "xlink:href",
				"status": "living",
				"summary": "An <iri> reference either to a glyph element in an SVG document or to an altGlyphDef element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:altGlyph",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/altglyphdef": {
		"name": "altGlyphDef",
		"status": "deprecated",
		"summary": "The `<altGlyphDef>` SVG element defines a substitution representation for glyphs.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphDef",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/altglyphitem": {
		"name": "altGlyphItem",
		"status": "deprecated",
		"summary": "The `<altGlyphItem>` element provides a set of candidates for glyph substitution by the altGlyph element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphItem",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/animate": {
		"name": "animate",
		"status": "living",
		"summary": "The SVG `<animate>` element provides a way to animate an attribute of an element over time.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Animation"
		],
		"interface": "SVGAnimateElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/animatemotion": {
		"name": "animateMotion",
		"status": "living",
		"summary": "The SVG `<animateMotion>` element provides a way to define how an element moves along a motion path.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Animation"
		],
		"interface": "SVGAnimateMotionElement",
		"attributes": {
			"keyPoints": {
				"name": "keyPoints",
				"status": "living",
				"summary": "This attribute indicate, in the range [0,1], how far is the object along the path for each keyTimes associated values.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:animateMotion",
				"tags": []
			},
			"path": {
				"name": "path",
				"status": "living",
				"summary": "This attribute defines the path of the motion, using the same syntax as the  attribute.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:animateMotion",
				"tags": []
			},
			"rotate": {
				"name": "rotate",
				"status": "living",
				"summary": "This attribute defines a rotation applied to the element animated along a path, usually to make it pointing in the direction of the animation.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:animateMotion",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/animatetransform": {
		"name": "animateTransform",
		"status": "living",
		"summary": "The `animateTransform` element animates a transformation attribute on its target element, thereby allowing animations to control translation, scaling, rotation, and/or skewing.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateTransform",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Animation"
		],
		"interface": "SVGAnimateTransformElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/circle": {
		"name": "circle",
		"status": "living",
		"summary": "The `<circle>` SVG element is an SVG basic shape, used to draw circles based on a center point and a radius.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Graphics",
			"SVG"
		],
		"interface": "SVGCircleElement",
		"attributes": {
			"cx": {
				"name": "cx",
				"status": "living",
				"summary": "The x-axis coordinate of the center of the circle.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:circle",
				"tags": []
			},
			"cy": {
				"name": "cy",
				"status": "living",
				"summary": "The y-axis coordinate of the center of the circle.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:circle",
				"tags": []
			},
			"r": {
				"name": "r",
				"status": "living",
				"summary": "The radius of the circle. A value lower or equal to zero disables rendering of the circle.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:circle",
				"tags": []
			},
			"pathLength": {
				"name": "pathLength",
				"status": "living",
				"summary": "The total length for the circle's circumference, in user units.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:circle",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/clippath": {
		"name": "clipPath",
		"status": "living",
		"summary": "The `<clipPath>` SVG element defines a clipping path, to be used by the clip-path property.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/clipPath",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG"
		],
		"interface": "SVGClipPathElement",
		"attributes": {
			"clipPathUnits": {
				"name": "clipPathUnits",
				"status": "living",
				"summary": "Defines the coordinate system for the contents of the `<clipPath>` element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:clipPath",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/cursor": {
		"name": "cursor",
		"status": "deprecated",
		"summary": "Note: The CSS cursor property should be used instead of this element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/cursor",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG"
		],
		"interface": "SVGCursorElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/defs": {
		"name": "defs",
		"status": "living",
		"summary": "The `<defs>` element is used to store graphical objects that will be used at a later time. Objects created inside a `<defs>` element are not rendered directly. To display them you have to reference them (with a use element for example).",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGDefsElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/desc": {
		"name": "desc",
		"status": "living",
		"summary": "The `<desc>` element provides an accessible, long-text description of any SVG container element or graphics element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/desc",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Descriptive"
		],
		"interface": "SVGDescElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/discard": {
		"name": "discard",
		"status": "living",
		"summary": "The `<discard>` SVG element allows authors to specify the time at which particular elements are to be discarded, thereby reducing the resources required by an SVG user agent. This is particularly useful to help SVG viewers conserve memory while displaying long-running documents.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/discard",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Animation"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/ellipse": {
		"name": "ellipse",
		"status": "living",
		"summary": "The `<ellipse>` element is an SVG basic shape, used to create ellipses based on a center coordinate, and both their x and y radius.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGEllipseElement",
		"attributes": {
			"cx": {
				"name": "cx",
				"status": "living",
				"summary": "The x position of the ellipse.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:ellipse",
				"tags": []
			},
			"cy": {
				"name": "cy",
				"status": "living",
				"summary": "The y position of the ellipse.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:ellipse",
				"tags": []
			},
			"rx": {
				"name": "rx",
				"status": "living",
				"summary": "The radius of the ellipse on the x axis.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:ellipse",
				"tags": []
			},
			"ry": {
				"name": "ry",
				"status": "living",
				"summary": "The radius of the ellipse on the y axis.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:ellipse",
				"tags": []
			},
			"pathLength": {
				"name": "pathLength",
				"status": "living",
				"summary": "This attribute lets specify the total length for the path, in user units.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:ellipse",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/feblend": {
		"name": "feBlend",
		"status": "living",
		"summary": "The `<feBlend>` SVG filter primitive composes two objects together ruled by a certain blending mode. This is similar to what is known from image editing software when blending two layers. The mode is defined by the mode attribute.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feBlend",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEBlendElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fecolormatrix": {
		"name": "feColorMatrix",
		"status": "living",
		"summary": "The `<feColorMatrix>` SVG filter element changes colors based on a transformation matrix. Every pixel's color value `[R,G,B,A]` is matrix multiplied by a 5 by 5 color matrix to create new color `[R',G',B',A']`.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feColorMatrix",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEColorMatrixElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fecomponenttransfer": {
		"name": "feComponentTransfer",
		"status": "living",
		"summary": "The `<feComponentTransfer>` SVG filter primitive performs color-component-wise remapping of data for each pixel. It allows operations like brightness adjustment, contrast adjustment, color balance or thresholding.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComponentTransfer",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEComponentTransferElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fecomposite": {
		"name": "feComposite",
		"status": "living",
		"summary": "The `<feComposite>` SVG filter primitive performs the combination of two input images pixel-wise in image space using one of the Porter-Duff compositing operations: `over`, `in`, `atop`, `out`, `xor`, `lighter`, or `arithmetic`.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComposite",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFECompositeElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/feconvolvematrix": {
		"name": "feConvolveMatrix",
		"status": "living",
		"summary": "The `<feConvolveMatrix>` SVG filter primitive applies a matrix convolution filter effect. A convolution combines pixels in the input image with neighboring pixels to produce a resulting image. A wide variety of imaging operations can be achieved through convolutions, including blurring, edge detection, sharpening, embossing and beveling.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feConvolveMatrix",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Filters",
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEConvolveMatrixElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fediffuselighting": {
		"name": "feDiffuseLighting",
		"status": "living",
		"summary": "The `<feDiffuseLighting>` SVG filter primitive lights an image using the alpha channel as a bump map. The resulting image, which is an RGBA opaque image, depends on the light color, light position and surface geometry of the input bump map.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDiffuseLighting",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEDiffuseLightingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fedisplacementmap": {
		"name": "feDisplacementMap",
		"status": "living",
		"summary": "The `<feDisplacementMap>` SVG filter primitive uses the pixel values from the image from in2 to spatially displace the image from in.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDisplacementMap",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEDisplacementMapElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fedistantlight": {
		"name": "feDistantLight",
		"status": "living",
		"summary": "The `<feDistantLight>` filter primitive defines a distant light source that can be used within a lighting filter primitive: feDiffuseLighting or feSpecularLighting.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDistantLight",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Filters",
			"SVG",
			"SVG Light Source"
		],
		"interface": "SVGFEDistantLightElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fedropshadow": {
		"name": "feDropShadow",
		"status": "living",
		"summary": "The SVG `<feDropShadow>` filter primitive creates a drop shadow of the input image. It can only be used inside a  element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDropShadow",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Filters",
			"SVG"
		],
		"interface": "SVGFEDropShadowElement",
		"attributes": {
			"dx": {
				"name": "dx",
				"status": "living",
				"summary": "This attribute defines the x offset of the drop shadow.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:feDropShadow",
				"tags": []
			},
			"dy": {
				"name": "dy",
				"status": "living",
				"summary": "This attribute defines the y offset of the drop shadow.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:feDropShadow",
				"tags": []
			},
			"stdDeviation": {
				"name": "stdDeviation",
				"status": "living",
				"summary": "This attribute defines the standard deviation for the blur operation in the drop shadow.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:feDropShadow",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/feflood": {
		"name": "feFlood",
		"status": "living",
		"summary": "The `<feFlood>` SVG filter primitive fills the filter subregion with the color and opacity defined by flood-color and flood-opacity.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFlood",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEFloodElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fefunca": {
		"name": "feFuncA",
		"status": "living",
		"summary": "The `<feFuncA>` SVG filter primitive defines the transfer function for the alpha component of the input graphic of its parent feComponentTransfer element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncA",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEFuncAElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fefuncb": {
		"name": "feFuncB",
		"status": "living",
		"summary": "The `<feFuncB>` SVG filter primitive defines the transfer function for the blue component of the input graphic of its parent feComponentTransfer element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncB",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEFuncBElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fefuncg": {
		"name": "feFuncG",
		"status": "living",
		"summary": "The `<feFuncG>` SVG filter primitive defines the transfer function for the green component of the input graphic of its parent feComponentTransfer element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncG",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEFuncGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fefuncr": {
		"name": "feFuncR",
		"status": "living",
		"summary": "The `<feFuncR>` SVG filter primitive defines the transfer function for the red component of the input graphic of its parent feComponentTransfer element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncR",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEFuncRElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fegaussianblur": {
		"name": "feGaussianBlur",
		"status": "living",
		"summary": "The `<feGaussianBlur>` SVG filter primitive blurs the input image by the amount specified in stdDeviation, which defines the bell-curve.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feGaussianBlur",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEGaussianBlurElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/feimage": {
		"name": "feImage",
		"status": "living",
		"summary": "The `<feImage>` SVG filter primitive fetches image data from an external source and provides the pixel data as output (meaning if the external source is an SVG image, it is rasterized.)",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feImage",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEImageElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/femerge": {
		"name": "feMerge",
		"status": "living",
		"summary": "The `<feMerge>` SVG element allows filter effects to be applied concurrently instead of sequentially. This is achieved by other filters storing their output via the result attribute and then accessing it in a feMergeNode child.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMerge",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEMergeElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/femergenode": {
		"name": "feMergeNode",
		"status": "living",
		"summary": "The `feMergeNode` takes the result of another filter to be processed by its parent feMerge.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMergeNode",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEMergeNodeElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/femorphology": {
		"name": "feMorphology",
		"status": "living",
		"summary": "The `<feMorphology>` SVG filter primitive is used to erode or dilate the input image. Its usefulness lies especially in fattening or thinning effects.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMorphology",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEMorphologyElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/feoffset": {
		"name": "feOffset",
		"status": "living",
		"summary": "The `<feOffset>` SVG filter primitive allows to offset the input image. The input image as a whole is offset by the values specified in the dx and dy attributes.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feOffset",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFEOffsetElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fepointlight": {
		"name": "fePointLight",
		"status": "living",
		"summary": "The `<fePointLight>` filter primitive defines a light source which allows to create a point light effect. It that can be used within a lighting filter primitive: feDiffuseLighting or feSpecularLighting.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/fePointLight",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter",
			"SVG Light Source"
		],
		"interface": "SVGFEPointLightElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fespecularlighting": {
		"name": "feSpecularLighting",
		"status": "living",
		"summary": "The `<feSpecularLighting>` SVG filter primitive lights a source graphic using the alpha channel as a bump map. The resulting image is an RGBA image based on the light color. The lighting calculation follows the standard specular component of the Phong lighting model. The resulting image depends on the light color, light position and surface geometry of the input bump map. The result of the lighting calculation is added. The filter primitive assumes that the viewer is at infinity in the z direction.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpecularLighting",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFESpecularLightingElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fespotlight": {
		"name": "feSpotLight",
		"status": "living",
		"summary": "The `<feSpotLight>` SVG filter primitive defines a light source that can be used to create a spotlight effect. It is used within a lighting filter primitive: feDiffuseLighting or feSpecularLighting.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpotLight",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFESpotLightElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/fetile": {
		"name": "feTile",
		"status": "living",
		"summary": "The `<feTile>` SVG filter primitive allows to fill a target rectangle with a repeated, tiled pattern of an input image. The effect is similar to the one of a pattern.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTile",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFETileElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/feturbulence": {
		"name": "feTurbulence",
		"status": "living",
		"summary": "The `<feTurbulence>` SVG filter primitive creates an image using the Perlin turbulence function. It allows the synthesis of artificial textures like clouds or marble. The resulting image will fill the entire filter primitive subregion.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTurbulence",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Filter"
		],
		"interface": "SVGFETurbulenceElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/filter": {
		"name": "filter",
		"status": "living",
		"summary": "The `<filter>` SVG element defines a custom filter effect by grouping atomic filter primitives. It is never rendered itself, but must be used by the filter attribute on SVG elements, or the filter CSS property for SVG/HTML elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG"
		],
		"interface": "SVGFilterElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/font": {
		"name": "font",
		"status": "deprecated",
		"summary": "The `<font>` SVG element defines a font to be used for text layout.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGFontElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/font-face": {
		"name": "font-face",
		"status": "deprecated",
		"summary": "The `<font-face>` SVG element corresponds to the CSS @font-face rule. It defines a font's outer properties.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/font-face-format": {
		"name": "font-face-format",
		"status": "deprecated",
		"summary": "The `<font-face-format>` SVG element describes the type of font referenced by its parent font-face-uri.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-format",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/font-face-name": {
		"name": "font-face-name",
		"status": "deprecated",
		"summary": "The `<font-face-name>` element points to a locally installed copy of this font, identified by its name.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-name",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/font-face-src": {
		"name": "font-face-src",
		"status": "deprecated",
		"summary": "The `<font-face-src>` SVG element corresponds to the @font-face/src descriptor in CSS @font-face rules. It serves as container for font-face-name, pointing to locally installed copies of this font, and font-face-uri, utilizing remotely defined fonts.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-src",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/font-face-uri": {
		"name": "font-face-uri",
		"status": "deprecated",
		"summary": "The `<font-face-uri>` SVG element points to a remote definition of the current font.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-uri",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/foreignobject": {
		"name": "foreignObject",
		"status": "living",
		"summary": "The `<foreignObject>` SVG element includes elements from a different XML namespace. In the context of a browser, it is most likely (X)HTML.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG"
		],
		"interface": "SVGForeignObjectElement",
		"attributes": {
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The height of the foreignObject.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:foreignObject",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The width of the foreignObject.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:foreignObject",
				"tags": []
			},
			"x": {
				"name": "x",
				"status": "living",
				"summary": "The x coordinate of the foreignObject.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:foreignObject",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "The y coordinate of the foreignObject.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:foreignObject",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/g": {
		"name": "g",
		"status": "living",
		"summary": "The `<g>` SVG element is a container used to group other SVG elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/glyph": {
		"name": "glyph",
		"status": "living",
		"summary": "A `<glyph>` defines a single glyph in an SVG font.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyph",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGGlyphElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/glyphref": {
		"name": "glyphRef",
		"status": "deprecated",
		"summary": "The `glyphRef` element provides a single possible glyph to the referencing altGlyph substitution.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyphRef",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/hkern": {
		"name": "hkern",
		"status": "deprecated",
		"summary": "The `<hkern>` SVG element allows to fine-tweak the horizontal distance between two glyphs. This process is known as kerning.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hkern",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGHKernElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/image": {
		"name": "image",
		"status": "living",
		"summary": "The `<image>` SVG element includes images inside SVG documents. It can display raster image files or other SVG files.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGImageElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/line": {
		"name": "line",
		"status": "living",
		"summary": "The `<line>` element is an SVG basic shape used to create a line connecting two points.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/line",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGLineElement",
		"attributes": {
			"x1": {
				"name": "x1",
				"status": "living",
				"summary": "Defines the x-axis coordinate of the line starting point.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:line",
				"tags": []
			},
			"x2": {
				"name": "x2",
				"status": "living",
				"summary": "Defines the x-axis coordinate of the line ending point.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:line",
				"tags": []
			},
			"y1": {
				"name": "y1",
				"status": "living",
				"summary": "Defines the y-axis coordinate of the line starting point.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:line",
				"tags": []
			},
			"y2": {
				"name": "y2",
				"status": "living",
				"summary": "Defines the y-axis coordinate of the line ending point.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:line",
				"tags": []
			},
			"pathLength": {
				"name": "pathLength",
				"status": "living",
				"summary": "Defines the total path length in user units.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:line",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/lineargradient": {
		"name": "linearGradient",
		"status": "living",
		"summary": "The `<linearGradient>` element lets authors define linear gradients to apply to other SVG elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Gradient"
		],
		"interface": "SVGLinearGradientElement",
		"attributes": {
			"gradientUnits": {
				"name": "gradientUnits",
				"status": "living",
				"summary": "This attribute defines the coordinate system for attributes `x1`, `x2`, `y1`, `y2`",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"gradientTransform": {
				"name": "gradientTransform",
				"status": "living",
				"summary": "This attribute provides additional transformation to the gradient coordinate system.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "This attribute defines a reference to another `<linearGradient>` element that will be used as a template.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"spreadMethod": {
				"name": "spreadMethod",
				"status": "living",
				"summary": "This attribute indicates how the gradient behaves if it starts or ends inside the bounds of the shape containing the gradient.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"x1": {
				"name": "x1",
				"status": "living",
				"summary": "This attribute defines the x coordinate of the starting point of the vector gradient along which the linear gradient is drawn.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"x2": {
				"name": "x2",
				"status": "living",
				"summary": "This attribute defines the x coordinate of the ending point of the vector gradient along which the linear gradient is drawn.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"xlink:href": {
				"name": "xlink:href",
				"status": "deprecated",
				"summary": "An <IRI> reference to another `<linearGradient>` element that will be used as a template.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"y1": {
				"name": "y1",
				"status": "living",
				"summary": "This attribute defines the y coordinate of the starting point of the vector gradient along which the linear gradient is drawn.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			},
			"y2": {
				"name": "y2",
				"status": "living",
				"summary": "This attribute defines the y coordinate of the ending point of the vector gradient along which the linear gradient is drawn.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:linearGradient",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/marker": {
		"name": "marker",
		"status": "living",
		"summary": "The `<marker>` element defines the graphic that is to be used for drawing arrowheads or polymarkers on a given path, line, polyline or polygon element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGMarkerElement",
		"attributes": {
			"markerHeight": {
				"name": "markerHeight",
				"status": "living",
				"summary": "This attribute defines the height of the marker viewport.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			},
			"markerUnits": {
				"name": "markerUnits",
				"status": "living",
				"summary": "This attribute defines the coordinate system for the attributes `markerWidth`, `markerHeight` and the contents of the `<marker>`.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			},
			"markerWidth": {
				"name": "markerWidth",
				"status": "living",
				"summary": "This attribute defines the width of the marker viewport.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			},
			"orient": {
				"name": "orient",
				"status": "living",
				"summary": "This attribute defines the orientation of the marker relative to the shape it is attached to.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			},
			"preserveAspectRatio": {
				"name": "preserveAspectRatio",
				"status": "living",
				"summary": "This attribute defines how the svg fragment must be deformed if it is embedded in a container with a different aspect ratio.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			},
			"refX": {
				"name": "refX",
				"status": "living",
				"summary": "This attribute defines the x coordinate for the reference point of the marker.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			},
			"refY": {
				"name": "refY",
				"status": "living",
				"summary": "This attribute defines the y coordinate for the reference point of the marker.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			},
			"viewBox": {
				"name": "viewBox",
				"status": "living",
				"summary": "This attribute defines the bound of the SVG viewport for the current SVG fragment.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:marker",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/mask": {
		"name": "mask",
		"status": "living",
		"summary": "The `<mask>` element defines an alpha mask for compositing the current object into the background. A mask is used/referenced using the mask property.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGMaskElement",
		"attributes": {
			"height": {
				"name": "height",
				"status": "living",
				"summary": "This attribute defines the height of the masking area.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:mask",
				"tags": []
			},
			"maskContentUnits": {
				"name": "maskContentUnits",
				"status": "living",
				"summary": "This attribute defines the coordinate system for the contents of the `<mask>`.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:mask",
				"tags": []
			},
			"maskUnits": {
				"name": "maskUnits",
				"status": "living",
				"summary": "This attribute defines the coordinate system for attributes x, y, width and height on the `<mask>`.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:mask",
				"tags": []
			},
			"x": {
				"name": "x",
				"status": "living",
				"summary": "This attribute defines the x-axis coordinate of the top-left corner of the masking area.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:mask",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "This attribute defines the y-axis coordinate of the top-left corner of the masking area.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:mask",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "This attribute defines the width of the masking area.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:mask",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/metadata": {
		"name": "metadata",
		"status": "living",
		"summary": "The `<metadata>` SVG element adds metadata to SVG content. Metadata is structured information about data. The contents of `<metadata>` should be elements from other XML namespace such as RDF, FOAF, etc.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/metadata",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Descriptive"
		],
		"interface": "SVGMetadataElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/missing-glyph": {
		"name": "missing-glyph",
		"status": "deprecated",
		"summary": "The `<missing-glyph>` SVG element's content is rendered, if for a given character the font doesn't define an appropriate glyph.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/missing-glyph",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Container"
		],
		"interface": "SVGElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/mpath": {
		"name": "mpath",
		"status": "living",
		"summary": "The `<mpath>` sub-element for the animateMotion element provides the ability to reference an external path element as the definition of a motion path.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mpath",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Animation"
		],
		"interface": "SVGMPathElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/path": {
		"name": "path",
		"status": "living",
		"summary": "The `<path>` SVG element is the generic element to define a shape. All the basic shapes can be created with a path element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGPathElement",
		"attributes": {
			"d": {
				"name": "d",
				"status": "living",
				"summary": "This attribute defines the shape of the path.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:path",
				"tags": []
			},
			"pathLength": {
				"name": "pathLength",
				"status": "living",
				"summary": "This attribute lets authors specify the total length for the path, in user units.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:path",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/pattern": {
		"name": "pattern",
		"status": "living",
		"summary": "The `<pattern>` element defines a graphics object which can be redrawn at repeated x- and y-coordinate intervals (\"tiled\") to cover an area.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/pattern",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGPatternElement",
		"attributes": {
			"height": {
				"name": "height",
				"status": "living",
				"summary": "This attribute determines the height of the pattern tile.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "This attribute reference a template pattern that provides default values for the `<pattern>` attributes.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"patternContentUnits": {
				"name": "patternContentUnits",
				"status": "living",
				"summary": "This attribute defines the coordinate system for the contents of the pattern.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"patternTransform": {
				"name": "patternTransform",
				"status": "living",
				"summary": "This attribute contains the definition of an optional additional transformation from the pattern coordinate system onto the target coordinate system.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"patternUnits": {
				"name": "patternUnits",
				"status": "living",
				"summary": "This attribute defines the coordinate system for attributes `x`, `y`, `width` , and `height`.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"preserveAspectRatio": {
				"name": "preserveAspectRatio",
				"status": "living",
				"summary": "This attribute defines how the SVG fragment must be deformed if it is embedded in a container with a different aspect ratio.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"viewBox": {
				"name": "viewBox",
				"status": "living",
				"summary": "This attribute defines the bound of the SVG viewport for the pattern fragment.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "This attribute determines the width of the pattern tile.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"x": {
				"name": "x",
				"status": "living",
				"summary": "This attribute determines the x coordinate shift of the pattern tile.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"xlink:href": {
				"name": "xlink:href",
				"status": "deprecated",
				"summary": "This attribute reference a template pattern that provides default values for the `<pattern>` attributes.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "This attribute determines the y coordinate shift of the pattern tile.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:pattern",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/polygon": {
		"name": "polygon",
		"status": "living",
		"summary": "The `<polygon>` element defines a closed shape consisting of a set of connected straight line segments. The last point is connected to the first point.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polygon",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGPolygonElement",
		"attributes": {
			"points": {
				"name": "points",
				"status": "living",
				"summary": "This attribute defines the list of points (pairs of `x,y` absolute coordinates) required to draw the polygon.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:polygon",
				"tags": []
			},
			"pathLength": {
				"name": "pathLength",
				"status": "living",
				"summary": "This attribute lets specify the total length for the path, in user units.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:polygon",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/polyline": {
		"name": "polyline",
		"status": "living",
		"summary": "The `<polyline>` SVG element is an SVG basic shape that creates straight lines connecting several points. Typically a `polyline` is used to create open shapes as the last point doesn't have to be connected to the first point. For closed shapes see the polygon element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGPolylineElement",
		"attributes": {
			"points": {
				"name": "points",
				"status": "living",
				"summary": "This attribute defines the list of points (pairs of x,y absolute coordinates) required to draw the polyline",
				"url": "",
				"type": "attribute",
				"scope": "SVG:polyline",
				"tags": []
			},
			"pathLength": {
				"name": "pathLength",
				"status": "living",
				"summary": "This attribute lets specify the total length for the path, in user units.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:polyline",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/radialgradient": {
		"name": "radialGradient",
		"status": "living",
		"summary": "The `<radialGradient>` element lets authors define radial gradients that can be applied to fill or stroke of graphical elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Gradient"
		],
		"interface": "SVGRadialGradientElement",
		"attributes": {
			"cx": {
				"name": "cx",
				"status": "living",
				"summary": "This attribute defines the x coordinate of the end circle of the radial gradient.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"cy": {
				"name": "cy",
				"status": "living",
				"summary": "This attribute defines the y coordinate of the end circle of the radial gradient.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"fr": {
				"name": "fr",
				"status": "living",
				"summary": "This attribute defines the radius of the start circle of the radial gradient. The gradient will be drawn such that the 0%  is mapped to the perimeter of the start circle.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"fx": {
				"name": "fx",
				"status": "living",
				"summary": "This attribute defines the x coordinate of the start circle of the radial gradient.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"fy": {
				"name": "fy",
				"status": "living",
				"summary": "This attribute defines the y coordinate of the start circle of the radial gradient.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"gradientUnits": {
				"name": "gradientUnits",
				"status": "living",
				"summary": "This attribute defines the coordinate system for attributes `cx`, `cy`, `r`, `fx`, `fy`, `fr`",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"gradientTransform": {
				"name": "gradientTransform",
				"status": "living",
				"summary": "This attribute provides additional transformation to the gradient coordinate system.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "This attribute defines a reference to another `<radialGradient>` element that will be used as a template.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"r": {
				"name": "r",
				"status": "living",
				"summary": "This attribute defines the radius of the end circle of the radial gradient. The gradient will be drawn such that the 100%  is mapped to the perimeter of the end circle.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"spreadMethod": {
				"name": "spreadMethod",
				"status": "living",
				"summary": "This attribute indicates how the gradient behaves if it starts or ends inside the bounds of the shape containing the gradient.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			},
			"xlink:href": {
				"name": "xlink:href",
				"status": "deprecated",
				"summary": "An <IRI> reference to another `<radialGradient>` element that will be used as a template.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:radialGradient",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/rect": {
		"name": "rect",
		"status": "living",
		"summary": "The `<rect>` element is a basic SVG shape that draws rectangles, defined by their position, width, and height. The rectangles may have their corners rounded.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/rect",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGRectElement",
		"attributes": {
			"x": {
				"name": "x",
				"status": "living",
				"summary": "The x coordinate of the rect.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:rect",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "The y coordinate of the rect.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:rect",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The width of the rect.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:rect",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The height of the rect.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:rect",
				"tags": []
			},
			"rx": {
				"name": "rx",
				"status": "living",
				"summary": "The horizontal corner radius of the rect. Defaults to `ry` if it is specified.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:rect",
				"tags": []
			},
			"ry": {
				"name": "ry",
				"status": "living",
				"summary": "The vertical corner radius of the rect. Defaults to `rx` if it is specified.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:rect",
				"tags": []
			},
			"pathLength": {
				"name": "pathLength",
				"status": "living",
				"summary": "The total length of the rectangle's perimeter, in user units.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:rect",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/script": {
		"name": "script",
		"status": "living",
		"summary": "The SVG `script` element allows to add scripts to an SVG document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG"
		],
		"interface": "SVGScriptElement",
		"attributes": {
			"href": {
				"name": "href",
				"status": "living",
				"summary": "The URL to the script to load.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:script",
				"tags": []
			},
			"type": {
				"name": "type",
				"status": "living",
				"summary": "This attribute defines type of the script language to use.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:script",
				"tags": []
			},
			"xlink:href": {
				"name": "xlink:href",
				"status": "deprecated",
				"summary": "The URL to the script to load.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:script",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/set": {
		"name": "set",
		"status": "living",
		"summary": "The SVG `<set>` element provides a simple means of just setting the value of an attribute for a specified duration.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/set",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Animation"
		],
		"interface": "SVGSetElement",
		"attributes": {
			"to": {
				"name": "to",
				"status": "living",
				"summary": "This attribute defines the value to be applied to the target attribute for the duration of the animation. The value must match the requirements of the target attribute.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:set",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/stop": {
		"name": "stop",
		"status": "living",
		"summary": "The SVG `<stop>` element defines a color and its position to use on a gradient. This element is always a child of a linearGradient or radialGradient element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Gradient"
		],
		"interface": "SVGStopElement",
		"attributes": {
			"offset": {
				"name": "offset",
				"status": "living",
				"summary": "This attribute defines where the gradient stop is placed along the gradient vector.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:stop",
				"tags": []
			},
			"stop-color": {
				"name": "stop-color",
				"status": "living",
				"summary": "This attribute defines the color of the gradient stop. It can be used as a CSS property.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:stop",
				"tags": []
			},
			"stop-opacity": {
				"name": "stop-opacity",
				"status": "living",
				"summary": "This attribute defines the opacity of the gradient stop. It can be used as a CSS property.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:stop",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/style": {
		"name": "style",
		"status": "living",
		"summary": "The SVG `<style>` element allows style sheets to be embedded directly within SVG content.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/style",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG"
		],
		"interface": "SVGStyleElement",
		"attributes": {
			"type": {
				"name": "type",
				"status": "living",
				"summary": "This attribute defines type of the style sheet language to use as a media type string.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:style",
				"tags": []
			},
			"media": {
				"name": "media",
				"status": "living",
				"summary": "This attribute defines to which  the style applies.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:style",
				"tags": []
			},
			"title": {
				"name": "title",
				"status": "living",
				"summary": "This attribute the title of the style sheet which can be used to switch between alternate style sheets.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:style",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/svg": {
		"name": "svg",
		"status": "living",
		"summary": "The `svg` element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed an SVG fragment inside an SVG or HTML document.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG Container"
		],
		"interface": "SVGSVGElement",
		"attributes": {
			"baseProfile": {
				"name": "baseProfile",
				"status": "deprecated",
				"summary": "The minimum SVG language profile that the document requires.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"contentScriptType": {
				"name": "contentScriptType",
				"status": "deprecated",
				"summary": "The default scripting language used by the SVG fragment.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"contentStyleType": {
				"name": "contentStyleType",
				"status": "deprecated",
				"summary": "The default style sheet language used by the SVG fragment.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The displayed height of the rectangular viewport. (Not the height of its coordinate system.)",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"preserveAspectRatio": {
				"name": "preserveAspectRatio",
				"status": "living",
				"summary": "How the `svg` fragment must be deformed if it is displayed with a different aspect ratio.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"version": {
				"name": "version",
				"status": "deprecated",
				"summary": "Which version of SVG is used for the inner content of the element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"viewBox": {
				"name": "viewBox",
				"status": "living",
				"summary": "The SVG viewport coordinates for the current SVG fragment.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The displayed width of the rectangular viewport. (Not the width of its coordinate system.)",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"x": {
				"name": "x",
				"status": "living",
				"summary": "The displayed x coordinate of the svg container. No effect on outermost `svg` elements.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "The displayed y coordinate of the svg container. No effect on outermost `svg` elements.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:svg",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/switch": {
		"name": "switch",
		"status": "living",
		"summary": "The `<switch>` SVG element evaluates any requiredFeatures, requiredExtensions and systemLanguage attributes on its direct child elements in order, and then renders the first child where these attributes evaluate to true.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/switch",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGSwitchElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/symbol": {
		"name": "symbol",
		"status": "living",
		"summary": "The `<symbol>` element is used to define graphical template objects which can be instantiated by a use element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/symbol",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Container"
		],
		"interface": "SVGSymbolElement",
		"attributes": {
			"height": {
				"name": "height",
				"status": "living",
				"summary": "This attribute determines the height of the symbol.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			},
			"preserveAspectRatio": {
				"name": "preserveAspectRatio",
				"status": "living",
				"summary": "This attribute defines how the svg fragment must be deformed if it is embedded in a container with a different aspect ratio.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			},
			"refX": {
				"name": "refX",
				"status": "living",
				"summary": "This attribute determines the x coordinate of the reference point of the symbol.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			},
			"refY": {
				"name": "refY",
				"status": "living",
				"summary": "This attribute determines the y coordinate of the reference point of the symbol.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			},
			"viewBox": {
				"name": "viewBox",
				"status": "living",
				"summary": "This attribute defines the bound of the SVG viewport for the current symbol.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "This attribute determines the width of the symbol.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			},
			"x": {
				"name": "x",
				"status": "living",
				"summary": "This attribute determines the x coordinate of the symbol.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "This attribute determines the y coordinate of the symbol.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:symbol",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/text": {
		"name": "text",
		"status": "living",
		"summary": "The SVG `<text>` element draws a graphics element consisting of text. It's possible to apply a gradient, pattern, clipping path, mask, or filter to `<text>`, like any other SVG graphics element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGTextElement",
		"attributes": {
			"x": {
				"name": "x",
				"status": "living",
				"summary": "The x coordinate of the starting point of the text baseline.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:text",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "The y coordinate of the starting point of the text baseline.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:text",
				"tags": []
			},
			"dx": {
				"name": "dx",
				"status": "living",
				"summary": "Shifts the text position horizontally from a previous text element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:text",
				"tags": []
			},
			"dy": {
				"name": "dy",
				"status": "living",
				"summary": "Shifts the text position vertically from a previous text element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:text",
				"tags": []
			},
			"rotate": {
				"name": "rotate",
				"status": "living",
				"summary": "Rotates orientation of each individual glyph. Can rotate glyphs individually.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:text",
				"tags": []
			},
			"lengthAdjust": {
				"name": "lengthAdjust",
				"status": "living",
				"summary": "How the text is stretched or compressed to fit the width defined by the `textLength` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:text",
				"tags": []
			},
			"textLength": {
				"name": "textLength",
				"status": "living",
				"summary": "A width that the text should be scaled to fit.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:text",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/textpath": {
		"name": "textPath",
		"status": "living",
		"summary": "To render text along the shape of a path, enclose the text in a `<textPath>` element that has an href attribute with a reference to the path element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/textPath",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGTextPathElement",
		"attributes": {
			"href": {
				"name": "href",
				"status": "living",
				"summary": "The URL to the path or basic shape on which to render the text. If the `path` attribute is set, `href` has no effect.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			},
			"lengthAdjust": {
				"name": "lengthAdjust",
				"status": "living",
				"summary": "Where length adjustment should be applied to the text: the space between glyphs, or both the space and the glyphs themselves.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			},
			"method": {
				"name": "method",
				"status": "living",
				"summary": "Which method to render individual glyphs along the path.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			},
			"path": {
				"name": "path",
				"status": "living",
				"summary": "The path on which the text should be rendered.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			},
			"side": {
				"name": "side",
				"status": "living",
				"summary": "Which side of the path the text should be rendered.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			},
			"spacing": {
				"name": "spacing",
				"status": "living",
				"summary": "How space between glyphs should be handled.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			},
			"startOffset": {
				"name": "startOffset",
				"status": "living",
				"summary": "How far the beginning of the text should be offset from the beginning of the path.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			},
			"textLength": {
				"name": "textLength",
				"status": "living",
				"summary": "The width of the space into which the text will render.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:textPath",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/title": {
		"name": "title",
		"status": "living",
		"summary": "The `<title>` element provides an accessible, short-text description of any SVG container element or graphics element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Descriptive"
		],
		"interface": "SVGTitleElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/tref": {
		"name": "tref",
		"status": "living",
		"summary": "The textual content for a text SVG element can be either character data directly embedded within the text element or the character data content of a referenced element, where the referencing is specified with a `<tref>` element.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tref",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGTRefElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/tspan": {
		"name": "tspan",
		"status": "living",
		"summary": "The SVG `<tspan>` element defines a subtext within a  element or another `<tspan>` element. It allows for adjustment of the style and/or position of that subtext as needed.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Text Content"
		],
		"interface": "SVGTSpanElement",
		"attributes": {
			"x": {
				"name": "x",
				"status": "living",
				"summary": "The x coordinate of the starting point of the text baseline.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:tspan",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "The y coordinate of the starting point of the text baseline.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:tspan",
				"tags": []
			},
			"dx": {
				"name": "dx",
				"status": "living",
				"summary": "Shifts the text position horizontally from a previous text element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:tspan",
				"tags": []
			},
			"dy": {
				"name": "dy",
				"status": "living",
				"summary": "Shifts the text position vertically from a previous text element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:tspan",
				"tags": []
			},
			"rotate": {
				"name": "rotate",
				"status": "living",
				"summary": "Rotates orientation of each individual glyph. Can rotate glyphs individually.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:tspan",
				"tags": []
			},
			"lengthAdjust": {
				"name": "lengthAdjust",
				"status": "living",
				"summary": "How the text is stretched or compressed to fit the width defined by the `textLength` attribute.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:tspan",
				"tags": []
			},
			"textLength": {
				"name": "textLength",
				"status": "living",
				"summary": "A width that the text should be scaled to fit.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:tspan",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/use": {
		"name": "use",
		"status": "living",
		"summary": "The `<use>` element takes nodes from within the SVG document, and duplicates them somewhere else.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/use",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG",
			"SVG Graphics"
		],
		"interface": "SVGUseElement",
		"attributes": {
			"href": {
				"name": "href",
				"status": "living",
				"summary": "The URL to an element/fragment that needs to be duplicated.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:use",
				"tags": []
			},
			"xlink:href": {
				"name": "xlink:href",
				"status": "deprecated",
				"summary": "An <IRI> reference to an element/fragment that needs to be duplicated.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:use",
				"tags": []
			},
			"x": {
				"name": "x",
				"status": "living",
				"summary": "The x coordinate of the use element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:use",
				"tags": []
			},
			"y": {
				"name": "y",
				"status": "living",
				"summary": "The y coordinate of the use element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:use",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The width of the use element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:use",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The height of the use element.",
				"url": "",
				"type": "attribute",
				"scope": "SVG:use",
				"tags": []
			}
		},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/view": {
		"name": "view",
		"status": "living",
		"summary": "A view is a defined way to view the image, like a zoom level or a detail view.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"SVG"
		],
		"interface": "SVGViewElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/svg/element/vkern": {
		"name": "vkern",
		"status": "deprecated",
		"summary": "The `<vkern>` SVG element allows to fine-tweak the vertical distance between two glyphs in top-to-bottom fonts. This process is known as kerning.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Element/vkern",
		"type": "element",
		"scope": "SVG",
		"tags": [
			"Deprecated",
			"SVG",
			"SVG Font"
		],
		"interface": "SVGVKernElement",
		"attributes": {},
		"globalAttributeScopes": [
			"SVG:global:styling",
			"SVG:global:core"
		]
	},
	"/web/mathml/element/*": {
		"name": "MathML:*",
		"status": "virtual",
		"summary": "Container to hold the global attributes of all MathML elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML"
		],
		"interface": "MathMLElement",
		"attributes": {}
	},
	"/web/mathml/element/maction": {
		"name": "maction",
		"status": "living",
		"summary": "The MathML `<maction>` element provides a possibility to bind actions to (sub-) expressions. The action itself is specified by the `actiontype` attribute, which accepts several values. To specify which child elements are addressed by the action, you can make use of the `selection` attribute.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/maction",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Enlivening Expressions"
		],
		"interface": "MathMLElement",
		"attributes": {
			"actiontype": {
				"name": "actiontype",
				"status": "living",
				"summary": "The action which specifies what happens for this element. Possible values are.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color and also the fraction line color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			},
			"selection": {
				"name": "selection",
				"status": "living",
				"summary": "The child element which is addressed by the action. The default value is `1`, which is the first child element.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:maction",
				"tags": []
			}
		}
	},
	"/web/mathml/element/math": {
		"name": "math",
		"status": "living",
		"summary": "The top-level element in MathML is `<math>`. Every valid MathML instance must be wrapped in `<math>` tags. In addition you must not nest a second `<math>` element in another, but you can have an arbitrary number of other child elements in it.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "Overall directionality of formulas. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"display": {
				"name": "display",
				"status": "living",
				"summary": "This enumerated attribute specifies how the enclosed MathML markup should be rendered. It can have one of the following values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			},
			"mode": {
				"name": "mode",
				"status": "deprecated",
				"summary": "Deprecated in favor of the display attribute.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:math",
				"tags": []
			}
		}
	},
	"/web/mathml/element/menclose": {
		"name": "menclose",
		"status": "living",
		"summary": "The MathML `<menclose>` element renders its content inside an enclosing notation specified by the `notation` attribute.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/menclose",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			},
			"notation": {
				"name": "notation",
				"status": "living",
				"summary": "A list of notations, separated by white space, to apply to the child elements. The symbols are each drawn as if the others are not present, and therefore may overlap. Possible values are.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:menclose",
				"tags": []
			}
		}
	},
	"/web/mathml/element/merror": {
		"name": "merror",
		"status": "living",
		"summary": "The MathML `<merror>` element is used to display contents as error messages. In Firefox this error message is rendered similar to the typical XML error message. Note that this error is not thrown when your MathML markup is wrong or not well-formed XML. You will still get an XML parsing error (in case of the XHTML notation of MathML), which has nothing to do with `<merror>`.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/merror",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:merror",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:merror",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:merror",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:merror",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:merror",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:merror",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color and also the fraction line color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:merror",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mfenced": {
		"name": "mfenced",
		"status": "deprecated",
		"summary": "The deprecated MathML `<mfenced>` element used to provide the possibility to add custom opening and closing parentheses (such as brackets) and separators (such as commas or semicolons) to an expression. It has been removed from the latest MathML standard and modern browsers no longer support it. Use the mrow and mo elements instead.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mfenced",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"Deprecated",
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"close": {
				"name": "close",
				"status": "living",
				"summary": "A string for the closing delimiter. The default value is `\")`\" and any white space is trimmed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color and also the fraction line color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"open": {
				"name": "open",
				"status": "living",
				"summary": "A string for the opening delimiter. The default value is `\"(\"` and any white space is trimmed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			},
			"separators": {
				"name": "separators",
				"status": "living",
				"summary": "A sequence of zero or more characters to be used for different separators, optionally divided by white space, which is ignored. The default value is \",\". By specifying more than one character, it is possible to set different separators for each argument in the expression. If there are too many separators, all excess is ignored. If there are too few separators in the expression, the last specified separator is repeated.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfenced",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mfrac": {
		"name": "mfrac",
		"status": "living",
		"summary": "The MathML `<mfrac>` element is used to display fractions.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mfrac",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"bevelled": {
				"name": "bevelled",
				"status": "living",
				"summary": "Specifies the way the fraction is displayed. If `true`, the fraction line is bevelled, which means that numerator and denominator are displayed side by side and separated by a slash (/). Otherwise, if set to `false` (which is the default value), numerator and denominator are on top of each other.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"denomalign": {
				"name": "denomalign",
				"status": "deprecated",
				"summary": "The alignment of the denominator under the fraction. Possible values are: `left`, `center` (default), and `right`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"linethickness": {
				"name": "linethickness",
				"status": "living",
				"summary": "The thickness of the horizontal fraction line. This attributes accepts any length values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color and also the fraction line color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			},
			"numalign": {
				"name": "numalign",
				"status": "deprecated",
				"summary": "The alignment of the numerator over the fraction. Possible values are: `left`, `center` (default), and `right`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mfrac",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mi": {
		"name": "mi",
		"status": "living",
		"summary": "The MathML `<mi>` element indicates that the content should be rendered as an identifier such as function names, variables or symbolic constants. You can also have arbitrary text in it to mark up terms.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mi",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Token Elements"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "The text direction. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"mathsize": {
				"name": "mathsize",
				"status": "living",
				"summary": "The size of the content. See length for possible values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			},
			"mathvariant": {
				"name": "mathvariant",
				"status": "living",
				"summary": "This logical class of the identifier, which varies in typography. That is, although the names suggest the typographic style for the class, semantically, items with the same class are treated \"the same\" within an expression, which might or might not involve displaying them with the named typography. The following values are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mi",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mmultiscripts": {
		"name": "mmultiscripts",
		"status": "living",
		"summary": "The MathML `<mmultiscripts>` element allows you to create tensor-like objects. In a descriptive way tensors are multidimensional matrices (mathematical imprecise but exemplified). The degree of a tensor depends on the dimensionality of a representative array. For example, a number is a 0-dimensional array, or a 0th-order tensor. A 1-dimensional array (e.g. vectors) is a 1st-order tensor and so 2nd-order tensors are needed to represent square matrices. To learn more about the mathematical background of tensors refer to the entry on Wikipedia.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mmultiscripts",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Script and Limit Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"subscriptshift": {
				"name": "subscriptshift",
				"status": "deprecated",
				"summary": "The minimum space by which to shift the subscript below the baseline of the expression, as a CSS length.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			},
			"superscriptshift": {
				"name": "superscriptshift",
				"status": "deprecated",
				"summary": "The minimum space by which to shift the superscript above the baseline of the expression, as a CSS length.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mmultiscripts",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mn": {
		"name": "mn",
		"status": "living",
		"summary": "The MathML `<mn>` element represents a numeric literal which is normally a sequence of digits with a possible separator (a dot or a comma). However,  it is also allowed to have arbitrary text in it which is actually a numeric quantity, for example \"eleven\".",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mn",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Token Elements"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "The text direction. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"mathsize": {
				"name": "mathsize",
				"status": "living",
				"summary": "The size of the content. See length for possible values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			},
			"mathvariant": {
				"name": "mathvariant",
				"status": "living",
				"summary": "This attribute specifies the logical class of the number which varies in typography. That is, although the names suggest the typographic style for the class, semantically, items with the same class are treated \"the same\" within an expression, which might or might not involve displaying them with the named typography. The following values are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mn",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mo": {
		"name": "mo",
		"status": "living",
		"summary": "The MathML `<mo>` element represents an operator in a broad sense. Besides operators in strict mathematical meaning, this element also includes \"operators\" like parentheses, separators like comma and semicolon, or \"absolute value\" bars.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mo",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Token Elements"
		],
		"interface": "MathMLElement",
		"attributes": {
			"accent": {
				"name": "accent",
				"status": "living",
				"summary": "If the operator is used as an under- or overscript this attribute specifies whether the operator should be treated as an accent.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "The text direction. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"fence": {
				"name": "fence",
				"status": "living",
				"summary": "There is no visual effect for this attribute, but it specifies whether the operator is a fence (such as parentheses).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"lspace": {
				"name": "lspace",
				"status": "living",
				"summary": "The amount of space before the operator (see length for values and units). The constant `thickmathspace` (5/18em) is the default value.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"mathsize": {
				"name": "mathsize",
				"status": "living",
				"summary": "The size of the content. See length for possible values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			},
			"mathvariant": {
				"name": "mathvariant",
				"status": "living",
				"summary": "This attribute specifies the logical class of the operator which varies in typography. That is, although the names suggest the typographic style for the class, semantically, items with the same class are treated \"the same\" within an expression, which might or might not involve displaying them with the named typography. The following values are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mo",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mover": {
		"name": "mover",
		"status": "living",
		"summary": "The MathML `<mover>` element is used to attach an accent or a limit over an expression. Use the following syntax: `<mover> base overscript </mover>`",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mover",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Script and Limit Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"accent": {
				"name": "accent",
				"status": "living",
				"summary": "If `true` the over-script is an accent, which is drawn closer to the base expression.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"align": {
				"name": "align",
				"status": "deprecated",
				"summary": "The alignment of the over-script. Possible values are: `left`, `center`, and `right`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mover",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mpadded": {
		"name": "mpadded",
		"status": "living",
		"summary": "The MathML `<mpadded>` element is used to add extra padding and to set the general adjustment of position and size of enclosed contents.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mpadded",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"depth": {
				"name": "depth",
				"status": "living",
				"summary": "Sets or increments the depth. Possible values: Any length or an increment/decrement (a length prefixed with \"+\" or \"-\") .",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "Sets or increments the height. Possible values: Any length or an increment/decrement (a length prefixed with \"+\" or \"-\") .",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"lspace": {
				"name": "lspace",
				"status": "living",
				"summary": "Sets or increments the horizontal position. Possible values: Any length or an increment/decrement (a length prefixed with \"+\" or \"-\") .",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"voffset": {
				"name": "voffset",
				"status": "living",
				"summary": "Sets or increments the vertical position. Possible values: Any length or an increment/decrement (a length prefixed with \"+\" or \"-\") .",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "Sets or increments the width. Possible values: Any length or an increment/decrement (a length prefixed with \"+\" or \"-\") .",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mpadded",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mphantom": {
		"name": "mphantom",
		"status": "living",
		"summary": "The MathML `<mphantom>` element is rendered invisibly, but dimensions (such as height, width, and baseline position) are still kept.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mphantom",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mphantom",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mphantom",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mphantom",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mphantom",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mphantom",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mroot": {
		"name": "mroot",
		"status": "living",
		"summary": "The MathML `<mroot>` element is used to display roots with an explicit index. Two arguments are accepted, which leads to the syntax: `<mroot> base index </mroot>`.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mroot",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mroot",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mroot",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mroot",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mroot",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URL.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mroot",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mroot",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color and also the color of the root symbol itself. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mroot",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mrow": {
		"name": "mrow",
		"status": "living",
		"summary": "The MathML `<mrow>` element is used to group sub-expressions, which usually contain one or more operators with their respective operands (such as mi and mn). This element renders as a horizontal row containing its arguments.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mrow",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "Overall directionality of formulas. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mrow",
				"tags": []
			}
		}
	},
	"/web/mathml/element/ms": {
		"name": "ms",
		"status": "living",
		"summary": "The MathML `<ms>` element represents a string literal meant to be interpreted by programming languages and computer algebra systems. By default, string literals are displayed as enclosed by double quotes (`&quot;`); by using the `lquote` and `rquote` attributes, you can set custom characters to display. Note that quotation marks should not be specified unless they are part of the string literal. The content of an `<ms>` element is not an ASCII string per se, but rather a sequence of characters and malignmark elements.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/ms",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Token Elements"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "The text direction. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"lquote": {
				"name": "lquote",
				"status": "living",
				"summary": "The opening quote character (depends on `dir`) to enclose the content. The default value is \"`&quot;\".`",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"mathsize": {
				"name": "mathsize",
				"status": "living",
				"summary": "The size of the content. See length for possible values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			},
			"mathvariant": {
				"name": "mathvariant",
				"status": "living",
				"summary": "This attribute specifies the logical class of the identifier, which varies in typography. That is, although the names suggest the typographic style for the class, semantically, items with the same class are treated \"the same\" within an expression, which might or might not involve displaying them with the named typography. The following values are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:ms",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mspace": {
		"name": "mspace",
		"status": "living",
		"summary": "The MathML `<mspace>` element is used to display a blank space, whose size is set by its attributes.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mspace",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Token Elements"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			},
			"depth": {
				"name": "depth",
				"status": "living",
				"summary": "The desired depth (below the baseline) of the space (see length for values and units).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "The desired height (above the baseline) of the space (see length for values and units).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "The desired width of the space (see length for values and units).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mspace",
				"tags": []
			}
		}
	},
	"/web/mathml/element/msqrt": {
		"name": "msqrt",
		"status": "living",
		"summary": "The MathML `<msqrt>` element is used to display square roots (no index is displayed). The square root accepts only one argument, which leads to the following syntax: `<msqrt> base </msqrt>`.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msqrt",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msqrt",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msqrt",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msqrt",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msqrt",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msqrt",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msqrt",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color and also the color of the root symbol itself. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msqrt",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mstyle": {
		"name": "mstyle",
		"status": "living",
		"summary": "The MathML `<mstyle>` element is used change the style of its children. It accepts all attributes of all MathML presentation elements with some exceptions and additional attributes listed below.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mstyle",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:General Layout Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "Overall directionality of formulas. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"infixlinebreakstyle": {
				"name": "infixlinebreakstyle",
				"status": "living",
				"summary": "Specifies the default `linebreakstyle` to use for infix operators. The values `before`, `after` and `duplicate` are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"scriptlevel": {
				"name": "scriptlevel",
				"status": "living",
				"summary": "Controls mostly the font-size. The higher the `scriptlevel`, the smaller the font size. This attribute accepts a non-negative integer, as well as a \"+\" or a \"-\" sign, which increments or decrements the current value. In addition, the `scriptlevel` attribute can never reduce the font size below `scriptminsize` in order to avoid unreadable small font sizes and depends on the multiplier specified in `scriptsizemultiplier`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"scriptminsize": {
				"name": "scriptminsize",
				"status": "living",
				"summary": "Specifies a minimum font size allowed due to changes in `scriptlevel`. The default value is 8pt.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"scriptsizemultiplier": {
				"name": "scriptsizemultiplier",
				"status": "living",
				"summary": "Specifies the multiplier to be used to adjust font size due to changes in `scriptlevel`. The default value is 0.71.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"height": {
				"name": "height",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"depthorwidthdonotapplyto": {
				"name": "depthorwidthdonotapplyto",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"rowalign": {
				"name": "rowalign",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"columnalign": {
				"name": "columnalign",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"orgroupaligndonotapplyto": {
				"name": "orgroupaligndonotapplyto",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"lspace": {
				"name": "lspace",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"align": {
				"name": "align",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"index": {
				"name": "index",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			},
			"actiontype": {
				"name": "actiontype",
				"status": "living",
				"summary": "",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mstyle",
				"tags": []
			}
		}
	},
	"/web/mathml/element/msub": {
		"name": "msub",
		"status": "living",
		"summary": "The MathML `<msub>` element is used to attach a subscript to an expression.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msub",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Script and Limit Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			},
			"subscriptshift": {
				"name": "subscriptshift",
				"status": "deprecated",
				"summary": "The minimum space by which to shift the subscript below the baseline of the expression, as a length value.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msub",
				"tags": []
			}
		}
	},
	"/web/mathml/element/msubsup": {
		"name": "msubsup",
		"status": "living",
		"summary": "The MathML `<msubsup>` element is used to attach both a subscript and a superscript, together, to an expression.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msubsup",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Script and Limit Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"subscriptshift": {
				"name": "subscriptshift",
				"status": "deprecated",
				"summary": "The minimum space by which to shift the subscript below the baseline of the expression, as a length value.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			},
			"superscriptshift": {
				"name": "superscriptshift",
				"status": "deprecated",
				"summary": "The minimum space by which to shift the superscript above the baseline of the expression, as a length value.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msubsup",
				"tags": []
			}
		}
	},
	"/web/mathml/element/msup": {
		"name": "msup",
		"status": "living",
		"summary": "The MathML `<msup>` element is used to attach a superscript to an expression.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/msup",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Script and Limit Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			},
			"superscriptshift": {
				"name": "superscriptshift",
				"status": "deprecated",
				"summary": "The minimum space by which to shift the superscript up from the baseline of the expression, as a length value.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:msup",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mtable": {
		"name": "mtable",
		"status": "living",
		"summary": "The MathML `<mtable>` element allows you to create tables or matrices. Inside a `<mtable>` only mtr and mtd elements may appear. These elements are similar to table , tr and td elements of HTML.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mtable",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Tabular Math"
		],
		"interface": "MathMLElement",
		"attributes": {
			"align": {
				"name": "align",
				"status": "living",
				"summary": "Specifies the vertical alignment of the table with respect to its environment.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"columnalign": {
				"name": "columnalign",
				"status": "living",
				"summary": "Specifies the horizontal alignment of the cells. Multiple values separated by space are allowed and apply to the corresponding columns (e.g. `columnalign=\"left right center\"`). Possible values are: `left`, `center` (default) and `right`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"columnlines": {
				"name": "columnlines",
				"status": "living",
				"summary": "Specifies column borders. Multiple values separated by space are allowed and apply to the corresponding columns (e.g. `columnlines=\"none none solid\"`). Possible values are: `none` (default), `solid` and `dashed`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"columnspacing": {
				"name": "columnspacing",
				"status": "living",
				"summary": "Specifies the space between table columns.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"frame": {
				"name": "frame",
				"status": "living",
				"summary": "Specifies borders of the entire table. Possible values are: `none` (default), `solid` and `dashed`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"framespacing": {
				"name": "framespacing",
				"status": "living",
				"summary": "Specifies additional space added between the table and frame.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"rowalign": {
				"name": "rowalign",
				"status": "living",
				"summary": "Specifies the vertical alignment of the cells. Multiple values separated by space are allowed and apply to the corresponding rows (e.g. `rowalign=\"top bottom axis\"`). Possible values are: `axis`, `baseline` (default), `bottom`, `center` and `top`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"rowlines": {
				"name": "rowlines",
				"status": "living",
				"summary": "Specifies row borders. Multiple values separated by space are allowed and apply to the corresponding rows (e.g. `rowlines=\"none none solid\"`). Possible values are: `none` (default), `solid` and `dashed`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			},
			"width": {
				"name": "width",
				"status": "living",
				"summary": "Specifies the width of the entire table. Accepts length values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtable",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mtd": {
		"name": "mtd",
		"status": "living",
		"summary": "The MathML `<mtd>` element represents a cell in a table or a matrix. It may only appear in a mtr element. This element is similar to the td element of HTML.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mtd",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Tabular Math"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"columnalign": {
				"name": "columnalign",
				"status": "living",
				"summary": "Specifies the horizontal alignment of this cell and overrides values specified by mtable or mtr.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"columnspan": {
				"name": "columnspan",
				"status": "living",
				"summary": "A non-negative integer value that indicates on how many columns does the cell extend.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"rowalign": {
				"name": "rowalign",
				"status": "living",
				"summary": "Specifies the vertical alignment of this cell and overrides values specified by mtable or mtr.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			},
			"rowspan": {
				"name": "rowspan",
				"status": "living",
				"summary": "A non-negative integer value that indicates on how many rows does the cell extend.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtd",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mtext": {
		"name": "mtext",
		"status": "living",
		"summary": "The MathML <mtext> element is used to render arbitrary text with no notational meaning, such as comments or annotations.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mtext",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Token Elements"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"dir": {
				"name": "dir",
				"status": "living",
				"summary": "The text direction. Possible values are either `ltr` (left to right) or `rtl` (right to left).",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"mathsize": {
				"name": "mathsize",
				"status": "living",
				"summary": "The size of the content. See length for possible values.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			},
			"mathvariant": {
				"name": "mathvariant",
				"status": "living",
				"summary": "This attribute specifies the logical class of the identifier, which varies in typography. That is, although the names suggest the typographic style for the class, semantically, items with the same class are treated \"the same\" within an expression, which might or might not involve displaying them with the named typography. The following values are allowed.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtext",
				"tags": []
			}
		}
	},
	"/web/mathml/element/mtr": {
		"name": "mtr",
		"status": "living",
		"summary": "The MathML `<mtr>` element represents a row in a table or a matrix. It may only appear in a mtable element. This element is similar to the tr element of HTML.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/mtr",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Tabular Math"
		],
		"interface": "MathMLElement",
		"attributes": {
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"columnalign": {
				"name": "columnalign",
				"status": "living",
				"summary": "Overrides the horizontal alignment of cells specified by mtable for this row.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			},
			"rowalign": {
				"name": "rowalign",
				"status": "living",
				"summary": "Overrides the vertical alignment of cells specified by mtable for this row.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:mtr",
				"tags": []
			}
		}
	},
	"/web/mathml/element/munder": {
		"name": "munder",
		"status": "living",
		"summary": "The MathML `<munder>` element is used to attach an accent or a limit under an expression. It uses the following syntax: `<munder> base underscript </munder>`",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/munder",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Script and Limit Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"accentunder": {
				"name": "accentunder",
				"status": "living",
				"summary": "If `true`, the element is an accent, which is drawn closer to the base expression.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"align": {
				"name": "align",
				"status": "deprecated",
				"summary": "The alignment of the underscript. Possible values are: `left`, `center`, and `right`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munder",
				"tags": []
			}
		}
	},
	"/web/mathml/element/munderover": {
		"name": "munderover",
		"status": "living",
		"summary": "The MathML `<munderover>` element is used to attach accents or limits both under and over an expression.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/munderover",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element",
			"MathML:Script and Limit Schemata"
		],
		"interface": "MathMLElement",
		"attributes": {
			"accent": {
				"name": "accent",
				"status": "living",
				"summary": "If `true`, the overscript is an accent, which is drawn closer to the base expression.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"accentunder": {
				"name": "accentunder",
				"status": "living",
				"summary": "If `true`, the underscript is an accent, which is drawn closer to the base expression.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"align": {
				"name": "align",
				"status": "deprecated",
				"summary": "The alignment of both underscript and overscript. Possible values are: `left`, `center`, and `right`.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"class": {
				"name": "class",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"id": {
				"name": "id",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"style": {
				"name": "style",
				"status": "living",
				"summary": "Provided for use with stylesheets.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"href": {
				"name": "href",
				"status": "living",
				"summary": "Used to set a hyperlink to a specified URI.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"mathbackground": {
				"name": "mathbackground",
				"status": "living",
				"summary": "The background color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			},
			"mathcolor": {
				"name": "mathcolor",
				"status": "living",
				"summary": "The text color. You can use `#rgb`, `#rrggbb` and HTML color names.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:munderover",
				"tags": []
			}
		}
	},
	"/web/mathml/element/semantics": {
		"name": "semantics",
		"status": "living",
		"summary": "In MathML there are two ways to mark up mathematics: Presentation MathML is used to control the layout of equations, whereas Content MathML is designed to encode the semantic mathematical meaning and to make expressions understandable to computer algebra systems. The MathML elements `<semantics>`, `<annotation>` and `<annotation-xml>` are used to combine presentation and content markup and to provide both, layout information and semantic meaning of mathematical expressions.",
		"url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Element/semantics",
		"type": "element",
		"scope": "MathML",
		"tags": [
			"MathML",
			"MathML Reference",
			"MathML:Element"
		],
		"interface": "MathMLElement",
		"attributes": {
			"displaystyle": {
				"name": "displaystyle",
				"status": "living",
				"summary": "A Boolean value specifying whether more vertical space is used for displayed equations or, if set to `false`, a more compact layout is used to display formulas. The main effect is that larger versions of operators are displayed, when `displaystyle` is set to `true`. See also `movablelimits` on mo.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:semantics",
				"tags": []
			},
			"encoding": {
				"name": "encoding",
				"status": "living",
				"summary": "The encoding of the semantic information in the annotation (e.g. \"MathML-Content\", \"MathML-Presentation\", \"application/openmath+xml\", \"image/png\")",
				"url": "",
				"type": "attribute",
				"scope": "MathML:semantics",
				"tags": []
			},
			"cd": {
				"name": "cd",
				"status": "living",
				"summary": "The content dictionary that contains the annotation key symbol.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:semantics",
				"tags": []
			},
			"name": {
				"name": "name",
				"status": "living",
				"summary": "The name of the annotation key symbol.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:semantics",
				"tags": []
			},
			"src": {
				"name": "src",
				"status": "living",
				"summary": "The location of an external source for semantic information.",
				"url": "",
				"type": "attribute",
				"scope": "MathML:semantics",
				"tags": []
			}
		}
	}
}

{"html":{"accesskey":{"name":"accesskey","status":"living","summary":"The `accesskey` global attribute provides a hint for generating a keyboard shortcut for the current element. The attribute value must consist of a single printable character (which includes accented and other characters that can be generated by the keyboard).","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"autocapitalize":{"name":"autocapitalize","status":"living","summary":"The `autocapitalize` global attribute is an enumerated attribute that controls whether and how text input is automatically capitalized as it is entered/edited by the user.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"autofocus":{"name":"autofocus","status":"living","summary":"The `autofocus` global attribute is a Boolean attribute indicating that an element should be focused on page load, or when the dialog that it is part of is displayed.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"class":{"name":"class","status":"living","summary":"The `class` global attribute is a space-separated list of the case-sensitive classes of the element. Classes allow CSS and Javascript to select and access specific elements via the class selectors or functions like the DOM method document.getElementsByClassName.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"contenteditable":{"name":"contenteditable","status":"living","summary":"The `contenteditable` global attribute is an enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable","type":"attribute","scope":"HTML:global:generic","tags":["Editing","HTML","Text Editing","text entry","text input"]},"contextmenu":{"name":"contextmenu","status":"deprecated","summary":"Warning: The contextmenu attribute is obsolete and will be removed from all browsers","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contextmenu","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"data-*":{"name":"data-*","status":"living","summary":"The `data-*` global attributes form a class of attributes called custom data attributes, that allow proprietary information to be exchanged between the HTML and its DOM representation by scripts.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"dir":{"name":"dir","status":"living","summary":"The `dir` global attribute is an enumerated attribute that indicates the directionality of the element's text.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir","type":"attribute","scope":"HTML:global:generic","tags":["BiDi","HTML"]},"draggable":{"name":"draggable","status":"living","summary":"The draggable global attribute is an enumerated attribute that indicates whether the element can be dragged, either with native browser behavior or the HTML Drag and Drop API.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"enterkeyhint":{"name":"enterkeyhint","status":"living","summary":"The `enterkeyhint` global attribute is an enumerated attribute defining what action label (or icon) to present for the enter key on virtual keyboards.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"exportparts":{"name":"exportparts","status":"experimental","summary":"Used to transitively export shadow parts from a nested shadow tree into a containing light tree.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:generic","tags":[]},"hidden":{"name":"hidden","status":"living","summary":"The `hidden` global attribute is a Boolean attribute indicating that the element is not yet, or is no longer, relevant. For example, it can be used to hide elements of the page that can't be used until the login process has been completed. Browsers won't render elements with the `hidden` attribute set.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"id":{"name":"id","status":"living","summary":"The `id` global attribute defines an identifier (ID) which must be unique in the whole document. Its purpose is to identify the element when linking (using a fragment identifier), scripting, or styling (with CSS).","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"inputmode":{"name":"inputmode","status":"living","summary":"The `inputmode` global attribute is an enumerated attribute that hints at the type of data that might be entered by the user while editing the element or its contents. This allows a browser to display an appropriate virtual keyboard.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode","type":"attribute","scope":"HTML:global:generic","tags":["Editing","Forms","HTML","Input","Text","contenteditable","global","text input"]},"is":{"name":"is","status":"living","summary":"The `is` global attribute allows you to specify that a standard HTML element should behave like a defined custom built-in element (see Using custom elements for more details).","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"itemid":{"name":"itemid","status":"living","summary":"The `itemid` global attribute provides microdata in the form of a unique, global identifier of an item.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemid","type":"attribute","scope":"HTML:global:generic","tags":["HTML","HTML Microdata","Microdata"]},"itemprop":{"name":"itemprop","status":"living","summary":"The `itemprop` global attribute is used to add properties to an item. Every HTML element can have an `itemprop` attribute specified, and an `itemprop` consists of a name-value pair. Each name-value pair is called a property, and a group of one or more properties forms an item. Property values are either a string or a URL and can be associated with a very wide range of elements including audio, embed, iframe, img, link, object, source , track, and video.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop","type":"attribute","scope":"HTML:global:generic","tags":["HTML","HTML Microdata","Microdata"]},"itemref":{"name":"itemref","status":"living","summary":"Properties that are not descendants of an element with the itemscope attribute can be associated with an item using the global attribute `itemref`.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemref","type":"attribute","scope":"HTML:global:generic","tags":["HTML","HTML Microdata","Microdata"]},"itemscope":{"name":"itemscope","status":"living","summary":"`itemscope` is a boolean global attribute that defines the scope of associated metadata. Specifying the `itemscope` attribute for an element creates a new item, which results in a number of name-value pairs that are associated with the element.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemscope","type":"attribute","scope":"HTML:global:generic","tags":["HTML","HTML Microdata","Microdata"]},"itemtype":{"name":"itemtype","status":"living","summary":"The global attribute `itemtype` specifies the URL of the vocabulary that will be used to define `itemprop`'s (item properties) in the data structure.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemtype","type":"attribute","scope":"HTML:global:generic","tags":["HTML","HTML Microdata","Microdata"]},"lang":{"name":"lang","status":"living","summary":"The `lang` global attribute helps define the language of an element: the language that non-editable elements are written in, or the language that the editable elements should be written in by the user. The attribute contains a single \"language tag\" in the format defined in RFC 5646 \"Tags for Identifying Languages (also known as BCP 47)\".","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"nonce":{"name":"nonce","status":"living","summary":"The `nonce` global attribute is a content attribute defining a cryptographic nonce (\"number used once\") which can be used by Content Security Policy to determine whether or not a given fetch will be allowed to proceed for a given element.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"part":{"name":"part","status":"living","summary":"The `part` global attribute contains a space-separated list of the part names of the element. Part names allows CSS to select and style specific elements in a shadow tree via the ::part pseudo-element.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/part","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"slot":{"name":"slot","status":"living","summary":"The `slot` global attribute assigns a slot in a shadow DOM shadow tree to an element: An element with a `slot` attribute is assigned to the slot created by the slot element whose name attribute's value matches that `slot` attribute's value.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"spellcheck":{"name":"spellcheck","status":"living","summary":"The `spellcheck` global attribute is an enumerated attribute defines whether the element may be checked for spelling errors.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"style":{"name":"style","status":"living","summary":"The `style` global attribute contains CSS styling declarations to be applied to the element. Note that it is recommended for styles to be defined in a separate file or files. This attribute and the style element have mainly the purpose of allowing for quick styling, for example for testing purposes.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"tabindex":{"name":"tabindex","status":"living","summary":"The `tabindex` global attribute indicates that its element can be focused, and where it participates in sequential keyboard navigation (usually with the <kbd>Tab</kbd> key, hence the name).","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"title":{"name":"title","status":"living","summary":"The `title` global attribute contains text representing advisory information related to the element it belongs to.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"translate":{"name":"translate","status":"living","summary":"The `translate` global attribute is an enumerated attribute that is used to specify whether an element's translatable attribute values and its Text node children should be translated when the page is localized, or whether to leave them unchanged.","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/translate","type":"attribute","scope":"HTML:global:generic","tags":["HTML"]},"onabort":{"name":"onabort","status":"living","summary":"The `onabort` property of the GlobalEventHandlers mixin is the event handler for processing `abort` events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onabort","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property","Window"],"page-type":"web-api-instance-property"},"onautocomplete":{"name":"onautocomplete","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onautocompleteerror":{"name":"onautocompleteerror","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onblur":{"name":"onblur","status":"living","summary":"The `onblur` property of the GlobalEventHandlers mixin is the event handler for processing blur events. It's available on Element, Document, and Window.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onblur","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"oncancel":{"name":"oncancel","status":"living","summary":"The `oncancel` property of the GlobalEventHandlers mixin is an event handler for processing cancel events sent to a dialog element.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncancel","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Dialog","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"oncanplay":{"name":"oncanplay","status":"living","summary":"The `oncanplay` property of the GlobalEventHandlers mixin is the event handler for processing canplay events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplay","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"oncanplaythrough":{"name":"oncanplaythrough","status":"living","summary":"The `oncanplaythrough` property of the GlobalEventHandlers mixin is the event handler for processing canplaythrough events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplaythrough","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onchange":{"name":"onchange","status":"living","summary":"The `onchange` property of the GlobalEventHandlers mixin is an event handler for processing change events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onchange","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onclick":{"name":"onclick","status":"living","summary":"The `onclick` property of the GlobalEventHandlers mixin is the event handler for processing Element/click_event events on a given element.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onclose":{"name":"onclose","status":"experimental","summary":"The `onclose` property of the GlobalEventHandlers mixin is an event handler for processing close events sent to a dialog element.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclose","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Dialog","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"oncontextmenu":{"name":"oncontextmenu","status":"living","summary":"The `oncontextmenu` property of the GlobalEventHandlers mixin is an event handler that processes contextmenu events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncontextmenu","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"oncuechange":{"name":"oncuechange","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"ondblclick":{"name":"ondblclick","status":"living","summary":"The `ondblclick` property of the GlobalEventHandlers mixin is an event handler that processes dblclick events on the given element.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondblclick","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"ondrag":{"name":"ondrag","status":"living","summary":"A global event handler for the HTMLElement/drag_event event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrag","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","HTML DOM","drag and drop"],"page-type":"web-api-instance-property"},"ondragend":{"name":"ondragend","status":"living","summary":"A global event handler for the HTMLElement/dragend_event event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragend","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","HTML DOM","drag and drop"],"page-type":"web-api-instance-property"},"ondragenter":{"name":"ondragenter","status":"living","summary":"A global event handler for the HTMLElement/dragenter_event event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragenter","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","HTML DOM","drag and drop"],"page-type":"web-api-instance-property"},"ondragleave":{"name":"ondragleave","status":"living","summary":"A global event handler for the HTMLElement/dragleave_event event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragleave","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","HTML DOM","drag and drop"],"page-type":"web-api-instance-property"},"ondragover":{"name":"ondragover","status":"living","summary":"A global event handler for the HTMLElement/dragover_event event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragover","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","HTML DOM","drag and drop"],"page-type":"web-api-instance-property"},"ondragstart":{"name":"ondragstart","status":"living","summary":"A global event handler for the HTMLElement/dragstart_event event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragstart","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","HTML DOM","drag and drop"],"page-type":"web-api-instance-property"},"ondrop":{"name":"ondrop","status":"living","summary":"A global event handler for the HTMLElement/drop_event event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","HTML DOM","drag and drop"],"page-type":"web-api-instance-property"},"ondurationchange":{"name":"ondurationchange","status":"living","summary":"The `ondurationchange` property of the GlobalEventHandlers mixin is the event handler for processing durationchange events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondurationchange","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onemptied":{"name":"onemptied","status":"living","summary":"The `onemptied` property sets and returns the event handler for the `emptied` event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onemptied","type":"attribute","scope":"HTML:global:eventhandler","tags":[],"page-type":"web-api-instance-property"},"onended":{"name":"onended","status":"living","summary":"The `onended` property of the GlobalEventHandlers mixin is the event handler for processing ended events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onended","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onerror":{"name":"onerror","status":"living","summary":"The `onerror` property of the GlobalEventHandlers mixin is an event handler that processes `error` events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onfocus":{"name":"onfocus","status":"living","summary":"The `onfocus` property of the GlobalEventHandlers mixin is an event handler that processes focus events on the given element.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onfocus","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"oninput":{"name":"oninput","status":"living","summary":"The `oninput` property of the GlobalEventHandlers mixin is an event handler that processes input events on the input, select, and textarea elements. It also handles these events on elements where {{domxref(\"HTMLElement.contentEditable\",","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninput","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"oninvalid":{"name":"oninvalid","status":"living","summary":"The `oninvalid` property of the GlobalEventHandlers mixin is an event handler that processes invalid events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninvalid","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onkeydown":{"name":"onkeydown","status":"living","summary":"The `onkeydown` property of the GlobalEventHandlers mixin is an event handler that processes keydown events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeydown","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property","events"],"page-type":"web-api-instance-property"},"onkeypress":{"name":"onkeypress","status":"deprecated","summary":"The `onkeypress` property of the GlobalEventHandlers mixin is an event handler that processes keypress events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeypress","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onkeyup":{"name":"onkeyup","status":"living","summary":"The `onkeyup` property of the GlobalEventHandlers mixin is an event handler that processes keyup events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeyup","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onload":{"name":"onload","status":"living","summary":"The `onload` property of the GlobalEventHandlers mixin is an event handler that processes Window/load_event events on a Window, XMLHttpRequest, img element, etc.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onload","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onloadeddata":{"name":"onloadeddata","status":"living","summary":"The `onloadeddata` property of the GlobalEventHandlers mixin is the event handler for processing loadeddata events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadeddata","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onloadedmetadata":{"name":"onloadedmetadata","status":"living","summary":"The `onloadedmetadata` property of the GlobalEventHandlers mixin is the event handler for processing loadedmetadata events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadedmetadata","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onloadstart":{"name":"onloadstart","status":"living","summary":"The `onloadstart` property of the GlobalEventHandlers mixin is an event handler representing the code to be called when the loadstart event is raised (when progress has begun on the loading of a resource.)","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadstart","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property","events"],"page-type":"web-api-instance-property"},"onmousedown":{"name":"onmousedown","status":"living","summary":"The `onmousedown` property of the GlobalEventHandlers mixin is an event handler that processes mousedown events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousedown","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onmouseenter":{"name":"onmouseenter","status":"living","summary":"The `onmouseenter` property of the GlobalEventHandlers mixin is the event handler for processing mouseenter events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseenter","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onmouseleave":{"name":"onmouseleave","status":"living","summary":"The `onmouseleave` property of the GlobalEventHandlers mixin is the event handler for processing mouseleave events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseleave","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onmousemove":{"name":"onmousemove","status":"living","summary":"The `onmousemove` property of the GlobalEventHandlers mixin is an event handler that processes mousemove events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousemove","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onmouseout":{"name":"onmouseout","status":"living","summary":"The `onmouseout` property of the GlobalEventHandlers mixin is an event handler that processes mouseout events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseout","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onmouseover":{"name":"onmouseover","status":"living","summary":"The `onmouseover` property of the GlobalEventHandlers mixin is an event handler that processes mouseover events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseover","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onmouseup":{"name":"onmouseup","status":"living","summary":"The `onmouseup` property of the GlobalEventHandlers mixin is an event handler that processes mouseup events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseup","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onmousewheel":{"name":"onmousewheel","status":"deprecated","summary":"The onmousewheel property sets and returns the event handler for the mousewheel event.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousewheel","type":"attribute","scope":"HTML:global:eventhandler","tags":[],"page-type":"web-api-instance-property"},"onpause":{"name":"onpause","status":"living","summary":"The `onpause` property of the GlobalEventHandlers mixin is the event handler for processing pause events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpause","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onplay":{"name":"onplay","status":"living","summary":"The `onplay` property of the GlobalEventHandlers mixin is the event handler for processing play events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplay","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onplaying":{"name":"onplaying","status":"living","summary":"The `onplaying` property of the GlobalEventHandlers mixin is the event handler for processing playing events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplaying","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","Property"],"page-type":"web-api-instance-property"},"onprogress":{"name":"onprogress","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onratechange":{"name":"onratechange","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onreset":{"name":"onreset","status":"living","summary":"The `onreset` property of the GlobalEventHandlers mixin is an event handler that processes reset events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onreset","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onresize":{"name":"onresize","status":"living","summary":"The `onresize` property of the GlobalEventHandlers interface is an event handler that processes `resize` events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onresize","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onscroll":{"name":"onscroll","status":"living","summary":"The `onscroll` property of the GlobalEventHandlers mixin is an event handler that processes `scroll` events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onscroll","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onseeked":{"name":"onseeked","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onseeking":{"name":"onseeking","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onselect":{"name":"onselect","status":"living","summary":"The `onselect` property of the GlobalEventHandlers mixin is an event handler that processes `select` events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselect","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onshow":{"name":"onshow","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onsort":{"name":"onsort","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onstalled":{"name":"onstalled","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onsubmit":{"name":"onsubmit","status":"living","summary":"The `onsubmit` property of the GlobalEventHandlers mixin is an event handler that processes submit events.","url":"https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onsubmit","type":"attribute","scope":"HTML:global:eventhandler","tags":["API","Event Handler","GlobalEventHandlers","HTML DOM","Property"],"page-type":"web-api-instance-property"},"onsuspend":{"name":"onsuspend","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"ontimeupdate":{"name":"ontimeupdate","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"ontoggle":{"name":"ontoggle","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onvolumechange":{"name":"onvolumechange","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"onwaiting":{"name":"onwaiting","status":"living","summary":"","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes","type":"attribute","scope":"HTML:global:eventhandler","tags":[]},"role":{"name":"role","status":"living","summary":"ARIA roles provide semantic meaning to content, allowing screen readers and other tools to present and support interaction with object in a way that is consistent with user expectations of that type of object. ARIA roles can be used to describe elements that don't natively exist in HTML or exist but don't yet have full browser support.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles","type":"attribute","scope":"HTML:global:aria","tags":["ARIA","ARIA Roles","Accessibility","Roles"]},"aria-atomic":{"name":"aria-atomic","status":"living","summary":"In ARIA live regions, the global `aria-atomic` attribute indicates whether assistive technologies such as a screen reader will present all, or only parts of, the changed region based on the change notifications defined by the `aria-relevant` attribute.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-atomic","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-atomic"},"aria-busy":{"name":"aria-busy","status":"living","summary":"Used in ARIA live regions, the global `aria-busy` state indicates an element is being modified and that assistive technologies may want to wait until the changes are complete before informing the user about the update.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-busy","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","aria live regions","aria state"],"spec-urls":["https://w3c.github.io/aria/#aria-busy","https://w3c.github.io/aria-practices/#feed"]},"aria-controls":{"name":"aria-controls","status":"living","summary":"The global `aria-controls` property identifies the element (or elements) whose contents or presence are controlled by the element on which this attribute is set.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-controls"},"aria-current":{"name":"aria-current","status":"living","summary":"A non-null `aria-current` state on an element indicates that this element represents the current item within a container or set of related elements.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-current"},"aria-describedby":{"name":"aria-describedby","status":"living","summary":"The global `aria-describedby` attribute identifies the element (or elements) that describes the element on which the attribute is set.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-describedby","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":["https://w3c.github.io/aria/#aria-describedby","https://w3c.github.io/aria-practices/#describing_with_aria-describedby"]},"aria-description":{"name":"aria-description","status":"living","summary":"The global `aria-description` attribute defines a string value that describes or annotates the current element.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-description","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-description"},"aria-details":{"name":"aria-details","status":"living","summary":"The global `aria-details` attribute identifies the element (or elements) that provide additional information related to the object.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-details","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property","longdesc"],"spec-urls":"https://w3c.github.io/aria/#aria-details"},"aria-disabled":{"name":"aria-disabled","status":"living","summary":"The `aria-disabled` state indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-disabled","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-disabled"},"aria-dropeffect":{"name":"aria-dropeffect","status":"deprecated","summary":"The global `aria-dropeffect` attribute indicates what functions may be performed when a dragged object is released on the drop target.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-dropeffect","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property","drag and drop"],"spec-urls":"https://w3c.github.io/aria/#aria-dropeffect"},"aria-errormessage":{"name":"aria-errormessage","status":"living","summary":"The `aria-errormessage` attribute on an object identifies the element that provides an error message for that object.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-errormessage","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-errormessage"},"aria-flowto":{"name":"aria-flowto","status":"living","summary":"The global `aria-flowto` attribute identifies the next element (or elements) in an alternate reading order of content. This allows assistive technology to override the general default of reading in document source order at the user's discretion.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-flowto","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-flowto"},"aria-grabbed":{"name":"aria-grabbed","status":"deprecated","summary":"The `aria-grabbed` state indicates an element's \"grabbed\" state in a drag-and-drop operation.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-grabbed","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-grabbed"},"aria-haspopup":{"name":"aria-haspopup","status":"living","summary":"The `aria-haspopup` attribute indicates the availability and type of interactive popup element that can be triggered by the element on which the attribute is set.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-haspopup"},"aria-hidden":{"name":"aria-hidden","status":"living","summary":"The `aria-hidden` state indicates whether the element is exposed to an accessibility API.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-hidden","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-hidden"},"aria-invalid":{"name":"aria-invalid","status":"living","summary":"The `aria-invalid` state indicates the entered value does not conform to the format expected by the application.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-invalid","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-invalid"},"aria-keyshortcuts":{"name":"aria-keyshortcuts","status":"living","summary":"The global `aria-keyshortcuts` attribute indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-keyshortcuts","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":["https://w3c.github.io/aria/#aria-keyshortcuts","https://w3c.github.io/aria-practices/#kbd_shortcuts"]},"aria-label":{"name":"aria-label","status":"living","summary":"The `aria-label` attribute defines a string value that labels an interactive element.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-label"},"aria-labelledby":{"name":"aria-labelledby","status":"living","summary":"The `aria-labelledby` attribute identifies the element (or elements) that labels the element it is applied to.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-labelledby","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-labelledby"},"aria-live":{"name":"aria-live","status":"living","summary":"The global `aria-live` attribute indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-live","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-live"},"aria-owns":{"name":"aria-owns","status":"living","summary":"The `aria-owns` attribute identifies an element (or elements) in order to define a visual, functional, or contextual relationship between a parent and its child elements when the DOM hierarchy cannot be used to represent the relationship.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-owns","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-owns"},"aria-relevant":{"name":"aria-relevant","status":"living","summary":"Used in ARIA live regions, the global `aria-relevant` attribute indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-relevant","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-relevant"},"aria-roledescription":{"name":"aria-roledescription","status":"living","summary":"The `aria-roledescription` attribute defines a human-readable, author-localized description for the role of an element.","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-roledescription","type":"attribute","scope":"HTML:global:aria","tags":["Accessibility","ARIA","ARIA attribute","ARIA property"],"spec-urls":"https://w3c.github.io/aria/#aria-roledescription"}},"svg":{"class":{"name":"class","status":"living","summary":"Assigns a class name or set of class names to an element. You may assign the same class name or names to any number of elements, however, multiple class names must be separated by whitespace characters.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/class","type":"attribute","scope":"SVG:global:styling","tags":["SVG","SVG Attribute"]},"style":{"name":"style","status":"living","summary":"The `style` attribute allows to style an element using CSS declarations. It functions identically to the `style` attribute in HTML.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/style","type":"attribute","scope":"SVG:global:styling","tags":["SVG","SVG Attribute"]},"id":{"name":"id","status":"living","summary":"The `id` attribute assigns a unique name to an element.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/id","type":"attribute","scope":"SVG:global:core","tags":["SVG","SVG Attribute"]},"lang":{"name":"lang","status":"living","summary":"The `lang` attribute specifies the primary language used in contents and attributes containing text content of particular elements.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/lang","type":"attribute","scope":"SVG:global:core","tags":["SVG","SVG Attribute"]},"tabindex":{"name":"tabindex","status":"living","summary":"The `tabindex` attribute allows you to control whether an element is focusable and to define the relative order of the element for the purposes of sequential focus navigation.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/tabindex","type":"attribute","scope":"SVG:global:core","tags":["SVG","SVG Attribute"]},"xml:base":{"name":"xml:base","status":"deprecated","summary":"The `xml:base` attribute specifies a base IRI other than the base IRI of the document or external entity.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:base","type":"attribute","scope":"SVG:global:core","tags":["SVG","SVG Attribute"]},"xml:lang":{"name":"xml:lang","status":"living","summary":"The `xml:lang` attribute specifies the primary language used in contents and attributes containing text content of particular elements.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:lang","type":"attribute","scope":"SVG:global:core","tags":["SVG","SVG Attribute"]},"xml:space":{"name":"xml:space","status":"living","summary":"SVG supports the built-in XML `xml:space` attribute to handle whitespace characters inside elements. Child elements inside an element may also have an `xml:space` attribute that overrides the parent's one.","url":"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xml:space","type":"attribute","scope":"SVG:global:core","tags":["SVG","SVG Attribute"]}}}
